/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.epic.soj.common.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Trackable extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8172898798649826057L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Trackable\",\"namespace\":\"com.ebay.epic.soj.common.model\",\"fields\":[{\"name\":\"trackableId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"parentTrackableId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"entityId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"instanceId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"correlationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"screenId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Trackable> ENCODER =
      new BinaryMessageEncoder<Trackable>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Trackable> DECODER =
      new BinaryMessageDecoder<Trackable>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Trackable> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Trackable> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Trackable>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Trackable to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Trackable from a ByteBuffer. */
  public static Trackable fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public String trackableId;
  @Deprecated public String parentTrackableId;
  @Deprecated public String entityId;
  @Deprecated public String instanceId;
  @Deprecated public String description;
  @Deprecated public String correlationId;
  @Deprecated public String screenId;
  @Deprecated public String entityType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Trackable() {}

  /**
   * All-args constructor.
   * @param trackableId The new value for trackableId
   * @param parentTrackableId The new value for parentTrackableId
   * @param entityId The new value for entityId
   * @param instanceId The new value for instanceId
   * @param description The new value for description
   * @param correlationId The new value for correlationId
   * @param screenId The new value for screenId
   * @param entityType The new value for entityType
   */
  public Trackable(String trackableId, String parentTrackableId, String entityId, String instanceId, String description, String correlationId, String screenId, String entityType) {
    this.trackableId = trackableId;
    this.parentTrackableId = parentTrackableId;
    this.entityId = entityId;
    this.instanceId = instanceId;
    this.description = description;
    this.correlationId = correlationId;
    this.screenId = screenId;
    this.entityType = entityType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return trackableId;
    case 1: return parentTrackableId;
    case 2: return entityId;
    case 3: return instanceId;
    case 4: return description;
    case 5: return correlationId;
    case 6: return screenId;
    case 7: return entityType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: trackableId = (String)value$; break;
    case 1: parentTrackableId = (String)value$; break;
    case 2: entityId = (String)value$; break;
    case 3: instanceId = (String)value$; break;
    case 4: description = (String)value$; break;
    case 5: correlationId = (String)value$; break;
    case 6: screenId = (String)value$; break;
    case 7: entityType = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'trackableId' field.
   * @return The value of the 'trackableId' field.
   */
  public String getTrackableId() {
    return trackableId;
  }

  /**
   * Sets the value of the 'trackableId' field.
   * @param value the value to set.
   */
  public void setTrackableId(String value) {
    this.trackableId = value;
  }

  /**
   * Gets the value of the 'parentTrackableId' field.
   * @return The value of the 'parentTrackableId' field.
   */
  public String getParentTrackableId() {
    return parentTrackableId;
  }

  /**
   * Sets the value of the 'parentTrackableId' field.
   * @param value the value to set.
   */
  public void setParentTrackableId(String value) {
    this.parentTrackableId = value;
  }

  /**
   * Gets the value of the 'entityId' field.
   * @return The value of the 'entityId' field.
   */
  public String getEntityId() {
    return entityId;
  }

  /**
   * Sets the value of the 'entityId' field.
   * @param value the value to set.
   */
  public void setEntityId(String value) {
    this.entityId = value;
  }

  /**
   * Gets the value of the 'instanceId' field.
   * @return The value of the 'instanceId' field.
   */
  public String getInstanceId() {
    return instanceId;
  }

  /**
   * Sets the value of the 'instanceId' field.
   * @param value the value to set.
   */
  public void setInstanceId(String value) {
    this.instanceId = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'correlationId' field.
   * @return The value of the 'correlationId' field.
   */
  public String getCorrelationId() {
    return correlationId;
  }

  /**
   * Sets the value of the 'correlationId' field.
   * @param value the value to set.
   */
  public void setCorrelationId(String value) {
    this.correlationId = value;
  }

  /**
   * Gets the value of the 'screenId' field.
   * @return The value of the 'screenId' field.
   */
  public String getScreenId() {
    return screenId;
  }

  /**
   * Sets the value of the 'screenId' field.
   * @param value the value to set.
   */
  public void setScreenId(String value) {
    this.screenId = value;
  }

  /**
   * Gets the value of the 'entityType' field.
   * @return The value of the 'entityType' field.
   */
  public String getEntityType() {
    return entityType;
  }

  /**
   * Sets the value of the 'entityType' field.
   * @param value the value to set.
   */
  public void setEntityType(String value) {
    this.entityType = value;
  }

  /**
   * Creates a new Trackable RecordBuilder.
   * @return A new Trackable RecordBuilder
   */
  public static com.ebay.epic.soj.common.model.Trackable.Builder newBuilder() {
    return new com.ebay.epic.soj.common.model.Trackable.Builder();
  }

  /**
   * Creates a new Trackable RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Trackable RecordBuilder
   */
  public static com.ebay.epic.soj.common.model.Trackable.Builder newBuilder(com.ebay.epic.soj.common.model.Trackable.Builder other) {
    return new com.ebay.epic.soj.common.model.Trackable.Builder(other);
  }

  /**
   * Creates a new Trackable RecordBuilder by copying an existing Trackable instance.
   * @param other The existing instance to copy.
   * @return A new Trackable RecordBuilder
   */
  public static com.ebay.epic.soj.common.model.Trackable.Builder newBuilder(com.ebay.epic.soj.common.model.Trackable other) {
    return new com.ebay.epic.soj.common.model.Trackable.Builder(other);
  }

  /**
   * RecordBuilder for Trackable instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Trackable>
    implements org.apache.avro.data.RecordBuilder<Trackable> {

    private String trackableId;
    private String parentTrackableId;
    private String entityId;
    private String instanceId;
    private String description;
    private String correlationId;
    private String screenId;
    private String entityType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.epic.soj.common.model.Trackable.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.trackableId)) {
        this.trackableId = data().deepCopy(fields()[0].schema(), other.trackableId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.parentTrackableId)) {
        this.parentTrackableId = data().deepCopy(fields()[1].schema(), other.parentTrackableId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityId)) {
        this.entityId = data().deepCopy(fields()[2].schema(), other.entityId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.instanceId)) {
        this.instanceId = data().deepCopy(fields()[3].schema(), other.instanceId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[5].schema(), other.correlationId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.screenId)) {
        this.screenId = data().deepCopy(fields()[6].schema(), other.screenId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.entityType)) {
        this.entityType = data().deepCopy(fields()[7].schema(), other.entityType);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Trackable instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.epic.soj.common.model.Trackable other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.trackableId)) {
        this.trackableId = data().deepCopy(fields()[0].schema(), other.trackableId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.parentTrackableId)) {
        this.parentTrackableId = data().deepCopy(fields()[1].schema(), other.parentTrackableId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityId)) {
        this.entityId = data().deepCopy(fields()[2].schema(), other.entityId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.instanceId)) {
        this.instanceId = data().deepCopy(fields()[3].schema(), other.instanceId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[5].schema(), other.correlationId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.screenId)) {
        this.screenId = data().deepCopy(fields()[6].schema(), other.screenId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.entityType)) {
        this.entityType = data().deepCopy(fields()[7].schema(), other.entityType);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'trackableId' field.
      * @return The value.
      */
    public String getTrackableId() {
      return trackableId;
    }

    /**
      * Sets the value of the 'trackableId' field.
      * @param value The value of 'trackableId'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setTrackableId(String value) {
      validate(fields()[0], value);
      this.trackableId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'trackableId' field has been set.
      * @return True if the 'trackableId' field has been set, false otherwise.
      */
    public boolean hasTrackableId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'trackableId' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearTrackableId() {
      trackableId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentTrackableId' field.
      * @return The value.
      */
    public String getParentTrackableId() {
      return parentTrackableId;
    }

    /**
      * Sets the value of the 'parentTrackableId' field.
      * @param value The value of 'parentTrackableId'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setParentTrackableId(String value) {
      validate(fields()[1], value);
      this.parentTrackableId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'parentTrackableId' field has been set.
      * @return True if the 'parentTrackableId' field has been set, false otherwise.
      */
    public boolean hasParentTrackableId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'parentTrackableId' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearParentTrackableId() {
      parentTrackableId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'entityId' field.
      * @return The value.
      */
    public String getEntityId() {
      return entityId;
    }

    /**
      * Sets the value of the 'entityId' field.
      * @param value The value of 'entityId'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setEntityId(String value) {
      validate(fields()[2], value);
      this.entityId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'entityId' field has been set.
      * @return True if the 'entityId' field has been set, false otherwise.
      */
    public boolean hasEntityId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'entityId' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearEntityId() {
      entityId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'instanceId' field.
      * @return The value.
      */
    public String getInstanceId() {
      return instanceId;
    }

    /**
      * Sets the value of the 'instanceId' field.
      * @param value The value of 'instanceId'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setInstanceId(String value) {
      validate(fields()[3], value);
      this.instanceId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'instanceId' field has been set.
      * @return True if the 'instanceId' field has been set, false otherwise.
      */
    public boolean hasInstanceId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'instanceId' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearInstanceId() {
      instanceId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public String getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setDescription(String value) {
      validate(fields()[4], value);
      this.description = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearDescription() {
      description = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'correlationId' field.
      * @return The value.
      */
    public String getCorrelationId() {
      return correlationId;
    }

    /**
      * Sets the value of the 'correlationId' field.
      * @param value The value of 'correlationId'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setCorrelationId(String value) {
      validate(fields()[5], value);
      this.correlationId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'correlationId' field has been set.
      * @return True if the 'correlationId' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'correlationId' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearCorrelationId() {
      correlationId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'screenId' field.
      * @return The value.
      */
    public String getScreenId() {
      return screenId;
    }

    /**
      * Sets the value of the 'screenId' field.
      * @param value The value of 'screenId'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setScreenId(String value) {
      validate(fields()[6], value);
      this.screenId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'screenId' field has been set.
      * @return True if the 'screenId' field has been set, false otherwise.
      */
    public boolean hasScreenId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'screenId' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearScreenId() {
      screenId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'entityType' field.
      * @return The value.
      */
    public String getEntityType() {
      return entityType;
    }

    /**
      * Sets the value of the 'entityType' field.
      * @param value The value of 'entityType'.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder setEntityType(String value) {
      validate(fields()[7], value);
      this.entityType = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'entityType' field has been set.
      * @return True if the 'entityType' field has been set, false otherwise.
      */
    public boolean hasEntityType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'entityType' field.
      * @return This builder.
      */
    public com.ebay.epic.soj.common.model.Trackable.Builder clearEntityType() {
      entityType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Trackable build() {
      try {
        Trackable record = new Trackable();
        record.trackableId = fieldSetFlags()[0] ? this.trackableId : (String) defaultValue(fields()[0]);
        record.parentTrackableId = fieldSetFlags()[1] ? this.parentTrackableId : (String) defaultValue(fields()[1]);
        record.entityId = fieldSetFlags()[2] ? this.entityId : (String) defaultValue(fields()[2]);
        record.instanceId = fieldSetFlags()[3] ? this.instanceId : (String) defaultValue(fields()[3]);
        record.description = fieldSetFlags()[4] ? this.description : (String) defaultValue(fields()[4]);
        record.correlationId = fieldSetFlags()[5] ? this.correlationId : (String) defaultValue(fields()[5]);
        record.screenId = fieldSetFlags()[6] ? this.screenId : (String) defaultValue(fields()[6]);
        record.entityType = fieldSetFlags()[7] ? this.entityType : (String) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Trackable>
    WRITER$ = (org.apache.avro.io.DatumWriter<Trackable>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Trackable>
    READER$ = (org.apache.avro.io.DatumReader<Trackable>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
