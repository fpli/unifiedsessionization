/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.ebayanalytics.globalevent;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class GlobalEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -327445872849194494L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GlobalEvent\",\"namespace\":\"org.ebayanalytics.globalevent\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"dataSrc\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"surface\"},{\"name\":\"snapshotVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customEventIds\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"assetType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"guid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"eventTime\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"eventTrigger\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customEventTriggers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"eventPrimaryAsset\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customEventPrimaryAssets\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"label\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"activityDtl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dwell\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"eventLevel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"experience\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pageId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"pageUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"payload\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"referer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pageName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pageGroupId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"pageGroupName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pageGroupDesc\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"elementId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"elementName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"moduleId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"moduleName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"moduleDesc\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"clickId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"clickName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"clickDesc\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"destinationUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"imageUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"elementLabel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"elementSelectorPath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"itemId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"siteId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"dt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bizDtl\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"trackableId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sessionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"correlationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"screenId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ratio\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"userAgent\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userLang\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"screenWidth\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"screenHeight\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"viewportWidth\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"viewportHeight\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"pageLoad\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"ttfb\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"itemDtl\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GlobalEvent> ENCODER =
      new BinaryMessageEncoder<GlobalEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GlobalEvent> DECODER =
      new BinaryMessageDecoder<GlobalEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<GlobalEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<GlobalEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GlobalEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this GlobalEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a GlobalEvent from a ByteBuffer. */
  public static GlobalEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public org.ebayanalytics.globalevent.RheosHeader rheosHeader;
  @Deprecated public java.lang.String dataSrc;
  @Deprecated public java.lang.String snapshotVersion;
  @Deprecated public java.lang.String eventId;
  @Deprecated public java.util.List<java.lang.String> customEventIds;
  @Deprecated public java.lang.String assetType;
  @Deprecated public java.lang.String guid;
  @Deprecated public java.lang.Long userId;
  @Deprecated public java.lang.Long eventTime;
  @Deprecated public java.lang.String eventTrigger;
  @Deprecated public java.util.List<java.lang.String> customEventTriggers;
  @Deprecated public java.lang.String eventPrimaryAsset;
  @Deprecated public java.util.List<java.lang.String> customEventPrimaryAssets;
  @Deprecated public java.lang.String label;
  @Deprecated public java.lang.String activityDtl;
  @Deprecated public java.lang.Long dwell;
  @Deprecated public java.lang.String eventLevel;
  @Deprecated public java.lang.String experience;
  @Deprecated public java.lang.Long pageId;
  @Deprecated public java.lang.String pageUrl;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> payload;
  @Deprecated public java.lang.String referer;
  @Deprecated public java.lang.String pageName;
  @Deprecated public java.lang.Integer pageGroupId;
  @Deprecated public java.lang.String pageGroupName;
  @Deprecated public java.lang.String pageGroupDesc;
  @Deprecated public java.lang.String elementId;
  @Deprecated public java.lang.String elementName;
  @Deprecated public java.lang.Integer moduleId;
  @Deprecated public java.lang.String moduleName;
  @Deprecated public java.lang.String moduleDesc;
  @Deprecated public java.lang.Integer clickId;
  @Deprecated public java.lang.String clickName;
  @Deprecated public java.lang.String clickDesc;
  @Deprecated public java.lang.String destinationUrl;
  @Deprecated public java.lang.String imageUrl;
  @Deprecated public java.lang.String elementLabel;
  @Deprecated public java.lang.String elementSelectorPath;
  @Deprecated public java.lang.Long itemId;
  @Deprecated public java.lang.Integer siteId;
  @Deprecated public java.lang.String dt;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> bizDtl;
  @Deprecated public java.lang.String trackableId;
  @Deprecated public java.lang.String sessionId;
  @Deprecated public java.lang.String correlationId;
  @Deprecated public java.lang.String screenId;
  @Deprecated public java.lang.Double ratio;
  @Deprecated public java.lang.String userAgent;
  @Deprecated public java.lang.String userLang;
  @Deprecated public java.lang.Integer screenWidth;
  @Deprecated public java.lang.Integer screenHeight;
  @Deprecated public java.lang.Integer viewportWidth;
  @Deprecated public java.lang.Integer viewportHeight;
  @Deprecated public java.lang.Long pageLoad;
  @Deprecated public java.lang.Long ttfb;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> itemDtl;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GlobalEvent() {}

  /**
   * All-args constructor.
   * @param rheosHeader The new value for rheosHeader
   * @param dataSrc The new value for dataSrc
   * @param snapshotVersion The new value for snapshotVersion
   * @param eventId The new value for eventId
   * @param customEventIds The new value for customEventIds
   * @param assetType The new value for assetType
   * @param guid The new value for guid
   * @param userId The new value for userId
   * @param eventTime The new value for eventTime
   * @param eventTrigger The new value for eventTrigger
   * @param customEventTriggers The new value for customEventTriggers
   * @param eventPrimaryAsset The new value for eventPrimaryAsset
   * @param customEventPrimaryAssets The new value for customEventPrimaryAssets
   * @param label The new value for label
   * @param activityDtl The new value for activityDtl
   * @param dwell The new value for dwell
   * @param eventLevel The new value for eventLevel
   * @param experience The new value for experience
   * @param pageId The new value for pageId
   * @param pageUrl The new value for pageUrl
   * @param payload The new value for payload
   * @param referer The new value for referer
   * @param pageName The new value for pageName
   * @param pageGroupId The new value for pageGroupId
   * @param pageGroupName The new value for pageGroupName
   * @param pageGroupDesc The new value for pageGroupDesc
   * @param elementId The new value for elementId
   * @param elementName The new value for elementName
   * @param moduleId The new value for moduleId
   * @param moduleName The new value for moduleName
   * @param moduleDesc The new value for moduleDesc
   * @param clickId The new value for clickId
   * @param clickName The new value for clickName
   * @param clickDesc The new value for clickDesc
   * @param destinationUrl The new value for destinationUrl
   * @param imageUrl The new value for imageUrl
   * @param elementLabel The new value for elementLabel
   * @param elementSelectorPath The new value for elementSelectorPath
   * @param itemId The new value for itemId
   * @param siteId The new value for siteId
   * @param dt The new value for dt
   * @param bizDtl The new value for bizDtl
   * @param trackableId The new value for trackableId
   * @param sessionId The new value for sessionId
   * @param correlationId The new value for correlationId
   * @param screenId The new value for screenId
   * @param ratio The new value for ratio
   * @param userAgent The new value for userAgent
   * @param userLang The new value for userLang
   * @param screenWidth The new value for screenWidth
   * @param screenHeight The new value for screenHeight
   * @param viewportWidth The new value for viewportWidth
   * @param viewportHeight The new value for viewportHeight
   * @param pageLoad The new value for pageLoad
   * @param ttfb The new value for ttfb
   * @param itemDtl The new value for itemDtl
   */
  public GlobalEvent(org.ebayanalytics.globalevent.RheosHeader rheosHeader, java.lang.String dataSrc, java.lang.String snapshotVersion, java.lang.String eventId, java.util.List<java.lang.String> customEventIds, java.lang.String assetType, java.lang.String guid, java.lang.Long userId, java.lang.Long eventTime, java.lang.String eventTrigger, java.util.List<java.lang.String> customEventTriggers, java.lang.String eventPrimaryAsset, java.util.List<java.lang.String> customEventPrimaryAssets, java.lang.String label, java.lang.String activityDtl, java.lang.Long dwell, java.lang.String eventLevel, java.lang.String experience, java.lang.Long pageId, java.lang.String pageUrl, java.util.Map<java.lang.String,java.lang.String> payload, java.lang.String referer, java.lang.String pageName, java.lang.Integer pageGroupId, java.lang.String pageGroupName, java.lang.String pageGroupDesc, java.lang.String elementId, java.lang.String elementName, java.lang.Integer moduleId, java.lang.String moduleName, java.lang.String moduleDesc, java.lang.Integer clickId, java.lang.String clickName, java.lang.String clickDesc, java.lang.String destinationUrl, java.lang.String imageUrl, java.lang.String elementLabel, java.lang.String elementSelectorPath, java.lang.Long itemId, java.lang.Integer siteId, java.lang.String dt, java.util.Map<java.lang.String,java.lang.String> bizDtl, java.lang.String trackableId, java.lang.String sessionId, java.lang.String correlationId, java.lang.String screenId, java.lang.Double ratio, java.lang.String userAgent, java.lang.String userLang, java.lang.Integer screenWidth, java.lang.Integer screenHeight, java.lang.Integer viewportWidth, java.lang.Integer viewportHeight, java.lang.Long pageLoad, java.lang.Long ttfb, java.util.Map<java.lang.String,java.lang.String> itemDtl) {
    this.rheosHeader = rheosHeader;
    this.dataSrc = dataSrc;
    this.snapshotVersion = snapshotVersion;
    this.eventId = eventId;
    this.customEventIds = customEventIds;
    this.assetType = assetType;
    this.guid = guid;
    this.userId = userId;
    this.eventTime = eventTime;
    this.eventTrigger = eventTrigger;
    this.customEventTriggers = customEventTriggers;
    this.eventPrimaryAsset = eventPrimaryAsset;
    this.customEventPrimaryAssets = customEventPrimaryAssets;
    this.label = label;
    this.activityDtl = activityDtl;
    this.dwell = dwell;
    this.eventLevel = eventLevel;
    this.experience = experience;
    this.pageId = pageId;
    this.pageUrl = pageUrl;
    this.payload = payload;
    this.referer = referer;
    this.pageName = pageName;
    this.pageGroupId = pageGroupId;
    this.pageGroupName = pageGroupName;
    this.pageGroupDesc = pageGroupDesc;
    this.elementId = elementId;
    this.elementName = elementName;
    this.moduleId = moduleId;
    this.moduleName = moduleName;
    this.moduleDesc = moduleDesc;
    this.clickId = clickId;
    this.clickName = clickName;
    this.clickDesc = clickDesc;
    this.destinationUrl = destinationUrl;
    this.imageUrl = imageUrl;
    this.elementLabel = elementLabel;
    this.elementSelectorPath = elementSelectorPath;
    this.itemId = itemId;
    this.siteId = siteId;
    this.dt = dt;
    this.bizDtl = bizDtl;
    this.trackableId = trackableId;
    this.sessionId = sessionId;
    this.correlationId = correlationId;
    this.screenId = screenId;
    this.ratio = ratio;
    this.userAgent = userAgent;
    this.userLang = userLang;
    this.screenWidth = screenWidth;
    this.screenHeight = screenHeight;
    this.viewportWidth = viewportWidth;
    this.viewportHeight = viewportHeight;
    this.pageLoad = pageLoad;
    this.ttfb = ttfb;
    this.itemDtl = itemDtl;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rheosHeader;
    case 1: return dataSrc;
    case 2: return snapshotVersion;
    case 3: return eventId;
    case 4: return customEventIds;
    case 5: return assetType;
    case 6: return guid;
    case 7: return userId;
    case 8: return eventTime;
    case 9: return eventTrigger;
    case 10: return customEventTriggers;
    case 11: return eventPrimaryAsset;
    case 12: return customEventPrimaryAssets;
    case 13: return label;
    case 14: return activityDtl;
    case 15: return dwell;
    case 16: return eventLevel;
    case 17: return experience;
    case 18: return pageId;
    case 19: return pageUrl;
    case 20: return payload;
    case 21: return referer;
    case 22: return pageName;
    case 23: return pageGroupId;
    case 24: return pageGroupName;
    case 25: return pageGroupDesc;
    case 26: return elementId;
    case 27: return elementName;
    case 28: return moduleId;
    case 29: return moduleName;
    case 30: return moduleDesc;
    case 31: return clickId;
    case 32: return clickName;
    case 33: return clickDesc;
    case 34: return destinationUrl;
    case 35: return imageUrl;
    case 36: return elementLabel;
    case 37: return elementSelectorPath;
    case 38: return itemId;
    case 39: return siteId;
    case 40: return dt;
    case 41: return bizDtl;
    case 42: return trackableId;
    case 43: return sessionId;
    case 44: return correlationId;
    case 45: return screenId;
    case 46: return ratio;
    case 47: return userAgent;
    case 48: return userLang;
    case 49: return screenWidth;
    case 50: return screenHeight;
    case 51: return viewportWidth;
    case 52: return viewportHeight;
    case 53: return pageLoad;
    case 54: return ttfb;
    case 55: return itemDtl;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rheosHeader = (org.ebayanalytics.globalevent.RheosHeader)value$; break;
    case 1: dataSrc = (java.lang.String)value$; break;
    case 2: snapshotVersion = (java.lang.String)value$; break;
    case 3: eventId = (java.lang.String)value$; break;
    case 4: customEventIds = (java.util.List<java.lang.String>)value$; break;
    case 5: assetType = (java.lang.String)value$; break;
    case 6: guid = (java.lang.String)value$; break;
    case 7: userId = (java.lang.Long)value$; break;
    case 8: eventTime = (java.lang.Long)value$; break;
    case 9: eventTrigger = (java.lang.String)value$; break;
    case 10: customEventTriggers = (java.util.List<java.lang.String>)value$; break;
    case 11: eventPrimaryAsset = (java.lang.String)value$; break;
    case 12: customEventPrimaryAssets = (java.util.List<java.lang.String>)value$; break;
    case 13: label = (java.lang.String)value$; break;
    case 14: activityDtl = (java.lang.String)value$; break;
    case 15: dwell = (java.lang.Long)value$; break;
    case 16: eventLevel = (java.lang.String)value$; break;
    case 17: experience = (java.lang.String)value$; break;
    case 18: pageId = (java.lang.Long)value$; break;
    case 19: pageUrl = (java.lang.String)value$; break;
    case 20: payload = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 21: referer = (java.lang.String)value$; break;
    case 22: pageName = (java.lang.String)value$; break;
    case 23: pageGroupId = (java.lang.Integer)value$; break;
    case 24: pageGroupName = (java.lang.String)value$; break;
    case 25: pageGroupDesc = (java.lang.String)value$; break;
    case 26: elementId = (java.lang.String)value$; break;
    case 27: elementName = (java.lang.String)value$; break;
    case 28: moduleId = (java.lang.Integer)value$; break;
    case 29: moduleName = (java.lang.String)value$; break;
    case 30: moduleDesc = (java.lang.String)value$; break;
    case 31: clickId = (java.lang.Integer)value$; break;
    case 32: clickName = (java.lang.String)value$; break;
    case 33: clickDesc = (java.lang.String)value$; break;
    case 34: destinationUrl = (java.lang.String)value$; break;
    case 35: imageUrl = (java.lang.String)value$; break;
    case 36: elementLabel = (java.lang.String)value$; break;
    case 37: elementSelectorPath = (java.lang.String)value$; break;
    case 38: itemId = (java.lang.Long)value$; break;
    case 39: siteId = (java.lang.Integer)value$; break;
    case 40: dt = (java.lang.String)value$; break;
    case 41: bizDtl = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 42: trackableId = (java.lang.String)value$; break;
    case 43: sessionId = (java.lang.String)value$; break;
    case 44: correlationId = (java.lang.String)value$; break;
    case 45: screenId = (java.lang.String)value$; break;
    case 46: ratio = (java.lang.Double)value$; break;
    case 47: userAgent = (java.lang.String)value$; break;
    case 48: userLang = (java.lang.String)value$; break;
    case 49: screenWidth = (java.lang.Integer)value$; break;
    case 50: screenHeight = (java.lang.Integer)value$; break;
    case 51: viewportWidth = (java.lang.Integer)value$; break;
    case 52: viewportHeight = (java.lang.Integer)value$; break;
    case 53: pageLoad = (java.lang.Long)value$; break;
    case 54: ttfb = (java.lang.Long)value$; break;
    case 55: itemDtl = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field.
   * @return The value of the 'rheosHeader' field.
   */
  public org.ebayanalytics.globalevent.RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field.
   * @param value the value to set.
   */
  public void setRheosHeader(org.ebayanalytics.globalevent.RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'dataSrc' field.
   * @return The value of the 'dataSrc' field.
   */
  public java.lang.String getDataSrc() {
    return dataSrc;
  }

  /**
   * Sets the value of the 'dataSrc' field.
   * @param value the value to set.
   */
  public void setDataSrc(java.lang.String value) {
    this.dataSrc = value;
  }

  /**
   * Gets the value of the 'snapshotVersion' field.
   * @return The value of the 'snapshotVersion' field.
   */
  public java.lang.String getSnapshotVersion() {
    return snapshotVersion;
  }

  /**
   * Sets the value of the 'snapshotVersion' field.
   * @param value the value to set.
   */
  public void setSnapshotVersion(java.lang.String value) {
    this.snapshotVersion = value;
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.String getEventId() {
    return eventId;
  }

  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.String value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'customEventIds' field.
   * @return The value of the 'customEventIds' field.
   */
  public java.util.List<java.lang.String> getCustomEventIds() {
    return customEventIds;
  }

  /**
   * Sets the value of the 'customEventIds' field.
   * @param value the value to set.
   */
  public void setCustomEventIds(java.util.List<java.lang.String> value) {
    this.customEventIds = value;
  }

  /**
   * Gets the value of the 'assetType' field.
   * @return The value of the 'assetType' field.
   */
  public java.lang.String getAssetType() {
    return assetType;
  }

  /**
   * Sets the value of the 'assetType' field.
   * @param value the value to set.
   */
  public void setAssetType(java.lang.String value) {
    this.assetType = value;
  }

  /**
   * Gets the value of the 'guid' field.
   * @return The value of the 'guid' field.
   */
  public java.lang.String getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field.
   * @param value the value to set.
   */
  public void setGuid(java.lang.String value) {
    this.guid = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'eventTime' field.
   * @return The value of the 'eventTime' field.
   */
  public java.lang.Long getEventTime() {
    return eventTime;
  }

  /**
   * Sets the value of the 'eventTime' field.
   * @param value the value to set.
   */
  public void setEventTime(java.lang.Long value) {
    this.eventTime = value;
  }

  /**
   * Gets the value of the 'eventTrigger' field.
   * @return The value of the 'eventTrigger' field.
   */
  public java.lang.String getEventTrigger() {
    return eventTrigger;
  }

  /**
   * Sets the value of the 'eventTrigger' field.
   * @param value the value to set.
   */
  public void setEventTrigger(java.lang.String value) {
    this.eventTrigger = value;
  }

  /**
   * Gets the value of the 'customEventTriggers' field.
   * @return The value of the 'customEventTriggers' field.
   */
  public java.util.List<java.lang.String> getCustomEventTriggers() {
    return customEventTriggers;
  }

  /**
   * Sets the value of the 'customEventTriggers' field.
   * @param value the value to set.
   */
  public void setCustomEventTriggers(java.util.List<java.lang.String> value) {
    this.customEventTriggers = value;
  }

  /**
   * Gets the value of the 'eventPrimaryAsset' field.
   * @return The value of the 'eventPrimaryAsset' field.
   */
  public java.lang.String getEventPrimaryAsset() {
    return eventPrimaryAsset;
  }

  /**
   * Sets the value of the 'eventPrimaryAsset' field.
   * @param value the value to set.
   */
  public void setEventPrimaryAsset(java.lang.String value) {
    this.eventPrimaryAsset = value;
  }

  /**
   * Gets the value of the 'customEventPrimaryAssets' field.
   * @return The value of the 'customEventPrimaryAssets' field.
   */
  public java.util.List<java.lang.String> getCustomEventPrimaryAssets() {
    return customEventPrimaryAssets;
  }

  /**
   * Sets the value of the 'customEventPrimaryAssets' field.
   * @param value the value to set.
   */
  public void setCustomEventPrimaryAssets(java.util.List<java.lang.String> value) {
    this.customEventPrimaryAssets = value;
  }

  /**
   * Gets the value of the 'label' field.
   * @return The value of the 'label' field.
   */
  public java.lang.String getLabel() {
    return label;
  }

  /**
   * Sets the value of the 'label' field.
   * @param value the value to set.
   */
  public void setLabel(java.lang.String value) {
    this.label = value;
  }

  /**
   * Gets the value of the 'activityDtl' field.
   * @return The value of the 'activityDtl' field.
   */
  public java.lang.String getActivityDtl() {
    return activityDtl;
  }

  /**
   * Sets the value of the 'activityDtl' field.
   * @param value the value to set.
   */
  public void setActivityDtl(java.lang.String value) {
    this.activityDtl = value;
  }

  /**
   * Gets the value of the 'dwell' field.
   * @return The value of the 'dwell' field.
   */
  public java.lang.Long getDwell() {
    return dwell;
  }

  /**
   * Sets the value of the 'dwell' field.
   * @param value the value to set.
   */
  public void setDwell(java.lang.Long value) {
    this.dwell = value;
  }

  /**
   * Gets the value of the 'eventLevel' field.
   * @return The value of the 'eventLevel' field.
   */
  public java.lang.String getEventLevel() {
    return eventLevel;
  }

  /**
   * Sets the value of the 'eventLevel' field.
   * @param value the value to set.
   */
  public void setEventLevel(java.lang.String value) {
    this.eventLevel = value;
  }

  /**
   * Gets the value of the 'experience' field.
   * @return The value of the 'experience' field.
   */
  public java.lang.String getExperience() {
    return experience;
  }

  /**
   * Sets the value of the 'experience' field.
   * @param value the value to set.
   */
  public void setExperience(java.lang.String value) {
    this.experience = value;
  }

  /**
   * Gets the value of the 'pageId' field.
   * @return The value of the 'pageId' field.
   */
  public java.lang.Long getPageId() {
    return pageId;
  }

  /**
   * Sets the value of the 'pageId' field.
   * @param value the value to set.
   */
  public void setPageId(java.lang.Long value) {
    this.pageId = value;
  }

  /**
   * Gets the value of the 'pageUrl' field.
   * @return The value of the 'pageUrl' field.
   */
  public java.lang.String getPageUrl() {
    return pageUrl;
  }

  /**
   * Sets the value of the 'pageUrl' field.
   * @param value the value to set.
   */
  public void setPageUrl(java.lang.String value) {
    this.pageUrl = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return The value of the 'payload' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getPayload() {
    return payload;
  }

  /**
   * Sets the value of the 'payload' field.
   * @param value the value to set.
   */
  public void setPayload(java.util.Map<java.lang.String,java.lang.String> value) {
    this.payload = value;
  }

  /**
   * Gets the value of the 'referer' field.
   * @return The value of the 'referer' field.
   */
  public java.lang.String getReferer() {
    return referer;
  }

  /**
   * Sets the value of the 'referer' field.
   * @param value the value to set.
   */
  public void setReferer(java.lang.String value) {
    this.referer = value;
  }

  /**
   * Gets the value of the 'pageName' field.
   * @return The value of the 'pageName' field.
   */
  public java.lang.String getPageName() {
    return pageName;
  }

  /**
   * Sets the value of the 'pageName' field.
   * @param value the value to set.
   */
  public void setPageName(java.lang.String value) {
    this.pageName = value;
  }

  /**
   * Gets the value of the 'pageGroupId' field.
   * @return The value of the 'pageGroupId' field.
   */
  public java.lang.Integer getPageGroupId() {
    return pageGroupId;
  }

  /**
   * Sets the value of the 'pageGroupId' field.
   * @param value the value to set.
   */
  public void setPageGroupId(java.lang.Integer value) {
    this.pageGroupId = value;
  }

  /**
   * Gets the value of the 'pageGroupName' field.
   * @return The value of the 'pageGroupName' field.
   */
  public java.lang.String getPageGroupName() {
    return pageGroupName;
  }

  /**
   * Sets the value of the 'pageGroupName' field.
   * @param value the value to set.
   */
  public void setPageGroupName(java.lang.String value) {
    this.pageGroupName = value;
  }

  /**
   * Gets the value of the 'pageGroupDesc' field.
   * @return The value of the 'pageGroupDesc' field.
   */
  public java.lang.String getPageGroupDesc() {
    return pageGroupDesc;
  }

  /**
   * Sets the value of the 'pageGroupDesc' field.
   * @param value the value to set.
   */
  public void setPageGroupDesc(java.lang.String value) {
    this.pageGroupDesc = value;
  }

  /**
   * Gets the value of the 'elementId' field.
   * @return The value of the 'elementId' field.
   */
  public java.lang.String getElementId() {
    return elementId;
  }

  /**
   * Sets the value of the 'elementId' field.
   * @param value the value to set.
   */
  public void setElementId(java.lang.String value) {
    this.elementId = value;
  }

  /**
   * Gets the value of the 'elementName' field.
   * @return The value of the 'elementName' field.
   */
  public java.lang.String getElementName() {
    return elementName;
  }

  /**
   * Sets the value of the 'elementName' field.
   * @param value the value to set.
   */
  public void setElementName(java.lang.String value) {
    this.elementName = value;
  }

  /**
   * Gets the value of the 'moduleId' field.
   * @return The value of the 'moduleId' field.
   */
  public java.lang.Integer getModuleId() {
    return moduleId;
  }

  /**
   * Sets the value of the 'moduleId' field.
   * @param value the value to set.
   */
  public void setModuleId(java.lang.Integer value) {
    this.moduleId = value;
  }

  /**
   * Gets the value of the 'moduleName' field.
   * @return The value of the 'moduleName' field.
   */
  public java.lang.String getModuleName() {
    return moduleName;
  }

  /**
   * Sets the value of the 'moduleName' field.
   * @param value the value to set.
   */
  public void setModuleName(java.lang.String value) {
    this.moduleName = value;
  }

  /**
   * Gets the value of the 'moduleDesc' field.
   * @return The value of the 'moduleDesc' field.
   */
  public java.lang.String getModuleDesc() {
    return moduleDesc;
  }

  /**
   * Sets the value of the 'moduleDesc' field.
   * @param value the value to set.
   */
  public void setModuleDesc(java.lang.String value) {
    this.moduleDesc = value;
  }

  /**
   * Gets the value of the 'clickId' field.
   * @return The value of the 'clickId' field.
   */
  public java.lang.Integer getClickId() {
    return clickId;
  }

  /**
   * Sets the value of the 'clickId' field.
   * @param value the value to set.
   */
  public void setClickId(java.lang.Integer value) {
    this.clickId = value;
  }

  /**
   * Gets the value of the 'clickName' field.
   * @return The value of the 'clickName' field.
   */
  public java.lang.String getClickName() {
    return clickName;
  }

  /**
   * Sets the value of the 'clickName' field.
   * @param value the value to set.
   */
  public void setClickName(java.lang.String value) {
    this.clickName = value;
  }

  /**
   * Gets the value of the 'clickDesc' field.
   * @return The value of the 'clickDesc' field.
   */
  public java.lang.String getClickDesc() {
    return clickDesc;
  }

  /**
   * Sets the value of the 'clickDesc' field.
   * @param value the value to set.
   */
  public void setClickDesc(java.lang.String value) {
    this.clickDesc = value;
  }

  /**
   * Gets the value of the 'destinationUrl' field.
   * @return The value of the 'destinationUrl' field.
   */
  public java.lang.String getDestinationUrl() {
    return destinationUrl;
  }

  /**
   * Sets the value of the 'destinationUrl' field.
   * @param value the value to set.
   */
  public void setDestinationUrl(java.lang.String value) {
    this.destinationUrl = value;
  }

  /**
   * Gets the value of the 'imageUrl' field.
   * @return The value of the 'imageUrl' field.
   */
  public java.lang.String getImageUrl() {
    return imageUrl;
  }

  /**
   * Sets the value of the 'imageUrl' field.
   * @param value the value to set.
   */
  public void setImageUrl(java.lang.String value) {
    this.imageUrl = value;
  }

  /**
   * Gets the value of the 'elementLabel' field.
   * @return The value of the 'elementLabel' field.
   */
  public java.lang.String getElementLabel() {
    return elementLabel;
  }

  /**
   * Sets the value of the 'elementLabel' field.
   * @param value the value to set.
   */
  public void setElementLabel(java.lang.String value) {
    this.elementLabel = value;
  }

  /**
   * Gets the value of the 'elementSelectorPath' field.
   * @return The value of the 'elementSelectorPath' field.
   */
  public java.lang.String getElementSelectorPath() {
    return elementSelectorPath;
  }

  /**
   * Sets the value of the 'elementSelectorPath' field.
   * @param value the value to set.
   */
  public void setElementSelectorPath(java.lang.String value) {
    this.elementSelectorPath = value;
  }

  /**
   * Gets the value of the 'itemId' field.
   * @return The value of the 'itemId' field.
   */
  public java.lang.Long getItemId() {
    return itemId;
  }

  /**
   * Sets the value of the 'itemId' field.
   * @param value the value to set.
   */
  public void setItemId(java.lang.Long value) {
    this.itemId = value;
  }

  /**
   * Gets the value of the 'siteId' field.
   * @return The value of the 'siteId' field.
   */
  public java.lang.Integer getSiteId() {
    return siteId;
  }

  /**
   * Sets the value of the 'siteId' field.
   * @param value the value to set.
   */
  public void setSiteId(java.lang.Integer value) {
    this.siteId = value;
  }

  /**
   * Gets the value of the 'dt' field.
   * @return The value of the 'dt' field.
   */
  public java.lang.String getDt() {
    return dt;
  }

  /**
   * Sets the value of the 'dt' field.
   * @param value the value to set.
   */
  public void setDt(java.lang.String value) {
    this.dt = value;
  }

  /**
   * Gets the value of the 'bizDtl' field.
   * @return The value of the 'bizDtl' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getBizDtl() {
    return bizDtl;
  }

  /**
   * Sets the value of the 'bizDtl' field.
   * @param value the value to set.
   */
  public void setBizDtl(java.util.Map<java.lang.String,java.lang.String> value) {
    this.bizDtl = value;
  }

  /**
   * Gets the value of the 'trackableId' field.
   * @return The value of the 'trackableId' field.
   */
  public java.lang.String getTrackableId() {
    return trackableId;
  }

  /**
   * Sets the value of the 'trackableId' field.
   * @param value the value to set.
   */
  public void setTrackableId(java.lang.String value) {
    this.trackableId = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return The value of the 'sessionId' field.
   */
  public java.lang.String getSessionId() {
    return sessionId;
  }

  /**
   * Sets the value of the 'sessionId' field.
   * @param value the value to set.
   */
  public void setSessionId(java.lang.String value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'correlationId' field.
   * @return The value of the 'correlationId' field.
   */
  public java.lang.String getCorrelationId() {
    return correlationId;
  }

  /**
   * Sets the value of the 'correlationId' field.
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.String value) {
    this.correlationId = value;
  }

  /**
   * Gets the value of the 'screenId' field.
   * @return The value of the 'screenId' field.
   */
  public java.lang.String getScreenId() {
    return screenId;
  }

  /**
   * Sets the value of the 'screenId' field.
   * @param value the value to set.
   */
  public void setScreenId(java.lang.String value) {
    this.screenId = value;
  }

  /**
   * Gets the value of the 'ratio' field.
   * @return The value of the 'ratio' field.
   */
  public java.lang.Double getRatio() {
    return ratio;
  }

  /**
   * Sets the value of the 'ratio' field.
   * @param value the value to set.
   */
  public void setRatio(java.lang.Double value) {
    this.ratio = value;
  }

  /**
   * Gets the value of the 'userAgent' field.
   * @return The value of the 'userAgent' field.
   */
  public java.lang.String getUserAgent() {
    return userAgent;
  }

  /**
   * Sets the value of the 'userAgent' field.
   * @param value the value to set.
   */
  public void setUserAgent(java.lang.String value) {
    this.userAgent = value;
  }

  /**
   * Gets the value of the 'userLang' field.
   * @return The value of the 'userLang' field.
   */
  public java.lang.String getUserLang() {
    return userLang;
  }

  /**
   * Sets the value of the 'userLang' field.
   * @param value the value to set.
   */
  public void setUserLang(java.lang.String value) {
    this.userLang = value;
  }

  /**
   * Gets the value of the 'screenWidth' field.
   * @return The value of the 'screenWidth' field.
   */
  public java.lang.Integer getScreenWidth() {
    return screenWidth;
  }

  /**
   * Sets the value of the 'screenWidth' field.
   * @param value the value to set.
   */
  public void setScreenWidth(java.lang.Integer value) {
    this.screenWidth = value;
  }

  /**
   * Gets the value of the 'screenHeight' field.
   * @return The value of the 'screenHeight' field.
   */
  public java.lang.Integer getScreenHeight() {
    return screenHeight;
  }

  /**
   * Sets the value of the 'screenHeight' field.
   * @param value the value to set.
   */
  public void setScreenHeight(java.lang.Integer value) {
    this.screenHeight = value;
  }

  /**
   * Gets the value of the 'viewportWidth' field.
   * @return The value of the 'viewportWidth' field.
   */
  public java.lang.Integer getViewportWidth() {
    return viewportWidth;
  }

  /**
   * Sets the value of the 'viewportWidth' field.
   * @param value the value to set.
   */
  public void setViewportWidth(java.lang.Integer value) {
    this.viewportWidth = value;
  }

  /**
   * Gets the value of the 'viewportHeight' field.
   * @return The value of the 'viewportHeight' field.
   */
  public java.lang.Integer getViewportHeight() {
    return viewportHeight;
  }

  /**
   * Sets the value of the 'viewportHeight' field.
   * @param value the value to set.
   */
  public void setViewportHeight(java.lang.Integer value) {
    this.viewportHeight = value;
  }

  /**
   * Gets the value of the 'pageLoad' field.
   * @return The value of the 'pageLoad' field.
   */
  public java.lang.Long getPageLoad() {
    return pageLoad;
  }

  /**
   * Sets the value of the 'pageLoad' field.
   * @param value the value to set.
   */
  public void setPageLoad(java.lang.Long value) {
    this.pageLoad = value;
  }

  /**
   * Gets the value of the 'ttfb' field.
   * @return The value of the 'ttfb' field.
   */
  public java.lang.Long getTtfb() {
    return ttfb;
  }

  /**
   * Sets the value of the 'ttfb' field.
   * @param value the value to set.
   */
  public void setTtfb(java.lang.Long value) {
    this.ttfb = value;
  }

  /**
   * Gets the value of the 'itemDtl' field.
   * @return The value of the 'itemDtl' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getItemDtl() {
    return itemDtl;
  }

  /**
   * Sets the value of the 'itemDtl' field.
   * @param value the value to set.
   */
  public void setItemDtl(java.util.Map<java.lang.String,java.lang.String> value) {
    this.itemDtl = value;
  }

  /**
   * Creates a new GlobalEvent RecordBuilder.
   * @return A new GlobalEvent RecordBuilder
   */
  public static org.ebayanalytics.globalevent.GlobalEvent.Builder newBuilder() {
    return new org.ebayanalytics.globalevent.GlobalEvent.Builder();
  }

  /**
   * Creates a new GlobalEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GlobalEvent RecordBuilder
   */
  public static org.ebayanalytics.globalevent.GlobalEvent.Builder newBuilder(org.ebayanalytics.globalevent.GlobalEvent.Builder other) {
    return new org.ebayanalytics.globalevent.GlobalEvent.Builder(other);
  }

  /**
   * Creates a new GlobalEvent RecordBuilder by copying an existing GlobalEvent instance.
   * @param other The existing instance to copy.
   * @return A new GlobalEvent RecordBuilder
   */
  public static org.ebayanalytics.globalevent.GlobalEvent.Builder newBuilder(org.ebayanalytics.globalevent.GlobalEvent other) {
    return new org.ebayanalytics.globalevent.GlobalEvent.Builder(other);
  }

  /**
   * RecordBuilder for GlobalEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GlobalEvent>
    implements org.apache.avro.data.RecordBuilder<GlobalEvent> {

    private org.ebayanalytics.globalevent.RheosHeader rheosHeader;
    private org.ebayanalytics.globalevent.RheosHeader.Builder rheosHeaderBuilder;
    private java.lang.String dataSrc;
    private java.lang.String snapshotVersion;
    private java.lang.String eventId;
    private java.util.List<java.lang.String> customEventIds;
    private java.lang.String assetType;
    private java.lang.String guid;
    private java.lang.Long userId;
    private java.lang.Long eventTime;
    private java.lang.String eventTrigger;
    private java.util.List<java.lang.String> customEventTriggers;
    private java.lang.String eventPrimaryAsset;
    private java.util.List<java.lang.String> customEventPrimaryAssets;
    private java.lang.String label;
    private java.lang.String activityDtl;
    private java.lang.Long dwell;
    private java.lang.String eventLevel;
    private java.lang.String experience;
    private java.lang.Long pageId;
    private java.lang.String pageUrl;
    private java.util.Map<java.lang.String,java.lang.String> payload;
    private java.lang.String referer;
    private java.lang.String pageName;
    private java.lang.Integer pageGroupId;
    private java.lang.String pageGroupName;
    private java.lang.String pageGroupDesc;
    private java.lang.String elementId;
    private java.lang.String elementName;
    private java.lang.Integer moduleId;
    private java.lang.String moduleName;
    private java.lang.String moduleDesc;
    private java.lang.Integer clickId;
    private java.lang.String clickName;
    private java.lang.String clickDesc;
    private java.lang.String destinationUrl;
    private java.lang.String imageUrl;
    private java.lang.String elementLabel;
    private java.lang.String elementSelectorPath;
    private java.lang.Long itemId;
    private java.lang.Integer siteId;
    private java.lang.String dt;
    private java.util.Map<java.lang.String,java.lang.String> bizDtl;
    private java.lang.String trackableId;
    private java.lang.String sessionId;
    private java.lang.String correlationId;
    private java.lang.String screenId;
    private java.lang.Double ratio;
    private java.lang.String userAgent;
    private java.lang.String userLang;
    private java.lang.Integer screenWidth;
    private java.lang.Integer screenHeight;
    private java.lang.Integer viewportWidth;
    private java.lang.Integer viewportHeight;
    private java.lang.Long pageLoad;
    private java.lang.Long ttfb;
    private java.util.Map<java.lang.String,java.lang.String> itemDtl;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.ebayanalytics.globalevent.GlobalEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (other.hasRheosHeaderBuilder()) {
        this.rheosHeaderBuilder = org.ebayanalytics.globalevent.RheosHeader.newBuilder(other.getRheosHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.dataSrc)) {
        this.dataSrc = data().deepCopy(fields()[1].schema(), other.dataSrc);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.snapshotVersion)) {
        this.snapshotVersion = data().deepCopy(fields()[2].schema(), other.snapshotVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventId)) {
        this.eventId = data().deepCopy(fields()[3].schema(), other.eventId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.customEventIds)) {
        this.customEventIds = data().deepCopy(fields()[4].schema(), other.customEventIds);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assetType)) {
        this.assetType = data().deepCopy(fields()[5].schema(), other.assetType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.guid)) {
        this.guid = data().deepCopy(fields()[6].schema(), other.guid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.userId)) {
        this.userId = data().deepCopy(fields()[7].schema(), other.userId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[8].schema(), other.eventTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.eventTrigger)) {
        this.eventTrigger = data().deepCopy(fields()[9].schema(), other.eventTrigger);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.customEventTriggers)) {
        this.customEventTriggers = data().deepCopy(fields()[10].schema(), other.customEventTriggers);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventPrimaryAsset)) {
        this.eventPrimaryAsset = data().deepCopy(fields()[11].schema(), other.eventPrimaryAsset);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.customEventPrimaryAssets)) {
        this.customEventPrimaryAssets = data().deepCopy(fields()[12].schema(), other.customEventPrimaryAssets);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.label)) {
        this.label = data().deepCopy(fields()[13].schema(), other.label);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.activityDtl)) {
        this.activityDtl = data().deepCopy(fields()[14].schema(), other.activityDtl);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.dwell)) {
        this.dwell = data().deepCopy(fields()[15].schema(), other.dwell);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.eventLevel)) {
        this.eventLevel = data().deepCopy(fields()[16].schema(), other.eventLevel);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.experience)) {
        this.experience = data().deepCopy(fields()[17].schema(), other.experience);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.pageId)) {
        this.pageId = data().deepCopy(fields()[18].schema(), other.pageId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.pageUrl)) {
        this.pageUrl = data().deepCopy(fields()[19].schema(), other.pageUrl);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.payload)) {
        this.payload = data().deepCopy(fields()[20].schema(), other.payload);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.referer)) {
        this.referer = data().deepCopy(fields()[21].schema(), other.referer);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.pageName)) {
        this.pageName = data().deepCopy(fields()[22].schema(), other.pageName);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.pageGroupId)) {
        this.pageGroupId = data().deepCopy(fields()[23].schema(), other.pageGroupId);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.pageGroupName)) {
        this.pageGroupName = data().deepCopy(fields()[24].schema(), other.pageGroupName);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pageGroupDesc)) {
        this.pageGroupDesc = data().deepCopy(fields()[25].schema(), other.pageGroupDesc);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.elementId)) {
        this.elementId = data().deepCopy(fields()[26].schema(), other.elementId);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.elementName)) {
        this.elementName = data().deepCopy(fields()[27].schema(), other.elementName);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.moduleId)) {
        this.moduleId = data().deepCopy(fields()[28].schema(), other.moduleId);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.moduleName)) {
        this.moduleName = data().deepCopy(fields()[29].schema(), other.moduleName);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.moduleDesc)) {
        this.moduleDesc = data().deepCopy(fields()[30].schema(), other.moduleDesc);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.clickId)) {
        this.clickId = data().deepCopy(fields()[31].schema(), other.clickId);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.clickName)) {
        this.clickName = data().deepCopy(fields()[32].schema(), other.clickName);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.clickDesc)) {
        this.clickDesc = data().deepCopy(fields()[33].schema(), other.clickDesc);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.destinationUrl)) {
        this.destinationUrl = data().deepCopy(fields()[34].schema(), other.destinationUrl);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.imageUrl)) {
        this.imageUrl = data().deepCopy(fields()[35].schema(), other.imageUrl);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.elementLabel)) {
        this.elementLabel = data().deepCopy(fields()[36].schema(), other.elementLabel);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.elementSelectorPath)) {
        this.elementSelectorPath = data().deepCopy(fields()[37].schema(), other.elementSelectorPath);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.itemId)) {
        this.itemId = data().deepCopy(fields()[38].schema(), other.itemId);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.siteId)) {
        this.siteId = data().deepCopy(fields()[39].schema(), other.siteId);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.dt)) {
        this.dt = data().deepCopy(fields()[40].schema(), other.dt);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.bizDtl)) {
        this.bizDtl = data().deepCopy(fields()[41].schema(), other.bizDtl);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.trackableId)) {
        this.trackableId = data().deepCopy(fields()[42].schema(), other.trackableId);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[43].schema(), other.sessionId);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[44].schema(), other.correlationId);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.screenId)) {
        this.screenId = data().deepCopy(fields()[45].schema(), other.screenId);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.ratio)) {
        this.ratio = data().deepCopy(fields()[46].schema(), other.ratio);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.userAgent)) {
        this.userAgent = data().deepCopy(fields()[47].schema(), other.userAgent);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.userLang)) {
        this.userLang = data().deepCopy(fields()[48].schema(), other.userLang);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.screenWidth)) {
        this.screenWidth = data().deepCopy(fields()[49].schema(), other.screenWidth);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.screenHeight)) {
        this.screenHeight = data().deepCopy(fields()[50].schema(), other.screenHeight);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.viewportWidth)) {
        this.viewportWidth = data().deepCopy(fields()[51].schema(), other.viewportWidth);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.viewportHeight)) {
        this.viewportHeight = data().deepCopy(fields()[52].schema(), other.viewportHeight);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.pageLoad)) {
        this.pageLoad = data().deepCopy(fields()[53].schema(), other.pageLoad);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.ttfb)) {
        this.ttfb = data().deepCopy(fields()[54].schema(), other.ttfb);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.itemDtl)) {
        this.itemDtl = data().deepCopy(fields()[55].schema(), other.itemDtl);
        fieldSetFlags()[55] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing GlobalEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(org.ebayanalytics.globalevent.GlobalEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      this.rheosHeaderBuilder = null;
      if (isValidValue(fields()[1], other.dataSrc)) {
        this.dataSrc = data().deepCopy(fields()[1].schema(), other.dataSrc);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.snapshotVersion)) {
        this.snapshotVersion = data().deepCopy(fields()[2].schema(), other.snapshotVersion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventId)) {
        this.eventId = data().deepCopy(fields()[3].schema(), other.eventId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.customEventIds)) {
        this.customEventIds = data().deepCopy(fields()[4].schema(), other.customEventIds);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assetType)) {
        this.assetType = data().deepCopy(fields()[5].schema(), other.assetType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.guid)) {
        this.guid = data().deepCopy(fields()[6].schema(), other.guid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.userId)) {
        this.userId = data().deepCopy(fields()[7].schema(), other.userId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[8].schema(), other.eventTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.eventTrigger)) {
        this.eventTrigger = data().deepCopy(fields()[9].schema(), other.eventTrigger);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.customEventTriggers)) {
        this.customEventTriggers = data().deepCopy(fields()[10].schema(), other.customEventTriggers);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventPrimaryAsset)) {
        this.eventPrimaryAsset = data().deepCopy(fields()[11].schema(), other.eventPrimaryAsset);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.customEventPrimaryAssets)) {
        this.customEventPrimaryAssets = data().deepCopy(fields()[12].schema(), other.customEventPrimaryAssets);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.label)) {
        this.label = data().deepCopy(fields()[13].schema(), other.label);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.activityDtl)) {
        this.activityDtl = data().deepCopy(fields()[14].schema(), other.activityDtl);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.dwell)) {
        this.dwell = data().deepCopy(fields()[15].schema(), other.dwell);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.eventLevel)) {
        this.eventLevel = data().deepCopy(fields()[16].schema(), other.eventLevel);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.experience)) {
        this.experience = data().deepCopy(fields()[17].schema(), other.experience);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.pageId)) {
        this.pageId = data().deepCopy(fields()[18].schema(), other.pageId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.pageUrl)) {
        this.pageUrl = data().deepCopy(fields()[19].schema(), other.pageUrl);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.payload)) {
        this.payload = data().deepCopy(fields()[20].schema(), other.payload);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.referer)) {
        this.referer = data().deepCopy(fields()[21].schema(), other.referer);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.pageName)) {
        this.pageName = data().deepCopy(fields()[22].schema(), other.pageName);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.pageGroupId)) {
        this.pageGroupId = data().deepCopy(fields()[23].schema(), other.pageGroupId);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.pageGroupName)) {
        this.pageGroupName = data().deepCopy(fields()[24].schema(), other.pageGroupName);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pageGroupDesc)) {
        this.pageGroupDesc = data().deepCopy(fields()[25].schema(), other.pageGroupDesc);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.elementId)) {
        this.elementId = data().deepCopy(fields()[26].schema(), other.elementId);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.elementName)) {
        this.elementName = data().deepCopy(fields()[27].schema(), other.elementName);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.moduleId)) {
        this.moduleId = data().deepCopy(fields()[28].schema(), other.moduleId);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.moduleName)) {
        this.moduleName = data().deepCopy(fields()[29].schema(), other.moduleName);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.moduleDesc)) {
        this.moduleDesc = data().deepCopy(fields()[30].schema(), other.moduleDesc);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.clickId)) {
        this.clickId = data().deepCopy(fields()[31].schema(), other.clickId);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.clickName)) {
        this.clickName = data().deepCopy(fields()[32].schema(), other.clickName);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.clickDesc)) {
        this.clickDesc = data().deepCopy(fields()[33].schema(), other.clickDesc);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.destinationUrl)) {
        this.destinationUrl = data().deepCopy(fields()[34].schema(), other.destinationUrl);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.imageUrl)) {
        this.imageUrl = data().deepCopy(fields()[35].schema(), other.imageUrl);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.elementLabel)) {
        this.elementLabel = data().deepCopy(fields()[36].schema(), other.elementLabel);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.elementSelectorPath)) {
        this.elementSelectorPath = data().deepCopy(fields()[37].schema(), other.elementSelectorPath);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.itemId)) {
        this.itemId = data().deepCopy(fields()[38].schema(), other.itemId);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.siteId)) {
        this.siteId = data().deepCopy(fields()[39].schema(), other.siteId);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.dt)) {
        this.dt = data().deepCopy(fields()[40].schema(), other.dt);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.bizDtl)) {
        this.bizDtl = data().deepCopy(fields()[41].schema(), other.bizDtl);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.trackableId)) {
        this.trackableId = data().deepCopy(fields()[42].schema(), other.trackableId);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[43].schema(), other.sessionId);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[44].schema(), other.correlationId);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.screenId)) {
        this.screenId = data().deepCopy(fields()[45].schema(), other.screenId);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.ratio)) {
        this.ratio = data().deepCopy(fields()[46].schema(), other.ratio);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.userAgent)) {
        this.userAgent = data().deepCopy(fields()[47].schema(), other.userAgent);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.userLang)) {
        this.userLang = data().deepCopy(fields()[48].schema(), other.userLang);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.screenWidth)) {
        this.screenWidth = data().deepCopy(fields()[49].schema(), other.screenWidth);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.screenHeight)) {
        this.screenHeight = data().deepCopy(fields()[50].schema(), other.screenHeight);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.viewportWidth)) {
        this.viewportWidth = data().deepCopy(fields()[51].schema(), other.viewportWidth);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.viewportHeight)) {
        this.viewportHeight = data().deepCopy(fields()[52].schema(), other.viewportHeight);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.pageLoad)) {
        this.pageLoad = data().deepCopy(fields()[53].schema(), other.pageLoad);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.ttfb)) {
        this.ttfb = data().deepCopy(fields()[54].schema(), other.ttfb);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.itemDtl)) {
        this.itemDtl = data().deepCopy(fields()[55].schema(), other.itemDtl);
        fieldSetFlags()[55] = true;
      }
    }

    /**
      * Gets the value of the 'rheosHeader' field.
      * @return The value.
      */
    public org.ebayanalytics.globalevent.RheosHeader getRheosHeader() {
      return rheosHeader;
    }

    /**
      * Sets the value of the 'rheosHeader' field.
      * @param value The value of 'rheosHeader'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setRheosHeader(org.ebayanalytics.globalevent.RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeaderBuilder = null;
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rheosHeader' field has been set.
      * @return True if the 'rheosHeader' field has been set, false otherwise.
      */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'rheosHeader' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.ebayanalytics.globalevent.RheosHeader.Builder getRheosHeaderBuilder() {
      if (rheosHeaderBuilder == null) {
        if (hasRheosHeader()) {
          setRheosHeaderBuilder(org.ebayanalytics.globalevent.RheosHeader.newBuilder(rheosHeader));
        } else {
          setRheosHeaderBuilder(org.ebayanalytics.globalevent.RheosHeader.newBuilder());
        }
      }
      return rheosHeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'rheosHeader' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setRheosHeaderBuilder(org.ebayanalytics.globalevent.RheosHeader.Builder value) {
      clearRheosHeader();
      rheosHeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'rheosHeader' field has an active Builder instance
     * @return True if the 'rheosHeader' field has an active Builder instance
     */
    public boolean hasRheosHeaderBuilder() {
      return rheosHeaderBuilder != null;
    }

    /**
      * Clears the value of the 'rheosHeader' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearRheosHeader() {
      rheosHeader = null;
      rheosHeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataSrc' field.
      * @return The value.
      */
    public java.lang.String getDataSrc() {
      return dataSrc;
    }

    /**
      * Sets the value of the 'dataSrc' field.
      * @param value The value of 'dataSrc'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setDataSrc(java.lang.String value) {
      validate(fields()[1], value);
      this.dataSrc = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dataSrc' field has been set.
      * @return True if the 'dataSrc' field has been set, false otherwise.
      */
    public boolean hasDataSrc() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'dataSrc' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearDataSrc() {
      dataSrc = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'snapshotVersion' field.
      * @return The value.
      */
    public java.lang.String getSnapshotVersion() {
      return snapshotVersion;
    }

    /**
      * Sets the value of the 'snapshotVersion' field.
      * @param value The value of 'snapshotVersion'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setSnapshotVersion(java.lang.String value) {
      validate(fields()[2], value);
      this.snapshotVersion = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'snapshotVersion' field has been set.
      * @return True if the 'snapshotVersion' field has been set, false otherwise.
      */
    public boolean hasSnapshotVersion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'snapshotVersion' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearSnapshotVersion() {
      snapshotVersion = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.String getEventId() {
      return eventId;
    }

    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setEventId(java.lang.String value) {
      validate(fields()[3], value);
      this.eventId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'customEventIds' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getCustomEventIds() {
      return customEventIds;
    }

    /**
      * Sets the value of the 'customEventIds' field.
      * @param value The value of 'customEventIds'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setCustomEventIds(java.util.List<java.lang.String> value) {
      validate(fields()[4], value);
      this.customEventIds = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'customEventIds' field has been set.
      * @return True if the 'customEventIds' field has been set, false otherwise.
      */
    public boolean hasCustomEventIds() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'customEventIds' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearCustomEventIds() {
      customEventIds = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'assetType' field.
      * @return The value.
      */
    public java.lang.String getAssetType() {
      return assetType;
    }

    /**
      * Sets the value of the 'assetType' field.
      * @param value The value of 'assetType'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setAssetType(java.lang.String value) {
      validate(fields()[5], value);
      this.assetType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'assetType' field has been set.
      * @return True if the 'assetType' field has been set, false otherwise.
      */
    public boolean hasAssetType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'assetType' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearAssetType() {
      assetType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'guid' field.
      * @return The value.
      */
    public java.lang.String getGuid() {
      return guid;
    }

    /**
      * Sets the value of the 'guid' field.
      * @param value The value of 'guid'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setGuid(java.lang.String value) {
      validate(fields()[6], value);
      this.guid = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'guid' field has been set.
      * @return True if the 'guid' field has been set, false otherwise.
      */
    public boolean hasGuid() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'guid' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setUserId(java.lang.Long value) {
      validate(fields()[7], value);
      this.userId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTime' field.
      * @return The value.
      */
    public java.lang.Long getEventTime() {
      return eventTime;
    }

    /**
      * Sets the value of the 'eventTime' field.
      * @param value The value of 'eventTime'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setEventTime(java.lang.Long value) {
      validate(fields()[8], value);
      this.eventTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTime' field has been set.
      * @return True if the 'eventTime' field has been set, false otherwise.
      */
    public boolean hasEventTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'eventTime' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearEventTime() {
      eventTime = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTrigger' field.
      * @return The value.
      */
    public java.lang.String getEventTrigger() {
      return eventTrigger;
    }

    /**
      * Sets the value of the 'eventTrigger' field.
      * @param value The value of 'eventTrigger'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setEventTrigger(java.lang.String value) {
      validate(fields()[9], value);
      this.eventTrigger = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTrigger' field has been set.
      * @return True if the 'eventTrigger' field has been set, false otherwise.
      */
    public boolean hasEventTrigger() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'eventTrigger' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearEventTrigger() {
      eventTrigger = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'customEventTriggers' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getCustomEventTriggers() {
      return customEventTriggers;
    }

    /**
      * Sets the value of the 'customEventTriggers' field.
      * @param value The value of 'customEventTriggers'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setCustomEventTriggers(java.util.List<java.lang.String> value) {
      validate(fields()[10], value);
      this.customEventTriggers = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'customEventTriggers' field has been set.
      * @return True if the 'customEventTriggers' field has been set, false otherwise.
      */
    public boolean hasCustomEventTriggers() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'customEventTriggers' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearCustomEventTriggers() {
      customEventTriggers = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventPrimaryAsset' field.
      * @return The value.
      */
    public java.lang.String getEventPrimaryAsset() {
      return eventPrimaryAsset;
    }

    /**
      * Sets the value of the 'eventPrimaryAsset' field.
      * @param value The value of 'eventPrimaryAsset'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setEventPrimaryAsset(java.lang.String value) {
      validate(fields()[11], value);
      this.eventPrimaryAsset = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'eventPrimaryAsset' field has been set.
      * @return True if the 'eventPrimaryAsset' field has been set, false otherwise.
      */
    public boolean hasEventPrimaryAsset() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'eventPrimaryAsset' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearEventPrimaryAsset() {
      eventPrimaryAsset = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'customEventPrimaryAssets' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getCustomEventPrimaryAssets() {
      return customEventPrimaryAssets;
    }

    /**
      * Sets the value of the 'customEventPrimaryAssets' field.
      * @param value The value of 'customEventPrimaryAssets'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setCustomEventPrimaryAssets(java.util.List<java.lang.String> value) {
      validate(fields()[12], value);
      this.customEventPrimaryAssets = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'customEventPrimaryAssets' field has been set.
      * @return True if the 'customEventPrimaryAssets' field has been set, false otherwise.
      */
    public boolean hasCustomEventPrimaryAssets() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'customEventPrimaryAssets' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearCustomEventPrimaryAssets() {
      customEventPrimaryAssets = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'label' field.
      * @return The value.
      */
    public java.lang.String getLabel() {
      return label;
    }

    /**
      * Sets the value of the 'label' field.
      * @param value The value of 'label'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setLabel(java.lang.String value) {
      validate(fields()[13], value);
      this.label = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'label' field has been set.
      * @return True if the 'label' field has been set, false otherwise.
      */
    public boolean hasLabel() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'label' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearLabel() {
      label = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'activityDtl' field.
      * @return The value.
      */
    public java.lang.String getActivityDtl() {
      return activityDtl;
    }

    /**
      * Sets the value of the 'activityDtl' field.
      * @param value The value of 'activityDtl'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setActivityDtl(java.lang.String value) {
      validate(fields()[14], value);
      this.activityDtl = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'activityDtl' field has been set.
      * @return True if the 'activityDtl' field has been set, false otherwise.
      */
    public boolean hasActivityDtl() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'activityDtl' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearActivityDtl() {
      activityDtl = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'dwell' field.
      * @return The value.
      */
    public java.lang.Long getDwell() {
      return dwell;
    }

    /**
      * Sets the value of the 'dwell' field.
      * @param value The value of 'dwell'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setDwell(java.lang.Long value) {
      validate(fields()[15], value);
      this.dwell = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'dwell' field has been set.
      * @return True if the 'dwell' field has been set, false otherwise.
      */
    public boolean hasDwell() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'dwell' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearDwell() {
      dwell = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventLevel' field.
      * @return The value.
      */
    public java.lang.String getEventLevel() {
      return eventLevel;
    }

    /**
      * Sets the value of the 'eventLevel' field.
      * @param value The value of 'eventLevel'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setEventLevel(java.lang.String value) {
      validate(fields()[16], value);
      this.eventLevel = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'eventLevel' field has been set.
      * @return True if the 'eventLevel' field has been set, false otherwise.
      */
    public boolean hasEventLevel() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'eventLevel' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearEventLevel() {
      eventLevel = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'experience' field.
      * @return The value.
      */
    public java.lang.String getExperience() {
      return experience;
    }

    /**
      * Sets the value of the 'experience' field.
      * @param value The value of 'experience'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setExperience(java.lang.String value) {
      validate(fields()[17], value);
      this.experience = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'experience' field has been set.
      * @return True if the 'experience' field has been set, false otherwise.
      */
    public boolean hasExperience() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'experience' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearExperience() {
      experience = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageId' field.
      * @return The value.
      */
    public java.lang.Long getPageId() {
      return pageId;
    }

    /**
      * Sets the value of the 'pageId' field.
      * @param value The value of 'pageId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPageId(java.lang.Long value) {
      validate(fields()[18], value);
      this.pageId = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'pageId' field has been set.
      * @return True if the 'pageId' field has been set, false otherwise.
      */
    public boolean hasPageId() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'pageId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPageId() {
      pageId = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageUrl' field.
      * @return The value.
      */
    public java.lang.String getPageUrl() {
      return pageUrl;
    }

    /**
      * Sets the value of the 'pageUrl' field.
      * @param value The value of 'pageUrl'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPageUrl(java.lang.String value) {
      validate(fields()[19], value);
      this.pageUrl = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'pageUrl' field has been set.
      * @return True if the 'pageUrl' field has been set, false otherwise.
      */
    public boolean hasPageUrl() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'pageUrl' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPageUrl() {
      pageUrl = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getPayload() {
      return payload;
    }

    /**
      * Sets the value of the 'payload' field.
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPayload(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[20], value);
      this.payload = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'payload' field has been set.
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'payload' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'referer' field.
      * @return The value.
      */
    public java.lang.String getReferer() {
      return referer;
    }

    /**
      * Sets the value of the 'referer' field.
      * @param value The value of 'referer'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setReferer(java.lang.String value) {
      validate(fields()[21], value);
      this.referer = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'referer' field has been set.
      * @return True if the 'referer' field has been set, false otherwise.
      */
    public boolean hasReferer() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'referer' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearReferer() {
      referer = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageName' field.
      * @return The value.
      */
    public java.lang.String getPageName() {
      return pageName;
    }

    /**
      * Sets the value of the 'pageName' field.
      * @param value The value of 'pageName'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPageName(java.lang.String value) {
      validate(fields()[22], value);
      this.pageName = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'pageName' field has been set.
      * @return True if the 'pageName' field has been set, false otherwise.
      */
    public boolean hasPageName() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'pageName' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPageName() {
      pageName = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageGroupId' field.
      * @return The value.
      */
    public java.lang.Integer getPageGroupId() {
      return pageGroupId;
    }

    /**
      * Sets the value of the 'pageGroupId' field.
      * @param value The value of 'pageGroupId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPageGroupId(java.lang.Integer value) {
      validate(fields()[23], value);
      this.pageGroupId = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'pageGroupId' field has been set.
      * @return True if the 'pageGroupId' field has been set, false otherwise.
      */
    public boolean hasPageGroupId() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'pageGroupId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPageGroupId() {
      pageGroupId = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageGroupName' field.
      * @return The value.
      */
    public java.lang.String getPageGroupName() {
      return pageGroupName;
    }

    /**
      * Sets the value of the 'pageGroupName' field.
      * @param value The value of 'pageGroupName'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPageGroupName(java.lang.String value) {
      validate(fields()[24], value);
      this.pageGroupName = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'pageGroupName' field has been set.
      * @return True if the 'pageGroupName' field has been set, false otherwise.
      */
    public boolean hasPageGroupName() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'pageGroupName' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPageGroupName() {
      pageGroupName = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageGroupDesc' field.
      * @return The value.
      */
    public java.lang.String getPageGroupDesc() {
      return pageGroupDesc;
    }

    /**
      * Sets the value of the 'pageGroupDesc' field.
      * @param value The value of 'pageGroupDesc'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPageGroupDesc(java.lang.String value) {
      validate(fields()[25], value);
      this.pageGroupDesc = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'pageGroupDesc' field has been set.
      * @return True if the 'pageGroupDesc' field has been set, false otherwise.
      */
    public boolean hasPageGroupDesc() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'pageGroupDesc' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPageGroupDesc() {
      pageGroupDesc = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'elementId' field.
      * @return The value.
      */
    public java.lang.String getElementId() {
      return elementId;
    }

    /**
      * Sets the value of the 'elementId' field.
      * @param value The value of 'elementId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setElementId(java.lang.String value) {
      validate(fields()[26], value);
      this.elementId = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'elementId' field has been set.
      * @return True if the 'elementId' field has been set, false otherwise.
      */
    public boolean hasElementId() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'elementId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearElementId() {
      elementId = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'elementName' field.
      * @return The value.
      */
    public java.lang.String getElementName() {
      return elementName;
    }

    /**
      * Sets the value of the 'elementName' field.
      * @param value The value of 'elementName'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setElementName(java.lang.String value) {
      validate(fields()[27], value);
      this.elementName = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'elementName' field has been set.
      * @return True if the 'elementName' field has been set, false otherwise.
      */
    public boolean hasElementName() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'elementName' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearElementName() {
      elementName = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'moduleId' field.
      * @return The value.
      */
    public java.lang.Integer getModuleId() {
      return moduleId;
    }

    /**
      * Sets the value of the 'moduleId' field.
      * @param value The value of 'moduleId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setModuleId(java.lang.Integer value) {
      validate(fields()[28], value);
      this.moduleId = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'moduleId' field has been set.
      * @return True if the 'moduleId' field has been set, false otherwise.
      */
    public boolean hasModuleId() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'moduleId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearModuleId() {
      moduleId = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'moduleName' field.
      * @return The value.
      */
    public java.lang.String getModuleName() {
      return moduleName;
    }

    /**
      * Sets the value of the 'moduleName' field.
      * @param value The value of 'moduleName'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setModuleName(java.lang.String value) {
      validate(fields()[29], value);
      this.moduleName = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'moduleName' field has been set.
      * @return True if the 'moduleName' field has been set, false otherwise.
      */
    public boolean hasModuleName() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'moduleName' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearModuleName() {
      moduleName = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'moduleDesc' field.
      * @return The value.
      */
    public java.lang.String getModuleDesc() {
      return moduleDesc;
    }

    /**
      * Sets the value of the 'moduleDesc' field.
      * @param value The value of 'moduleDesc'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setModuleDesc(java.lang.String value) {
      validate(fields()[30], value);
      this.moduleDesc = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'moduleDesc' field has been set.
      * @return True if the 'moduleDesc' field has been set, false otherwise.
      */
    public boolean hasModuleDesc() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'moduleDesc' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearModuleDesc() {
      moduleDesc = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'clickId' field.
      * @return The value.
      */
    public java.lang.Integer getClickId() {
      return clickId;
    }

    /**
      * Sets the value of the 'clickId' field.
      * @param value The value of 'clickId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setClickId(java.lang.Integer value) {
      validate(fields()[31], value);
      this.clickId = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'clickId' field has been set.
      * @return True if the 'clickId' field has been set, false otherwise.
      */
    public boolean hasClickId() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'clickId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearClickId() {
      clickId = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'clickName' field.
      * @return The value.
      */
    public java.lang.String getClickName() {
      return clickName;
    }

    /**
      * Sets the value of the 'clickName' field.
      * @param value The value of 'clickName'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setClickName(java.lang.String value) {
      validate(fields()[32], value);
      this.clickName = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'clickName' field has been set.
      * @return True if the 'clickName' field has been set, false otherwise.
      */
    public boolean hasClickName() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'clickName' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearClickName() {
      clickName = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'clickDesc' field.
      * @return The value.
      */
    public java.lang.String getClickDesc() {
      return clickDesc;
    }

    /**
      * Sets the value of the 'clickDesc' field.
      * @param value The value of 'clickDesc'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setClickDesc(java.lang.String value) {
      validate(fields()[33], value);
      this.clickDesc = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'clickDesc' field has been set.
      * @return True if the 'clickDesc' field has been set, false otherwise.
      */
    public boolean hasClickDesc() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'clickDesc' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearClickDesc() {
      clickDesc = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'destinationUrl' field.
      * @return The value.
      */
    public java.lang.String getDestinationUrl() {
      return destinationUrl;
    }

    /**
      * Sets the value of the 'destinationUrl' field.
      * @param value The value of 'destinationUrl'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setDestinationUrl(java.lang.String value) {
      validate(fields()[34], value);
      this.destinationUrl = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'destinationUrl' field has been set.
      * @return True if the 'destinationUrl' field has been set, false otherwise.
      */
    public boolean hasDestinationUrl() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'destinationUrl' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearDestinationUrl() {
      destinationUrl = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'imageUrl' field.
      * @return The value.
      */
    public java.lang.String getImageUrl() {
      return imageUrl;
    }

    /**
      * Sets the value of the 'imageUrl' field.
      * @param value The value of 'imageUrl'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setImageUrl(java.lang.String value) {
      validate(fields()[35], value);
      this.imageUrl = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'imageUrl' field has been set.
      * @return True if the 'imageUrl' field has been set, false otherwise.
      */
    public boolean hasImageUrl() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'imageUrl' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearImageUrl() {
      imageUrl = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'elementLabel' field.
      * @return The value.
      */
    public java.lang.String getElementLabel() {
      return elementLabel;
    }

    /**
      * Sets the value of the 'elementLabel' field.
      * @param value The value of 'elementLabel'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setElementLabel(java.lang.String value) {
      validate(fields()[36], value);
      this.elementLabel = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'elementLabel' field has been set.
      * @return True if the 'elementLabel' field has been set, false otherwise.
      */
    public boolean hasElementLabel() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'elementLabel' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearElementLabel() {
      elementLabel = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'elementSelectorPath' field.
      * @return The value.
      */
    public java.lang.String getElementSelectorPath() {
      return elementSelectorPath;
    }

    /**
      * Sets the value of the 'elementSelectorPath' field.
      * @param value The value of 'elementSelectorPath'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setElementSelectorPath(java.lang.String value) {
      validate(fields()[37], value);
      this.elementSelectorPath = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'elementSelectorPath' field has been set.
      * @return True if the 'elementSelectorPath' field has been set, false otherwise.
      */
    public boolean hasElementSelectorPath() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'elementSelectorPath' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearElementSelectorPath() {
      elementSelectorPath = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemId' field.
      * @return The value.
      */
    public java.lang.Long getItemId() {
      return itemId;
    }

    /**
      * Sets the value of the 'itemId' field.
      * @param value The value of 'itemId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setItemId(java.lang.Long value) {
      validate(fields()[38], value);
      this.itemId = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'itemId' field has been set.
      * @return True if the 'itemId' field has been set, false otherwise.
      */
    public boolean hasItemId() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'itemId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearItemId() {
      itemId = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteId' field.
      * @return The value.
      */
    public java.lang.Integer getSiteId() {
      return siteId;
    }

    /**
      * Sets the value of the 'siteId' field.
      * @param value The value of 'siteId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setSiteId(java.lang.Integer value) {
      validate(fields()[39], value);
      this.siteId = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'siteId' field has been set.
      * @return True if the 'siteId' field has been set, false otherwise.
      */
    public boolean hasSiteId() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'siteId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearSiteId() {
      siteId = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'dt' field.
      * @return The value.
      */
    public java.lang.String getDt() {
      return dt;
    }

    /**
      * Sets the value of the 'dt' field.
      * @param value The value of 'dt'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setDt(java.lang.String value) {
      validate(fields()[40], value);
      this.dt = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'dt' field has been set.
      * @return True if the 'dt' field has been set, false otherwise.
      */
    public boolean hasDt() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'dt' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearDt() {
      dt = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'bizDtl' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getBizDtl() {
      return bizDtl;
    }

    /**
      * Sets the value of the 'bizDtl' field.
      * @param value The value of 'bizDtl'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setBizDtl(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[41], value);
      this.bizDtl = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'bizDtl' field has been set.
      * @return True if the 'bizDtl' field has been set, false otherwise.
      */
    public boolean hasBizDtl() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'bizDtl' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearBizDtl() {
      bizDtl = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackableId' field.
      * @return The value.
      */
    public java.lang.String getTrackableId() {
      return trackableId;
    }

    /**
      * Sets the value of the 'trackableId' field.
      * @param value The value of 'trackableId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setTrackableId(java.lang.String value) {
      validate(fields()[42], value);
      this.trackableId = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'trackableId' field has been set.
      * @return True if the 'trackableId' field has been set, false otherwise.
      */
    public boolean hasTrackableId() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'trackableId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearTrackableId() {
      trackableId = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionId' field.
      * @return The value.
      */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    /**
      * Sets the value of the 'sessionId' field.
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setSessionId(java.lang.String value) {
      validate(fields()[43], value);
      this.sessionId = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearSessionId() {
      sessionId = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'correlationId' field.
      * @return The value.
      */
    public java.lang.String getCorrelationId() {
      return correlationId;
    }

    /**
      * Sets the value of the 'correlationId' field.
      * @param value The value of 'correlationId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setCorrelationId(java.lang.String value) {
      validate(fields()[44], value);
      this.correlationId = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'correlationId' field has been set.
      * @return True if the 'correlationId' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'correlationId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearCorrelationId() {
      correlationId = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'screenId' field.
      * @return The value.
      */
    public java.lang.String getScreenId() {
      return screenId;
    }

    /**
      * Sets the value of the 'screenId' field.
      * @param value The value of 'screenId'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setScreenId(java.lang.String value) {
      validate(fields()[45], value);
      this.screenId = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'screenId' field has been set.
      * @return True if the 'screenId' field has been set, false otherwise.
      */
    public boolean hasScreenId() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'screenId' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearScreenId() {
      screenId = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'ratio' field.
      * @return The value.
      */
    public java.lang.Double getRatio() {
      return ratio;
    }

    /**
      * Sets the value of the 'ratio' field.
      * @param value The value of 'ratio'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setRatio(java.lang.Double value) {
      validate(fields()[46], value);
      this.ratio = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'ratio' field has been set.
      * @return True if the 'ratio' field has been set, false otherwise.
      */
    public boolean hasRatio() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'ratio' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearRatio() {
      ratio = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'userAgent' field.
      * @return The value.
      */
    public java.lang.String getUserAgent() {
      return userAgent;
    }

    /**
      * Sets the value of the 'userAgent' field.
      * @param value The value of 'userAgent'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setUserAgent(java.lang.String value) {
      validate(fields()[47], value);
      this.userAgent = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'userAgent' field has been set.
      * @return True if the 'userAgent' field has been set, false otherwise.
      */
    public boolean hasUserAgent() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'userAgent' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearUserAgent() {
      userAgent = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'userLang' field.
      * @return The value.
      */
    public java.lang.String getUserLang() {
      return userLang;
    }

    /**
      * Sets the value of the 'userLang' field.
      * @param value The value of 'userLang'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setUserLang(java.lang.String value) {
      validate(fields()[48], value);
      this.userLang = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'userLang' field has been set.
      * @return True if the 'userLang' field has been set, false otherwise.
      */
    public boolean hasUserLang() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'userLang' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearUserLang() {
      userLang = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'screenWidth' field.
      * @return The value.
      */
    public java.lang.Integer getScreenWidth() {
      return screenWidth;
    }

    /**
      * Sets the value of the 'screenWidth' field.
      * @param value The value of 'screenWidth'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setScreenWidth(java.lang.Integer value) {
      validate(fields()[49], value);
      this.screenWidth = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'screenWidth' field has been set.
      * @return True if the 'screenWidth' field has been set, false otherwise.
      */
    public boolean hasScreenWidth() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'screenWidth' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearScreenWidth() {
      screenWidth = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'screenHeight' field.
      * @return The value.
      */
    public java.lang.Integer getScreenHeight() {
      return screenHeight;
    }

    /**
      * Sets the value of the 'screenHeight' field.
      * @param value The value of 'screenHeight'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setScreenHeight(java.lang.Integer value) {
      validate(fields()[50], value);
      this.screenHeight = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'screenHeight' field has been set.
      * @return True if the 'screenHeight' field has been set, false otherwise.
      */
    public boolean hasScreenHeight() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'screenHeight' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearScreenHeight() {
      screenHeight = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'viewportWidth' field.
      * @return The value.
      */
    public java.lang.Integer getViewportWidth() {
      return viewportWidth;
    }

    /**
      * Sets the value of the 'viewportWidth' field.
      * @param value The value of 'viewportWidth'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setViewportWidth(java.lang.Integer value) {
      validate(fields()[51], value);
      this.viewportWidth = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'viewportWidth' field has been set.
      * @return True if the 'viewportWidth' field has been set, false otherwise.
      */
    public boolean hasViewportWidth() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'viewportWidth' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearViewportWidth() {
      viewportWidth = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'viewportHeight' field.
      * @return The value.
      */
    public java.lang.Integer getViewportHeight() {
      return viewportHeight;
    }

    /**
      * Sets the value of the 'viewportHeight' field.
      * @param value The value of 'viewportHeight'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setViewportHeight(java.lang.Integer value) {
      validate(fields()[52], value);
      this.viewportHeight = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'viewportHeight' field has been set.
      * @return True if the 'viewportHeight' field has been set, false otherwise.
      */
    public boolean hasViewportHeight() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'viewportHeight' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearViewportHeight() {
      viewportHeight = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageLoad' field.
      * @return The value.
      */
    public java.lang.Long getPageLoad() {
      return pageLoad;
    }

    /**
      * Sets the value of the 'pageLoad' field.
      * @param value The value of 'pageLoad'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setPageLoad(java.lang.Long value) {
      validate(fields()[53], value);
      this.pageLoad = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'pageLoad' field has been set.
      * @return True if the 'pageLoad' field has been set, false otherwise.
      */
    public boolean hasPageLoad() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'pageLoad' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearPageLoad() {
      pageLoad = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'ttfb' field.
      * @return The value.
      */
    public java.lang.Long getTtfb() {
      return ttfb;
    }

    /**
      * Sets the value of the 'ttfb' field.
      * @param value The value of 'ttfb'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setTtfb(java.lang.Long value) {
      validate(fields()[54], value);
      this.ttfb = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'ttfb' field has been set.
      * @return True if the 'ttfb' field has been set, false otherwise.
      */
    public boolean hasTtfb() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'ttfb' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearTtfb() {
      ttfb = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemDtl' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getItemDtl() {
      return itemDtl;
    }

    /**
      * Sets the value of the 'itemDtl' field.
      * @param value The value of 'itemDtl'.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder setItemDtl(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[55], value);
      this.itemDtl = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'itemDtl' field has been set.
      * @return True if the 'itemDtl' field has been set, false otherwise.
      */
    public boolean hasItemDtl() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'itemDtl' field.
      * @return This builder.
      */
    public org.ebayanalytics.globalevent.GlobalEvent.Builder clearItemDtl() {
      itemDtl = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GlobalEvent build() {
      try {
        GlobalEvent record = new GlobalEvent();
        if (rheosHeaderBuilder != null) {
          record.rheosHeader = this.rheosHeaderBuilder.build();
        } else {
          record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader : (org.ebayanalytics.globalevent.RheosHeader) defaultValue(fields()[0]);
        }
        record.dataSrc = fieldSetFlags()[1] ? this.dataSrc : (java.lang.String) defaultValue(fields()[1]);
        record.snapshotVersion = fieldSetFlags()[2] ? this.snapshotVersion : (java.lang.String) defaultValue(fields()[2]);
        record.eventId = fieldSetFlags()[3] ? this.eventId : (java.lang.String) defaultValue(fields()[3]);
        record.customEventIds = fieldSetFlags()[4] ? this.customEventIds : (java.util.List<java.lang.String>) defaultValue(fields()[4]);
        record.assetType = fieldSetFlags()[5] ? this.assetType : (java.lang.String) defaultValue(fields()[5]);
        record.guid = fieldSetFlags()[6] ? this.guid : (java.lang.String) defaultValue(fields()[6]);
        record.userId = fieldSetFlags()[7] ? this.userId : (java.lang.Long) defaultValue(fields()[7]);
        record.eventTime = fieldSetFlags()[8] ? this.eventTime : (java.lang.Long) defaultValue(fields()[8]);
        record.eventTrigger = fieldSetFlags()[9] ? this.eventTrigger : (java.lang.String) defaultValue(fields()[9]);
        record.customEventTriggers = fieldSetFlags()[10] ? this.customEventTriggers : (java.util.List<java.lang.String>) defaultValue(fields()[10]);
        record.eventPrimaryAsset = fieldSetFlags()[11] ? this.eventPrimaryAsset : (java.lang.String) defaultValue(fields()[11]);
        record.customEventPrimaryAssets = fieldSetFlags()[12] ? this.customEventPrimaryAssets : (java.util.List<java.lang.String>) defaultValue(fields()[12]);
        record.label = fieldSetFlags()[13] ? this.label : (java.lang.String) defaultValue(fields()[13]);
        record.activityDtl = fieldSetFlags()[14] ? this.activityDtl : (java.lang.String) defaultValue(fields()[14]);
        record.dwell = fieldSetFlags()[15] ? this.dwell : (java.lang.Long) defaultValue(fields()[15]);
        record.eventLevel = fieldSetFlags()[16] ? this.eventLevel : (java.lang.String) defaultValue(fields()[16]);
        record.experience = fieldSetFlags()[17] ? this.experience : (java.lang.String) defaultValue(fields()[17]);
        record.pageId = fieldSetFlags()[18] ? this.pageId : (java.lang.Long) defaultValue(fields()[18]);
        record.pageUrl = fieldSetFlags()[19] ? this.pageUrl : (java.lang.String) defaultValue(fields()[19]);
        record.payload = fieldSetFlags()[20] ? this.payload : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[20]);
        record.referer = fieldSetFlags()[21] ? this.referer : (java.lang.String) defaultValue(fields()[21]);
        record.pageName = fieldSetFlags()[22] ? this.pageName : (java.lang.String) defaultValue(fields()[22]);
        record.pageGroupId = fieldSetFlags()[23] ? this.pageGroupId : (java.lang.Integer) defaultValue(fields()[23]);
        record.pageGroupName = fieldSetFlags()[24] ? this.pageGroupName : (java.lang.String) defaultValue(fields()[24]);
        record.pageGroupDesc = fieldSetFlags()[25] ? this.pageGroupDesc : (java.lang.String) defaultValue(fields()[25]);
        record.elementId = fieldSetFlags()[26] ? this.elementId : (java.lang.String) defaultValue(fields()[26]);
        record.elementName = fieldSetFlags()[27] ? this.elementName : (java.lang.String) defaultValue(fields()[27]);
        record.moduleId = fieldSetFlags()[28] ? this.moduleId : (java.lang.Integer) defaultValue(fields()[28]);
        record.moduleName = fieldSetFlags()[29] ? this.moduleName : (java.lang.String) defaultValue(fields()[29]);
        record.moduleDesc = fieldSetFlags()[30] ? this.moduleDesc : (java.lang.String) defaultValue(fields()[30]);
        record.clickId = fieldSetFlags()[31] ? this.clickId : (java.lang.Integer) defaultValue(fields()[31]);
        record.clickName = fieldSetFlags()[32] ? this.clickName : (java.lang.String) defaultValue(fields()[32]);
        record.clickDesc = fieldSetFlags()[33] ? this.clickDesc : (java.lang.String) defaultValue(fields()[33]);
        record.destinationUrl = fieldSetFlags()[34] ? this.destinationUrl : (java.lang.String) defaultValue(fields()[34]);
        record.imageUrl = fieldSetFlags()[35] ? this.imageUrl : (java.lang.String) defaultValue(fields()[35]);
        record.elementLabel = fieldSetFlags()[36] ? this.elementLabel : (java.lang.String) defaultValue(fields()[36]);
        record.elementSelectorPath = fieldSetFlags()[37] ? this.elementSelectorPath : (java.lang.String) defaultValue(fields()[37]);
        record.itemId = fieldSetFlags()[38] ? this.itemId : (java.lang.Long) defaultValue(fields()[38]);
        record.siteId = fieldSetFlags()[39] ? this.siteId : (java.lang.Integer) defaultValue(fields()[39]);
        record.dt = fieldSetFlags()[40] ? this.dt : (java.lang.String) defaultValue(fields()[40]);
        record.bizDtl = fieldSetFlags()[41] ? this.bizDtl : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[41]);
        record.trackableId = fieldSetFlags()[42] ? this.trackableId : (java.lang.String) defaultValue(fields()[42]);
        record.sessionId = fieldSetFlags()[43] ? this.sessionId : (java.lang.String) defaultValue(fields()[43]);
        record.correlationId = fieldSetFlags()[44] ? this.correlationId : (java.lang.String) defaultValue(fields()[44]);
        record.screenId = fieldSetFlags()[45] ? this.screenId : (java.lang.String) defaultValue(fields()[45]);
        record.ratio = fieldSetFlags()[46] ? this.ratio : (java.lang.Double) defaultValue(fields()[46]);
        record.userAgent = fieldSetFlags()[47] ? this.userAgent : (java.lang.String) defaultValue(fields()[47]);
        record.userLang = fieldSetFlags()[48] ? this.userLang : (java.lang.String) defaultValue(fields()[48]);
        record.screenWidth = fieldSetFlags()[49] ? this.screenWidth : (java.lang.Integer) defaultValue(fields()[49]);
        record.screenHeight = fieldSetFlags()[50] ? this.screenHeight : (java.lang.Integer) defaultValue(fields()[50]);
        record.viewportWidth = fieldSetFlags()[51] ? this.viewportWidth : (java.lang.Integer) defaultValue(fields()[51]);
        record.viewportHeight = fieldSetFlags()[52] ? this.viewportHeight : (java.lang.Integer) defaultValue(fields()[52]);
        record.pageLoad = fieldSetFlags()[53] ? this.pageLoad : (java.lang.Long) defaultValue(fields()[53]);
        record.ttfb = fieldSetFlags()[54] ? this.ttfb : (java.lang.Long) defaultValue(fields()[54]);
        record.itemDtl = fieldSetFlags()[55] ? this.itemDtl : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[55]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GlobalEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<GlobalEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GlobalEvent>
    READER$ = (org.apache.avro.io.DatumReader<GlobalEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
