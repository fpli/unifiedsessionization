/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.epic.common.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SessionizedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5678620597477478347L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SessionizedEvent\",\"namespace\":\"com.ebay.epic.common.model\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"guid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sessionId\",\"type\":\"long\"},{\"name\":\"sessionStartDt\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"siteId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"agentVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Context\",\"fields\":[{\"name\":\"appId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"os\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"utcOffset\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"clientIp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userLang\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"userAgent\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"screenWidth\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"screenHeight\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"screenDPI\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"deviceInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MobileDeviceContext\",\"fields\":[{\"name\":\"formFactor\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"FormFactor\",\"symbols\":[\"phone\",\"tablet\",\"watch\",\"desktop\"]}],\"default\":null},{\"name\":\"manufacturer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"osVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"model\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"networkCarrier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"networkConnectionType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"theme\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"countryId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"others\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"trackable\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Trackable\",\"fields\":[{\"name\":\"trackableId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"parentTrackableId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"entityId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"instanceId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"correlationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"screenId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"entityType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"activity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Activity\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"ratio\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"viewportWidth\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"viewportHeight\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"category\",\"type\":{\"type\":\"enum\",\"name\":\"ActivityCategory\",\"symbols\":[\"Impression\",\"Click\"]}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"referer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"details\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SessionizedEvent> ENCODER =
      new BinaryMessageEncoder<SessionizedEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SessionizedEvent> DECODER =
      new BinaryMessageDecoder<SessionizedEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SessionizedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SessionizedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SessionizedEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SessionizedEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SessionizedEvent from a ByteBuffer. */
  public static SessionizedEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.ebay.epic.common.model.RheosHeader rheosHeader;
  @Deprecated public java.lang.String guid;
  @Deprecated public long sessionId;
  @Deprecated public java.lang.String sessionStartDt;
  @Deprecated public java.lang.Long userId;
  @Deprecated public java.lang.Integer siteId;
  @Deprecated public java.lang.String agentVersion;
  @Deprecated public com.ebay.epic.common.model.Context context;
  @Deprecated public com.ebay.epic.common.model.Trackable trackable;
  @Deprecated public com.ebay.epic.common.model.Activity activity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SessionizedEvent() {}

  /**
   * All-args constructor.
   * @param rheosHeader The new value for rheosHeader
   * @param guid The new value for guid
   * @param sessionId The new value for sessionId
   * @param sessionStartDt The new value for sessionStartDt
   * @param userId The new value for userId
   * @param siteId The new value for siteId
   * @param agentVersion The new value for agentVersion
   * @param context The new value for context
   * @param trackable The new value for trackable
   * @param activity The new value for activity
   */
  public SessionizedEvent(com.ebay.epic.common.model.RheosHeader rheosHeader, java.lang.String guid, java.lang.Long sessionId, java.lang.String sessionStartDt, java.lang.Long userId, java.lang.Integer siteId, java.lang.String agentVersion, com.ebay.epic.common.model.Context context, com.ebay.epic.common.model.Trackable trackable, com.ebay.epic.common.model.Activity activity) {
    this.rheosHeader = rheosHeader;
    this.guid = guid;
    this.sessionId = sessionId;
    this.sessionStartDt = sessionStartDt;
    this.userId = userId;
    this.siteId = siteId;
    this.agentVersion = agentVersion;
    this.context = context;
    this.trackable = trackable;
    this.activity = activity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rheosHeader;
    case 1: return guid;
    case 2: return sessionId;
    case 3: return sessionStartDt;
    case 4: return userId;
    case 5: return siteId;
    case 6: return agentVersion;
    case 7: return context;
    case 8: return trackable;
    case 9: return activity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rheosHeader = (com.ebay.epic.common.model.RheosHeader)value$; break;
    case 1: guid = (java.lang.String)value$; break;
    case 2: sessionId = (java.lang.Long)value$; break;
    case 3: sessionStartDt = (java.lang.String)value$; break;
    case 4: userId = (java.lang.Long)value$; break;
    case 5: siteId = (java.lang.Integer)value$; break;
    case 6: agentVersion = (java.lang.String)value$; break;
    case 7: context = (com.ebay.epic.common.model.Context)value$; break;
    case 8: trackable = (com.ebay.epic.common.model.Trackable)value$; break;
    case 9: activity = (com.ebay.epic.common.model.Activity)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field.
   * @return The value of the 'rheosHeader' field.
   */
  public com.ebay.epic.common.model.RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field.
   * @param value the value to set.
   */
  public void setRheosHeader(com.ebay.epic.common.model.RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'guid' field.
   * @return The value of the 'guid' field.
   */
  public java.lang.String getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field.
   * @param value the value to set.
   */
  public void setGuid(java.lang.String value) {
    this.guid = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return The value of the 'sessionId' field.
   */
  public java.lang.Long getSessionId() {
    return sessionId;
  }

  /**
   * Sets the value of the 'sessionId' field.
   * @param value the value to set.
   */
  public void setSessionId(java.lang.Long value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'sessionStartDt' field.
   * @return The value of the 'sessionStartDt' field.
   */
  public java.lang.String getSessionStartDt() {
    return sessionStartDt;
  }

  /**
   * Sets the value of the 'sessionStartDt' field.
   * @param value the value to set.
   */
  public void setSessionStartDt(java.lang.String value) {
    this.sessionStartDt = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'siteId' field.
   * @return The value of the 'siteId' field.
   */
  public java.lang.Integer getSiteId() {
    return siteId;
  }

  /**
   * Sets the value of the 'siteId' field.
   * @param value the value to set.
   */
  public void setSiteId(java.lang.Integer value) {
    this.siteId = value;
  }

  /**
   * Gets the value of the 'agentVersion' field.
   * @return The value of the 'agentVersion' field.
   */
  public java.lang.String getAgentVersion() {
    return agentVersion;
  }

  /**
   * Sets the value of the 'agentVersion' field.
   * @param value the value to set.
   */
  public void setAgentVersion(java.lang.String value) {
    this.agentVersion = value;
  }

  /**
   * Gets the value of the 'context' field.
   * @return The value of the 'context' field.
   */
  public com.ebay.epic.common.model.Context getContext() {
    return context;
  }

  /**
   * Sets the value of the 'context' field.
   * @param value the value to set.
   */
  public void setContext(com.ebay.epic.common.model.Context value) {
    this.context = value;
  }

  /**
   * Gets the value of the 'trackable' field.
   * @return The value of the 'trackable' field.
   */
  public com.ebay.epic.common.model.Trackable getTrackable() {
    return trackable;
  }

  /**
   * Sets the value of the 'trackable' field.
   * @param value the value to set.
   */
  public void setTrackable(com.ebay.epic.common.model.Trackable value) {
    this.trackable = value;
  }

  /**
   * Gets the value of the 'activity' field.
   * @return The value of the 'activity' field.
   */
  public com.ebay.epic.common.model.Activity getActivity() {
    return activity;
  }

  /**
   * Sets the value of the 'activity' field.
   * @param value the value to set.
   */
  public void setActivity(com.ebay.epic.common.model.Activity value) {
    this.activity = value;
  }

  /**
   * Creates a new SessionizedEvent RecordBuilder.
   * @return A new SessionizedEvent RecordBuilder
   */
  public static com.ebay.epic.common.model.SessionizedEvent.Builder newBuilder() {
    return new com.ebay.epic.common.model.SessionizedEvent.Builder();
  }

  /**
   * Creates a new SessionizedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SessionizedEvent RecordBuilder
   */
  public static com.ebay.epic.common.model.SessionizedEvent.Builder newBuilder(com.ebay.epic.common.model.SessionizedEvent.Builder other) {
    return new com.ebay.epic.common.model.SessionizedEvent.Builder(other);
  }

  /**
   * Creates a new SessionizedEvent RecordBuilder by copying an existing SessionizedEvent instance.
   * @param other The existing instance to copy.
   * @return A new SessionizedEvent RecordBuilder
   */
  public static com.ebay.epic.common.model.SessionizedEvent.Builder newBuilder(com.ebay.epic.common.model.SessionizedEvent other) {
    return new com.ebay.epic.common.model.SessionizedEvent.Builder(other);
  }

  /**
   * RecordBuilder for SessionizedEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SessionizedEvent>
    implements org.apache.avro.data.RecordBuilder<SessionizedEvent> {

    private com.ebay.epic.common.model.RheosHeader rheosHeader;
    private com.ebay.epic.common.model.RheosHeader.Builder rheosHeaderBuilder;
    private java.lang.String guid;
    private long sessionId;
    private java.lang.String sessionStartDt;
    private java.lang.Long userId;
    private java.lang.Integer siteId;
    private java.lang.String agentVersion;
    private com.ebay.epic.common.model.Context context;
    private com.ebay.epic.common.model.Context.Builder contextBuilder;
    private com.ebay.epic.common.model.Trackable trackable;
    private com.ebay.epic.common.model.Trackable.Builder trackableBuilder;
    private com.ebay.epic.common.model.Activity activity;
    private com.ebay.epic.common.model.Activity.Builder activityBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.epic.common.model.SessionizedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (other.hasRheosHeaderBuilder()) {
        this.rheosHeaderBuilder = com.ebay.epic.common.model.RheosHeader.newBuilder(other.getRheosHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[2].schema(), other.sessionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[3].schema(), other.sessionStartDt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userId)) {
        this.userId = data().deepCopy(fields()[4].schema(), other.userId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.siteId)) {
        this.siteId = data().deepCopy(fields()[5].schema(), other.siteId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.agentVersion)) {
        this.agentVersion = data().deepCopy(fields()[6].schema(), other.agentVersion);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.context)) {
        this.context = data().deepCopy(fields()[7].schema(), other.context);
        fieldSetFlags()[7] = true;
      }
      if (other.hasContextBuilder()) {
        this.contextBuilder = com.ebay.epic.common.model.Context.newBuilder(other.getContextBuilder());
      }
      if (isValidValue(fields()[8], other.trackable)) {
        this.trackable = data().deepCopy(fields()[8].schema(), other.trackable);
        fieldSetFlags()[8] = true;
      }
      if (other.hasTrackableBuilder()) {
        this.trackableBuilder = com.ebay.epic.common.model.Trackable.newBuilder(other.getTrackableBuilder());
      }
      if (isValidValue(fields()[9], other.activity)) {
        this.activity = data().deepCopy(fields()[9].schema(), other.activity);
        fieldSetFlags()[9] = true;
      }
      if (other.hasActivityBuilder()) {
        this.activityBuilder = com.ebay.epic.common.model.Activity.newBuilder(other.getActivityBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing SessionizedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.epic.common.model.SessionizedEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      this.rheosHeaderBuilder = null;
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[2].schema(), other.sessionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[3].schema(), other.sessionStartDt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userId)) {
        this.userId = data().deepCopy(fields()[4].schema(), other.userId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.siteId)) {
        this.siteId = data().deepCopy(fields()[5].schema(), other.siteId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.agentVersion)) {
        this.agentVersion = data().deepCopy(fields()[6].schema(), other.agentVersion);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.context)) {
        this.context = data().deepCopy(fields()[7].schema(), other.context);
        fieldSetFlags()[7] = true;
      }
      this.contextBuilder = null;
      if (isValidValue(fields()[8], other.trackable)) {
        this.trackable = data().deepCopy(fields()[8].schema(), other.trackable);
        fieldSetFlags()[8] = true;
      }
      this.trackableBuilder = null;
      if (isValidValue(fields()[9], other.activity)) {
        this.activity = data().deepCopy(fields()[9].schema(), other.activity);
        fieldSetFlags()[9] = true;
      }
      this.activityBuilder = null;
    }

    /**
      * Gets the value of the 'rheosHeader' field.
      * @return The value.
      */
    public com.ebay.epic.common.model.RheosHeader getRheosHeader() {
      return rheosHeader;
    }

    /**
      * Sets the value of the 'rheosHeader' field.
      * @param value The value of 'rheosHeader'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setRheosHeader(com.ebay.epic.common.model.RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeaderBuilder = null;
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rheosHeader' field has been set.
      * @return True if the 'rheosHeader' field has been set, false otherwise.
      */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'rheosHeader' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.ebay.epic.common.model.RheosHeader.Builder getRheosHeaderBuilder() {
      if (rheosHeaderBuilder == null) {
        if (hasRheosHeader()) {
          setRheosHeaderBuilder(com.ebay.epic.common.model.RheosHeader.newBuilder(rheosHeader));
        } else {
          setRheosHeaderBuilder(com.ebay.epic.common.model.RheosHeader.newBuilder());
        }
      }
      return rheosHeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'rheosHeader' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setRheosHeaderBuilder(com.ebay.epic.common.model.RheosHeader.Builder value) {
      clearRheosHeader();
      rheosHeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'rheosHeader' field has an active Builder instance
     * @return True if the 'rheosHeader' field has an active Builder instance
     */
    public boolean hasRheosHeaderBuilder() {
      return rheosHeaderBuilder != null;
    }

    /**
      * Clears the value of the 'rheosHeader' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearRheosHeader() {
      rheosHeader = null;
      rheosHeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'guid' field.
      * @return The value.
      */
    public java.lang.String getGuid() {
      return guid;
    }

    /**
      * Sets the value of the 'guid' field.
      * @param value The value of 'guid'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setGuid(java.lang.String value) {
      validate(fields()[1], value);
      this.guid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'guid' field has been set.
      * @return True if the 'guid' field has been set, false otherwise.
      */
    public boolean hasGuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'guid' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionId' field.
      * @return The value.
      */
    public java.lang.Long getSessionId() {
      return sessionId;
    }

    /**
      * Sets the value of the 'sessionId' field.
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setSessionId(long value) {
      validate(fields()[2], value);
      this.sessionId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearSessionId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionStartDt' field.
      * @return The value.
      */
    public java.lang.String getSessionStartDt() {
      return sessionStartDt;
    }

    /**
      * Sets the value of the 'sessionStartDt' field.
      * @param value The value of 'sessionStartDt'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setSessionStartDt(java.lang.String value) {
      validate(fields()[3], value);
      this.sessionStartDt = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionStartDt' field has been set.
      * @return True if the 'sessionStartDt' field has been set, false otherwise.
      */
    public boolean hasSessionStartDt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'sessionStartDt' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearSessionStartDt() {
      sessionStartDt = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setUserId(java.lang.Long value) {
      validate(fields()[4], value);
      this.userId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteId' field.
      * @return The value.
      */
    public java.lang.Integer getSiteId() {
      return siteId;
    }

    /**
      * Sets the value of the 'siteId' field.
      * @param value The value of 'siteId'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setSiteId(java.lang.Integer value) {
      validate(fields()[5], value);
      this.siteId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'siteId' field has been set.
      * @return True if the 'siteId' field has been set, false otherwise.
      */
    public boolean hasSiteId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'siteId' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearSiteId() {
      siteId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentVersion' field.
      * @return The value.
      */
    public java.lang.String getAgentVersion() {
      return agentVersion;
    }

    /**
      * Sets the value of the 'agentVersion' field.
      * @param value The value of 'agentVersion'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setAgentVersion(java.lang.String value) {
      validate(fields()[6], value);
      this.agentVersion = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'agentVersion' field has been set.
      * @return True if the 'agentVersion' field has been set, false otherwise.
      */
    public boolean hasAgentVersion() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'agentVersion' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearAgentVersion() {
      agentVersion = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'context' field.
      * @return The value.
      */
    public com.ebay.epic.common.model.Context getContext() {
      return context;
    }

    /**
      * Sets the value of the 'context' field.
      * @param value The value of 'context'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setContext(com.ebay.epic.common.model.Context value) {
      validate(fields()[7], value);
      this.contextBuilder = null;
      this.context = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'context' field has been set.
      * @return True if the 'context' field has been set, false otherwise.
      */
    public boolean hasContext() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'context' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.ebay.epic.common.model.Context.Builder getContextBuilder() {
      if (contextBuilder == null) {
        if (hasContext()) {
          setContextBuilder(com.ebay.epic.common.model.Context.newBuilder(context));
        } else {
          setContextBuilder(com.ebay.epic.common.model.Context.newBuilder());
        }
      }
      return contextBuilder;
    }

    /**
     * Sets the Builder instance for the 'context' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setContextBuilder(com.ebay.epic.common.model.Context.Builder value) {
      clearContext();
      contextBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'context' field has an active Builder instance
     * @return True if the 'context' field has an active Builder instance
     */
    public boolean hasContextBuilder() {
      return contextBuilder != null;
    }

    /**
      * Clears the value of the 'context' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearContext() {
      context = null;
      contextBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackable' field.
      * @return The value.
      */
    public com.ebay.epic.common.model.Trackable getTrackable() {
      return trackable;
    }

    /**
      * Sets the value of the 'trackable' field.
      * @param value The value of 'trackable'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setTrackable(com.ebay.epic.common.model.Trackable value) {
      validate(fields()[8], value);
      this.trackableBuilder = null;
      this.trackable = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'trackable' field has been set.
      * @return True if the 'trackable' field has been set, false otherwise.
      */
    public boolean hasTrackable() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'trackable' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.ebay.epic.common.model.Trackable.Builder getTrackableBuilder() {
      if (trackableBuilder == null) {
        if (hasTrackable()) {
          setTrackableBuilder(com.ebay.epic.common.model.Trackable.newBuilder(trackable));
        } else {
          setTrackableBuilder(com.ebay.epic.common.model.Trackable.newBuilder());
        }
      }
      return trackableBuilder;
    }

    /**
     * Sets the Builder instance for the 'trackable' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setTrackableBuilder(com.ebay.epic.common.model.Trackable.Builder value) {
      clearTrackable();
      trackableBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'trackable' field has an active Builder instance
     * @return True if the 'trackable' field has an active Builder instance
     */
    public boolean hasTrackableBuilder() {
      return trackableBuilder != null;
    }

    /**
      * Clears the value of the 'trackable' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearTrackable() {
      trackable = null;
      trackableBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'activity' field.
      * @return The value.
      */
    public com.ebay.epic.common.model.Activity getActivity() {
      return activity;
    }

    /**
      * Sets the value of the 'activity' field.
      * @param value The value of 'activity'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setActivity(com.ebay.epic.common.model.Activity value) {
      validate(fields()[9], value);
      this.activityBuilder = null;
      this.activity = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'activity' field has been set.
      * @return True if the 'activity' field has been set, false otherwise.
      */
    public boolean hasActivity() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'activity' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.ebay.epic.common.model.Activity.Builder getActivityBuilder() {
      if (activityBuilder == null) {
        if (hasActivity()) {
          setActivityBuilder(com.ebay.epic.common.model.Activity.newBuilder(activity));
        } else {
          setActivityBuilder(com.ebay.epic.common.model.Activity.newBuilder());
        }
      }
      return activityBuilder;
    }

    /**
     * Sets the Builder instance for the 'activity' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.epic.common.model.SessionizedEvent.Builder setActivityBuilder(com.ebay.epic.common.model.Activity.Builder value) {
      clearActivity();
      activityBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'activity' field has an active Builder instance
     * @return True if the 'activity' field has an active Builder instance
     */
    public boolean hasActivityBuilder() {
      return activityBuilder != null;
    }

    /**
      * Clears the value of the 'activity' field.
      * @return This builder.
      */
    public com.ebay.epic.common.model.SessionizedEvent.Builder clearActivity() {
      activity = null;
      activityBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SessionizedEvent build() {
      try {
        SessionizedEvent record = new SessionizedEvent();
        if (rheosHeaderBuilder != null) {
          record.rheosHeader = this.rheosHeaderBuilder.build();
        } else {
          record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader : (com.ebay.epic.common.model.RheosHeader) defaultValue(fields()[0]);
        }
        record.guid = fieldSetFlags()[1] ? this.guid : (java.lang.String) defaultValue(fields()[1]);
        record.sessionId = fieldSetFlags()[2] ? this.sessionId : (java.lang.Long) defaultValue(fields()[2]);
        record.sessionStartDt = fieldSetFlags()[3] ? this.sessionStartDt : (java.lang.String) defaultValue(fields()[3]);
        record.userId = fieldSetFlags()[4] ? this.userId : (java.lang.Long) defaultValue(fields()[4]);
        record.siteId = fieldSetFlags()[5] ? this.siteId : (java.lang.Integer) defaultValue(fields()[5]);
        record.agentVersion = fieldSetFlags()[6] ? this.agentVersion : (java.lang.String) defaultValue(fields()[6]);
        if (contextBuilder != null) {
          record.context = this.contextBuilder.build();
        } else {
          record.context = fieldSetFlags()[7] ? this.context : (com.ebay.epic.common.model.Context) defaultValue(fields()[7]);
        }
        if (trackableBuilder != null) {
          record.trackable = this.trackableBuilder.build();
        } else {
          record.trackable = fieldSetFlags()[8] ? this.trackable : (com.ebay.epic.common.model.Trackable) defaultValue(fields()[8]);
        }
        if (activityBuilder != null) {
          record.activity = this.activityBuilder.build();
        } else {
          record.activity = fieldSetFlags()[9] ? this.activity : (com.ebay.epic.common.model.Activity) defaultValue(fields()[9]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SessionizedEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<SessionizedEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SessionizedEvent>
    READER$ = (org.apache.avro.io.DatumReader<SessionizedEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
