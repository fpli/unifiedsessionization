/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.epic.common.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** tags not included but in UbiEvent: current_impr_id, source_impr_id, staticPageType, reservedForFuture, eventAttr, oldSessionSkey, seqNum, sessionStartDt, sojDataDt, version */
@org.apache.avro.specific.AvroGenerated
public class SojEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1690966981714855053L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SojEvent\",\"namespace\":\"com.ebay.epic.sojourner.common.model\",\"doc\":\"tags not included but in UbiEvent: current_impr_id, source_impr_id, staticPageType, reservedForFuture, eventAttr, oldSessionSkey, seqNum, sessionStartDt, sojDataDt, version\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"doc\":\"Rheos header\"},{\"name\":\"guid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"eventTimestamp\",\"type\":\"long\",\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time\"},{\"name\":\"eventCaptureTime\",\"type\":[\"null\",\"long\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case\"},{\"name\":\"requestCorrelationId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq\"},{\"name\":\"cguid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n\"},{\"name\":\"sid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id\"},{\"name\":\"pageId\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag p\"},{\"name\":\"pageName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"pageFamily\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag pgf\"},{\"name\":\"eventFamily\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family\"},{\"name\":\"eventAction\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action\"},{\"name\":\"userId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag u/bu\"},{\"name\":\"clickId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c\"},{\"name\":\"siteId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t\"},{\"name\":\"sessionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag snid\"},{\"name\":\"seqNum\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag snsq\"},{\"name\":\"ciid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"siid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"rdt\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL\"},{\"name\":\"regu\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU\"},{\"name\":\"iframe\",\"type\":[\"null\",\"boolean\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm\"},{\"name\":\"refererHash\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag r\"},{\"name\":\"sqr\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr\"},{\"name\":\"itemId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag itm/item\"},{\"name\":\"flags\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag flgs\"},{\"name\":\"urlQueryString\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag Referer\"},{\"name\":\"webServer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=web server, map from Server\"},{\"name\":\"cookies\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag ck/C\"},{\"name\":\"bot\",\"type\":[\"null\",\"int\"],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag bott\"},{\"name\":\"clientIP\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"remoteIP\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP\"},{\"name\":\"agentInfo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from tag Agent\"},{\"name\":\"appId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app\"},{\"name\":\"appVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=application version, map from mav\"},{\"name\":\"osVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv\"},{\"name\":\"trafficSource\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from trffc_src\"},{\"name\":\"cobrand\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from cbrnd\"},{\"name\":\"deviceFamily\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_d\"},{\"name\":\"deviceType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_dc\"},{\"name\":\"browserVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_bv\"},{\"name\":\"browserFamily\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_bf\"},{\"name\":\"osFamily\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_os\"},{\"name\":\"enrichedOsVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"dataClassification=Internal|isEncrypted=false|description=map from dd_osv\"},{\"name\":\"applicationPayload\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}},{\"name\":\"rlogid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"CAL request log id\",\"default\":null},{\"name\":\"clientData\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload\"},{\"name\":\"ingestTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"sessionSkey\",\"type\":[\"null\",\"long\"]},{\"name\":\"sessionStartDt\",\"type\":[\"null\",\"long\"]},{\"name\":\"sojDataDt\",\"type\":[\"null\",\"long\"]},{\"name\":\"version\",\"type\":[\"null\",\"int\"]},{\"name\":\"staticPageType\",","\"type\":[\"null\",\"int\"]},{\"name\":\"reservedForFuture\",\"type\":[\"null\",\"int\"]},{\"name\":\"eventAttr\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"currentImprId\",\"type\":[\"null\",\"long\"]},{\"name\":\"sourceImprId\",\"type\":[\"null\",\"long\"]},{\"name\":\"oldSessionSkey\",\"type\":[\"null\",\"long\"]},{\"name\":\"partialValidPage\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"botFlags\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"default\":null},{\"name\":\"icfBinary\",\"type\":[\"null\",\"long\"]},{\"name\":\"eventCnt\",\"type\":[\"null\",\"long\"]},{\"name\":\"referrer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"forwardedFor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"rv\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"sojHeader\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"bytes\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SojEvent> ENCODER =
      new BinaryMessageEncoder<SojEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SojEvent> DECODER =
      new BinaryMessageDecoder<SojEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SojEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SojEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SojEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SojEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SojEvent from a ByteBuffer. */
  public static SojEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Rheos header */
  @Deprecated public RheosHeader rheosHeader;
  @Deprecated public java.lang.String guid;
  /** dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time */
  @Deprecated public long eventTimestamp;
  /** dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case */
  @Deprecated public java.lang.Long eventCaptureTime;
  /** dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq */
  @Deprecated public java.lang.String requestCorrelationId;
  /** dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n */
  @Deprecated public java.lang.String cguid;
  /** dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id */
  @Deprecated public java.lang.String sid;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag p */
  @Deprecated public java.lang.Integer pageId;
  @Deprecated public java.lang.String pageName;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag pgf */
  @Deprecated public java.lang.String pageFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family */
  @Deprecated public java.lang.String eventFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action */
  @Deprecated public java.lang.String eventAction;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag u/bu */
  @Deprecated public java.lang.String userId;
  /** dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c */
  @Deprecated public java.lang.String clickId;
  /** dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t */
  @Deprecated public java.lang.String siteId;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag snid */
  @Deprecated public java.lang.String sessionId;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag snsq */
  @Deprecated public java.lang.String seqNum;
  @Deprecated public java.lang.String ciid;
  @Deprecated public java.lang.String siid;
  /** dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL */
  @Deprecated public java.lang.Integer rdt;
  /** dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU */
  @Deprecated public java.lang.Integer regu;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm */
  @Deprecated public java.lang.Boolean iframe;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag r */
  @Deprecated public java.lang.String refererHash;
  /** dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr */
  @Deprecated public java.lang.String sqr;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag itm/item */
  @Deprecated public java.lang.String itemId;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag flgs */
  @Deprecated public java.lang.String flags;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag Referer */
  @Deprecated public java.lang.String urlQueryString;
  /** dataClassification=Internal|isEncrypted=false|description=web server, map from Server */
  @Deprecated public java.lang.String webServer;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag ck/C */
  @Deprecated public java.lang.String cookies;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag bott */
  @Deprecated public java.lang.Integer bot;
  @Deprecated public java.lang.String clientIP;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP */
  @Deprecated public java.lang.String remoteIP;
  /** dataClassification=Internal|isEncrypted=false|description=map from tag Agent */
  @Deprecated public java.lang.String agentInfo;
  /** dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app */
  @Deprecated public java.lang.String appId;
  /** dataClassification=Internal|isEncrypted=false|description=application version, map from mav */
  @Deprecated public java.lang.String appVersion;
  /** dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv */
  @Deprecated public java.lang.String osVersion;
  /** dataClassification=Internal|isEncrypted=false|description=map from trffc_src */
  @Deprecated public java.lang.String trafficSource;
  /** dataClassification=Internal|isEncrypted=false|description=map from cbrnd */
  @Deprecated public java.lang.String cobrand;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_d */
  @Deprecated public java.lang.String deviceFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_dc */
  @Deprecated public java.lang.String deviceType;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_bv */
  @Deprecated public java.lang.String browserVersion;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_bf */
  @Deprecated public java.lang.String browserFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_os */
  @Deprecated public java.lang.String osFamily;
  /** dataClassification=Internal|isEncrypted=false|description=map from dd_osv */
  @Deprecated public java.lang.String enrichedOsVersion;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> applicationPayload;
  /** CAL request log id */
  @Deprecated public java.lang.String rlogid;
  /** Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload */
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> clientData;
  @Deprecated public java.lang.Long ingestTime;
  @Deprecated public java.lang.Long sessionSkey;
  @Deprecated public java.lang.Long sessionStartDt;
  @Deprecated public java.lang.Long sojDataDt;
  @Deprecated public java.lang.Integer version;
  @Deprecated public java.lang.Integer staticPageType;
  @Deprecated public java.lang.Integer reservedForFuture;
  @Deprecated public java.lang.String eventAttr;
  @Deprecated public java.lang.Long currentImprId;
  @Deprecated public java.lang.Long sourceImprId;
  @Deprecated public java.lang.Long oldSessionSkey;
  @Deprecated public java.lang.Boolean partialValidPage;
  @Deprecated public java.util.List<java.lang.Integer> botFlags;
  @Deprecated public java.lang.Long icfBinary;
  @Deprecated public java.lang.Long eventCnt;
  @Deprecated public java.lang.String referrer;
  @Deprecated public java.lang.String forwardedFor;
  @Deprecated public java.lang.Boolean rv;
  @Deprecated public java.util.Map<java.lang.String,java.nio.ByteBuffer> sojHeader;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SojEvent() {}

  /**
   * All-args constructor.
   * @param rheosHeader Rheos header
   * @param guid The new value for guid
   * @param eventTimestamp dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
   * @param eventCaptureTime dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
   * @param requestCorrelationId dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
   * @param cguid dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
   * @param sid dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
   * @param pageId dataClassification=Internal|isEncrypted=false|description=map from tag p
   * @param pageName The new value for pageName
   * @param pageFamily dataClassification=Internal|isEncrypted=false|description=map from tag pgf
   * @param eventFamily dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
   * @param eventAction dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
   * @param userId dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
   * @param clickId dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
   * @param siteId dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
   * @param sessionId dataClassification=Internal|isEncrypted=false|description=map from tag snid
   * @param seqNum dataClassification=Internal|isEncrypted=false|description=map from tag snsq
   * @param ciid The new value for ciid
   * @param siid The new value for siid
   * @param rdt dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
   * @param regu dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
   * @param iframe dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
   * @param refererHash dataClassification=Internal|isEncrypted=false|description=map from tag r
   * @param sqr dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
   * @param itemId dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
   * @param flags dataClassification=Internal|isEncrypted=false|description=map from tag flgs
   * @param urlQueryString dataClassification=Internal|isEncrypted=false|description=map from tag Referer
   * @param webServer dataClassification=Internal|isEncrypted=false|description=web server, map from Server
   * @param cookies dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
   * @param bot dataClassification=Internal|isEncrypted=false|description=map from tag bott
   * @param clientIP The new value for clientIP
   * @param remoteIP dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
   * @param agentInfo dataClassification=Internal|isEncrypted=false|description=map from tag Agent
   * @param appId dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
   * @param appVersion dataClassification=Internal|isEncrypted=false|description=application version, map from mav
   * @param osVersion dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
   * @param trafficSource dataClassification=Internal|isEncrypted=false|description=map from trffc_src
   * @param cobrand dataClassification=Internal|isEncrypted=false|description=map from cbrnd
   * @param deviceFamily dataClassification=Internal|isEncrypted=false|description=map from dd_d
   * @param deviceType dataClassification=Internal|isEncrypted=false|description=map from dd_dc
   * @param browserVersion dataClassification=Internal|isEncrypted=false|description=map from dd_bv
   * @param browserFamily dataClassification=Internal|isEncrypted=false|description=map from dd_bf
   * @param osFamily dataClassification=Internal|isEncrypted=false|description=map from dd_os
   * @param enrichedOsVersion dataClassification=Internal|isEncrypted=false|description=map from dd_osv
   * @param applicationPayload The new value for applicationPayload
   * @param rlogid CAL request log id
   * @param clientData Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
   * @param ingestTime The new value for ingestTime
   * @param sessionSkey The new value for sessionSkey
   * @param sessionStartDt The new value for sessionStartDt
   * @param sojDataDt The new value for sojDataDt
   * @param version The new value for version
   * @param staticPageType The new value for staticPageType
   * @param reservedForFuture The new value for reservedForFuture
   * @param eventAttr The new value for eventAttr
   * @param currentImprId The new value for currentImprId
   * @param sourceImprId The new value for sourceImprId
   * @param oldSessionSkey The new value for oldSessionSkey
   * @param partialValidPage The new value for partialValidPage
   * @param botFlags The new value for botFlags
   * @param icfBinary The new value for icfBinary
   * @param eventCnt The new value for eventCnt
   * @param referrer The new value for referrer
   * @param forwardedFor The new value for forwardedFor
   * @param rv The new value for rv
   * @param sojHeader The new value for sojHeader
   */
  public SojEvent(RheosHeader rheosHeader, java.lang.String guid, java.lang.Long eventTimestamp, java.lang.Long eventCaptureTime, java.lang.String requestCorrelationId, java.lang.String cguid, java.lang.String sid, java.lang.Integer pageId, java.lang.String pageName, java.lang.String pageFamily, java.lang.String eventFamily, java.lang.String eventAction, java.lang.String userId, java.lang.String clickId, java.lang.String siteId, java.lang.String sessionId, java.lang.String seqNum, java.lang.String ciid, java.lang.String siid, java.lang.Integer rdt, java.lang.Integer regu, java.lang.Boolean iframe, java.lang.String refererHash, java.lang.String sqr, java.lang.String itemId, java.lang.String flags, java.lang.String urlQueryString, java.lang.String webServer, java.lang.String cookies, java.lang.Integer bot, java.lang.String clientIP, java.lang.String remoteIP, java.lang.String agentInfo, java.lang.String appId, java.lang.String appVersion, java.lang.String osVersion, java.lang.String trafficSource, java.lang.String cobrand, java.lang.String deviceFamily, java.lang.String deviceType, java.lang.String browserVersion, java.lang.String browserFamily, java.lang.String osFamily, java.lang.String enrichedOsVersion, java.util.Map<java.lang.String,java.lang.String> applicationPayload, java.lang.String rlogid, java.util.Map<java.lang.String,java.lang.String> clientData, java.lang.Long ingestTime, java.lang.Long sessionSkey, java.lang.Long sessionStartDt, java.lang.Long sojDataDt, java.lang.Integer version, java.lang.Integer staticPageType, java.lang.Integer reservedForFuture, java.lang.String eventAttr, java.lang.Long currentImprId, java.lang.Long sourceImprId, java.lang.Long oldSessionSkey, java.lang.Boolean partialValidPage, java.util.List<java.lang.Integer> botFlags, java.lang.Long icfBinary, java.lang.Long eventCnt, java.lang.String referrer, java.lang.String forwardedFor, java.lang.Boolean rv, java.util.Map<java.lang.String,java.nio.ByteBuffer> sojHeader) {
    this.rheosHeader = rheosHeader;
    this.guid = guid;
    this.eventTimestamp = eventTimestamp;
    this.eventCaptureTime = eventCaptureTime;
    this.requestCorrelationId = requestCorrelationId;
    this.cguid = cguid;
    this.sid = sid;
    this.pageId = pageId;
    this.pageName = pageName;
    this.pageFamily = pageFamily;
    this.eventFamily = eventFamily;
    this.eventAction = eventAction;
    this.userId = userId;
    this.clickId = clickId;
    this.siteId = siteId;
    this.sessionId = sessionId;
    this.seqNum = seqNum;
    this.ciid = ciid;
    this.siid = siid;
    this.rdt = rdt;
    this.regu = regu;
    this.iframe = iframe;
    this.refererHash = refererHash;
    this.sqr = sqr;
    this.itemId = itemId;
    this.flags = flags;
    this.urlQueryString = urlQueryString;
    this.webServer = webServer;
    this.cookies = cookies;
    this.bot = bot;
    this.clientIP = clientIP;
    this.remoteIP = remoteIP;
    this.agentInfo = agentInfo;
    this.appId = appId;
    this.appVersion = appVersion;
    this.osVersion = osVersion;
    this.trafficSource = trafficSource;
    this.cobrand = cobrand;
    this.deviceFamily = deviceFamily;
    this.deviceType = deviceType;
    this.browserVersion = browserVersion;
    this.browserFamily = browserFamily;
    this.osFamily = osFamily;
    this.enrichedOsVersion = enrichedOsVersion;
    this.applicationPayload = applicationPayload;
    this.rlogid = rlogid;
    this.clientData = clientData;
    this.ingestTime = ingestTime;
    this.sessionSkey = sessionSkey;
    this.sessionStartDt = sessionStartDt;
    this.sojDataDt = sojDataDt;
    this.version = version;
    this.staticPageType = staticPageType;
    this.reservedForFuture = reservedForFuture;
    this.eventAttr = eventAttr;
    this.currentImprId = currentImprId;
    this.sourceImprId = sourceImprId;
    this.oldSessionSkey = oldSessionSkey;
    this.partialValidPage = partialValidPage;
    this.botFlags = botFlags;
    this.icfBinary = icfBinary;
    this.eventCnt = eventCnt;
    this.referrer = referrer;
    this.forwardedFor = forwardedFor;
    this.rv = rv;
    this.sojHeader = sojHeader;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rheosHeader;
    case 1: return guid;
    case 2: return eventTimestamp;
    case 3: return eventCaptureTime;
    case 4: return requestCorrelationId;
    case 5: return cguid;
    case 6: return sid;
    case 7: return pageId;
    case 8: return pageName;
    case 9: return pageFamily;
    case 10: return eventFamily;
    case 11: return eventAction;
    case 12: return userId;
    case 13: return clickId;
    case 14: return siteId;
    case 15: return sessionId;
    case 16: return seqNum;
    case 17: return ciid;
    case 18: return siid;
    case 19: return rdt;
    case 20: return regu;
    case 21: return iframe;
    case 22: return refererHash;
    case 23: return sqr;
    case 24: return itemId;
    case 25: return flags;
    case 26: return urlQueryString;
    case 27: return webServer;
    case 28: return cookies;
    case 29: return bot;
    case 30: return clientIP;
    case 31: return remoteIP;
    case 32: return agentInfo;
    case 33: return appId;
    case 34: return appVersion;
    case 35: return osVersion;
    case 36: return trafficSource;
    case 37: return cobrand;
    case 38: return deviceFamily;
    case 39: return deviceType;
    case 40: return browserVersion;
    case 41: return browserFamily;
    case 42: return osFamily;
    case 43: return enrichedOsVersion;
    case 44: return applicationPayload;
    case 45: return rlogid;
    case 46: return clientData;
    case 47: return ingestTime;
    case 48: return sessionSkey;
    case 49: return sessionStartDt;
    case 50: return sojDataDt;
    case 51: return version;
    case 52: return staticPageType;
    case 53: return reservedForFuture;
    case 54: return eventAttr;
    case 55: return currentImprId;
    case 56: return sourceImprId;
    case 57: return oldSessionSkey;
    case 58: return partialValidPage;
    case 59: return botFlags;
    case 60: return icfBinary;
    case 61: return eventCnt;
    case 62: return referrer;
    case 63: return forwardedFor;
    case 64: return rv;
    case 65: return sojHeader;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rheosHeader = (RheosHeader)value$; break;
    case 1: guid = (java.lang.String)value$; break;
    case 2: eventTimestamp = (java.lang.Long)value$; break;
    case 3: eventCaptureTime = (java.lang.Long)value$; break;
    case 4: requestCorrelationId = (java.lang.String)value$; break;
    case 5: cguid = (java.lang.String)value$; break;
    case 6: sid = (java.lang.String)value$; break;
    case 7: pageId = (java.lang.Integer)value$; break;
    case 8: pageName = (java.lang.String)value$; break;
    case 9: pageFamily = (java.lang.String)value$; break;
    case 10: eventFamily = (java.lang.String)value$; break;
    case 11: eventAction = (java.lang.String)value$; break;
    case 12: userId = (java.lang.String)value$; break;
    case 13: clickId = (java.lang.String)value$; break;
    case 14: siteId = (java.lang.String)value$; break;
    case 15: sessionId = (java.lang.String)value$; break;
    case 16: seqNum = (java.lang.String)value$; break;
    case 17: ciid = (java.lang.String)value$; break;
    case 18: siid = (java.lang.String)value$; break;
    case 19: rdt = (java.lang.Integer)value$; break;
    case 20: regu = (java.lang.Integer)value$; break;
    case 21: iframe = (java.lang.Boolean)value$; break;
    case 22: refererHash = (java.lang.String)value$; break;
    case 23: sqr = (java.lang.String)value$; break;
    case 24: itemId = (java.lang.String)value$; break;
    case 25: flags = (java.lang.String)value$; break;
    case 26: urlQueryString = (java.lang.String)value$; break;
    case 27: webServer = (java.lang.String)value$; break;
    case 28: cookies = (java.lang.String)value$; break;
    case 29: bot = (java.lang.Integer)value$; break;
    case 30: clientIP = (java.lang.String)value$; break;
    case 31: remoteIP = (java.lang.String)value$; break;
    case 32: agentInfo = (java.lang.String)value$; break;
    case 33: appId = (java.lang.String)value$; break;
    case 34: appVersion = (java.lang.String)value$; break;
    case 35: osVersion = (java.lang.String)value$; break;
    case 36: trafficSource = (java.lang.String)value$; break;
    case 37: cobrand = (java.lang.String)value$; break;
    case 38: deviceFamily = (java.lang.String)value$; break;
    case 39: deviceType = (java.lang.String)value$; break;
    case 40: browserVersion = (java.lang.String)value$; break;
    case 41: browserFamily = (java.lang.String)value$; break;
    case 42: osFamily = (java.lang.String)value$; break;
    case 43: enrichedOsVersion = (java.lang.String)value$; break;
    case 44: applicationPayload = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 45: rlogid = (java.lang.String)value$; break;
    case 46: clientData = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 47: ingestTime = (java.lang.Long)value$; break;
    case 48: sessionSkey = (java.lang.Long)value$; break;
    case 49: sessionStartDt = (java.lang.Long)value$; break;
    case 50: sojDataDt = (java.lang.Long)value$; break;
    case 51: version = (java.lang.Integer)value$; break;
    case 52: staticPageType = (java.lang.Integer)value$; break;
    case 53: reservedForFuture = (java.lang.Integer)value$; break;
    case 54: eventAttr = (java.lang.String)value$; break;
    case 55: currentImprId = (java.lang.Long)value$; break;
    case 56: sourceImprId = (java.lang.Long)value$; break;
    case 57: oldSessionSkey = (java.lang.Long)value$; break;
    case 58: partialValidPage = (java.lang.Boolean)value$; break;
    case 59: botFlags = (java.util.List<java.lang.Integer>)value$; break;
    case 60: icfBinary = (java.lang.Long)value$; break;
    case 61: eventCnt = (java.lang.Long)value$; break;
    case 62: referrer = (java.lang.String)value$; break;
    case 63: forwardedFor = (java.lang.String)value$; break;
    case 64: rv = (java.lang.Boolean)value$; break;
    case 65: sojHeader = (java.util.Map<java.lang.String,java.nio.ByteBuffer>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field.
   * @return Rheos header
   */
  public RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field.
   * Rheos header
   * @param value the value to set.
   */
  public void setRheosHeader(RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'guid' field.
   * @return The value of the 'guid' field.
   */
  public java.lang.String getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field.
   * @param value the value to set.
   */
  public void setGuid(java.lang.String value) {
    this.guid = value;
  }

  /**
   * Gets the value of the 'eventTimestamp' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
   */
  public java.lang.Long getEventTimestamp() {
    return eventTimestamp;
  }

  /**
   * Sets the value of the 'eventTimestamp' field.
   * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
   * @param value the value to set.
   */
  public void setEventTimestamp(java.lang.Long value) {
    this.eventTimestamp = value;
  }

  /**
   * Gets the value of the 'eventCaptureTime' field.
   * @return dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
   */
  public java.lang.Long getEventCaptureTime() {
    return eventCaptureTime;
  }

  /**
   * Sets the value of the 'eventCaptureTime' field.
   * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
   * @param value the value to set.
   */
  public void setEventCaptureTime(java.lang.Long value) {
    this.eventCaptureTime = value;
  }

  /**
   * Gets the value of the 'requestCorrelationId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
   */
  public java.lang.String getRequestCorrelationId() {
    return requestCorrelationId;
  }

  /**
   * Sets the value of the 'requestCorrelationId' field.
   * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
   * @param value the value to set.
   */
  public void setRequestCorrelationId(java.lang.String value) {
    this.requestCorrelationId = value;
  }

  /**
   * Gets the value of the 'cguid' field.
   * @return dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
   */
  public java.lang.String getCguid() {
    return cguid;
  }

  /**
   * Sets the value of the 'cguid' field.
   * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
   * @param value the value to set.
   */
  public void setCguid(java.lang.String value) {
    this.cguid = value;
  }

  /**
   * Gets the value of the 'sid' field.
   * @return dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
   */
  public java.lang.String getSid() {
    return sid;
  }

  /**
   * Sets the value of the 'sid' field.
   * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
   * @param value the value to set.
   */
  public void setSid(java.lang.String value) {
    this.sid = value;
  }

  /**
   * Gets the value of the 'pageId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag p
   */
  public java.lang.Integer getPageId() {
    return pageId;
  }

  /**
   * Sets the value of the 'pageId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag p
   * @param value the value to set.
   */
  public void setPageId(java.lang.Integer value) {
    this.pageId = value;
  }

  /**
   * Gets the value of the 'pageName' field.
   * @return The value of the 'pageName' field.
   */
  public java.lang.String getPageName() {
    return pageName;
  }

  /**
   * Sets the value of the 'pageName' field.
   * @param value the value to set.
   */
  public void setPageName(java.lang.String value) {
    this.pageName = value;
  }

  /**
   * Gets the value of the 'pageFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag pgf
   */
  public java.lang.String getPageFamily() {
    return pageFamily;
  }

  /**
   * Sets the value of the 'pageFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
   * @param value the value to set.
   */
  public void setPageFamily(java.lang.String value) {
    this.pageFamily = value;
  }

  /**
   * Gets the value of the 'eventFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
   */
  public java.lang.String getEventFamily() {
    return eventFamily;
  }

  /**
   * Sets the value of the 'eventFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
   * @param value the value to set.
   */
  public void setEventFamily(java.lang.String value) {
    this.eventFamily = value;
  }

  /**
   * Gets the value of the 'eventAction' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
   */
  public java.lang.String getEventAction() {
    return eventAction;
  }

  /**
   * Sets the value of the 'eventAction' field.
   * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
   * @param value the value to set.
   */
  public void setEventAction(java.lang.String value) {
    this.eventAction = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
   */
  public java.lang.String getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'clickId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
   */
  public java.lang.String getClickId() {
    return clickId;
  }

  /**
   * Sets the value of the 'clickId' field.
   * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
   * @param value the value to set.
   */
  public void setClickId(java.lang.String value) {
    this.clickId = value;
  }

  /**
   * Gets the value of the 'siteId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
   */
  public java.lang.String getSiteId() {
    return siteId;
  }

  /**
   * Sets the value of the 'siteId' field.
   * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
   * @param value the value to set.
   */
  public void setSiteId(java.lang.String value) {
    this.siteId = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag snid
   */
  public java.lang.String getSessionId() {
    return sessionId;
  }

  /**
   * Sets the value of the 'sessionId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag snid
   * @param value the value to set.
   */
  public void setSessionId(java.lang.String value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'seqNum' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag snsq
   */
  public java.lang.String getSeqNum() {
    return seqNum;
  }

  /**
   * Sets the value of the 'seqNum' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
   * @param value the value to set.
   */
  public void setSeqNum(java.lang.String value) {
    this.seqNum = value;
  }

  /**
   * Gets the value of the 'ciid' field.
   * @return The value of the 'ciid' field.
   */
  public java.lang.String getCiid() {
    return ciid;
  }

  /**
   * Sets the value of the 'ciid' field.
   * @param value the value to set.
   */
  public void setCiid(java.lang.String value) {
    this.ciid = value;
  }

  /**
   * Gets the value of the 'siid' field.
   * @return The value of the 'siid' field.
   */
  public java.lang.String getSiid() {
    return siid;
  }

  /**
   * Sets the value of the 'siid' field.
   * @param value the value to set.
   */
  public void setSiid(java.lang.String value) {
    this.siid = value;
  }

  /**
   * Gets the value of the 'rdt' field.
   * @return dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
   */
  public java.lang.Integer getRdt() {
    return rdt;
  }

  /**
   * Sets the value of the 'rdt' field.
   * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
   * @param value the value to set.
   */
  public void setRdt(java.lang.Integer value) {
    this.rdt = value;
  }

  /**
   * Gets the value of the 'regu' field.
   * @return dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
   */
  public java.lang.Integer getRegu() {
    return regu;
  }

  /**
   * Sets the value of the 'regu' field.
   * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
   * @param value the value to set.
   */
  public void setRegu(java.lang.Integer value) {
    this.regu = value;
  }

  /**
   * Gets the value of the 'iframe' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
   */
  public java.lang.Boolean getIframe() {
    return iframe;
  }

  /**
   * Sets the value of the 'iframe' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
   * @param value the value to set.
   */
  public void setIframe(java.lang.Boolean value) {
    this.iframe = value;
  }

  /**
   * Gets the value of the 'refererHash' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag r
   */
  public java.lang.String getRefererHash() {
    return refererHash;
  }

  /**
   * Sets the value of the 'refererHash' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag r
   * @param value the value to set.
   */
  public void setRefererHash(java.lang.String value) {
    this.refererHash = value;
  }

  /**
   * Gets the value of the 'sqr' field.
   * @return dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
   */
  public java.lang.String getSqr() {
    return sqr;
  }

  /**
   * Sets the value of the 'sqr' field.
   * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
   * @param value the value to set.
   */
  public void setSqr(java.lang.String value) {
    this.sqr = value;
  }

  /**
   * Gets the value of the 'itemId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
   */
  public java.lang.String getItemId() {
    return itemId;
  }

  /**
   * Sets the value of the 'itemId' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
   * @param value the value to set.
   */
  public void setItemId(java.lang.String value) {
    this.itemId = value;
  }

  /**
   * Gets the value of the 'flags' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag flgs
   */
  public java.lang.String getFlags() {
    return flags;
  }

  /**
   * Sets the value of the 'flags' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
   * @param value the value to set.
   */
  public void setFlags(java.lang.String value) {
    this.flags = value;
  }

  /**
   * Gets the value of the 'urlQueryString' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag Referer
   */
  public java.lang.String getUrlQueryString() {
    return urlQueryString;
  }

  /**
   * Sets the value of the 'urlQueryString' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
   * @param value the value to set.
   */
  public void setUrlQueryString(java.lang.String value) {
    this.urlQueryString = value;
  }

  /**
   * Gets the value of the 'webServer' field.
   * @return dataClassification=Internal|isEncrypted=false|description=web server, map from Server
   */
  public java.lang.String getWebServer() {
    return webServer;
  }

  /**
   * Sets the value of the 'webServer' field.
   * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
   * @param value the value to set.
   */
  public void setWebServer(java.lang.String value) {
    this.webServer = value;
  }

  /**
   * Gets the value of the 'cookies' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
   */
  public java.lang.String getCookies() {
    return cookies;
  }

  /**
   * Sets the value of the 'cookies' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
   * @param value the value to set.
   */
  public void setCookies(java.lang.String value) {
    this.cookies = value;
  }

  /**
   * Gets the value of the 'bot' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag bott
   */
  public java.lang.Integer getBot() {
    return bot;
  }

  /**
   * Sets the value of the 'bot' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag bott
   * @param value the value to set.
   */
  public void setBot(java.lang.Integer value) {
    this.bot = value;
  }

  /**
   * Gets the value of the 'clientIP' field.
   * @return The value of the 'clientIP' field.
   */
  public java.lang.String getClientIP() {
    return clientIP;
  }

  /**
   * Sets the value of the 'clientIP' field.
   * @param value the value to set.
   */
  public void setClientIP(java.lang.String value) {
    this.clientIP = value;
  }

  /**
   * Gets the value of the 'remoteIP' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
   */
  public java.lang.String getRemoteIP() {
    return remoteIP;
  }

  /**
   * Sets the value of the 'remoteIP' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
   * @param value the value to set.
   */
  public void setRemoteIP(java.lang.String value) {
    this.remoteIP = value;
  }

  /**
   * Gets the value of the 'agentInfo' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from tag Agent
   */
  public java.lang.String getAgentInfo() {
    return agentInfo;
  }

  /**
   * Sets the value of the 'agentInfo' field.
   * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
   * @param value the value to set.
   */
  public void setAgentInfo(java.lang.String value) {
    this.agentInfo = value;
  }

  /**
   * Gets the value of the 'appId' field.
   * @return dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
   */
  public java.lang.String getAppId() {
    return appId;
  }

  /**
   * Sets the value of the 'appId' field.
   * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
   * @param value the value to set.
   */
  public void setAppId(java.lang.String value) {
    this.appId = value;
  }

  /**
   * Gets the value of the 'appVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=application version, map from mav
   */
  public java.lang.String getAppVersion() {
    return appVersion;
  }

  /**
   * Sets the value of the 'appVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
   * @param value the value to set.
   */
  public void setAppVersion(java.lang.String value) {
    this.appVersion = value;
  }

  /**
   * Gets the value of the 'osVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
   */
  public java.lang.String getOsVersion() {
    return osVersion;
  }

  /**
   * Sets the value of the 'osVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
   * @param value the value to set.
   */
  public void setOsVersion(java.lang.String value) {
    this.osVersion = value;
  }

  /**
   * Gets the value of the 'trafficSource' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from trffc_src
   */
  public java.lang.String getTrafficSource() {
    return trafficSource;
  }

  /**
   * Sets the value of the 'trafficSource' field.
   * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
   * @param value the value to set.
   */
  public void setTrafficSource(java.lang.String value) {
    this.trafficSource = value;
  }

  /**
   * Gets the value of the 'cobrand' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from cbrnd
   */
  public java.lang.String getCobrand() {
    return cobrand;
  }

  /**
   * Sets the value of the 'cobrand' field.
   * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
   * @param value the value to set.
   */
  public void setCobrand(java.lang.String value) {
    this.cobrand = value;
  }

  /**
   * Gets the value of the 'deviceFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_d
   */
  public java.lang.String getDeviceFamily() {
    return deviceFamily;
  }

  /**
   * Sets the value of the 'deviceFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_d
   * @param value the value to set.
   */
  public void setDeviceFamily(java.lang.String value) {
    this.deviceFamily = value;
  }

  /**
   * Gets the value of the 'deviceType' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_dc
   */
  public java.lang.String getDeviceType() {
    return deviceType;
  }

  /**
   * Sets the value of the 'deviceType' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
   * @param value the value to set.
   */
  public void setDeviceType(java.lang.String value) {
    this.deviceType = value;
  }

  /**
   * Gets the value of the 'browserVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_bv
   */
  public java.lang.String getBrowserVersion() {
    return browserVersion;
  }

  /**
   * Sets the value of the 'browserVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
   * @param value the value to set.
   */
  public void setBrowserVersion(java.lang.String value) {
    this.browserVersion = value;
  }

  /**
   * Gets the value of the 'browserFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_bf
   */
  public java.lang.String getBrowserFamily() {
    return browserFamily;
  }

  /**
   * Sets the value of the 'browserFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
   * @param value the value to set.
   */
  public void setBrowserFamily(java.lang.String value) {
    this.browserFamily = value;
  }

  /**
   * Gets the value of the 'osFamily' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_os
   */
  public java.lang.String getOsFamily() {
    return osFamily;
  }

  /**
   * Sets the value of the 'osFamily' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_os
   * @param value the value to set.
   */
  public void setOsFamily(java.lang.String value) {
    this.osFamily = value;
  }

  /**
   * Gets the value of the 'enrichedOsVersion' field.
   * @return dataClassification=Internal|isEncrypted=false|description=map from dd_osv
   */
  public java.lang.String getEnrichedOsVersion() {
    return enrichedOsVersion;
  }

  /**
   * Sets the value of the 'enrichedOsVersion' field.
   * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
   * @param value the value to set.
   */
  public void setEnrichedOsVersion(java.lang.String value) {
    this.enrichedOsVersion = value;
  }

  /**
   * Gets the value of the 'applicationPayload' field.
   * @return The value of the 'applicationPayload' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getApplicationPayload() {
    return applicationPayload;
  }

  /**
   * Sets the value of the 'applicationPayload' field.
   * @param value the value to set.
   */
  public void setApplicationPayload(java.util.Map<java.lang.String,java.lang.String> value) {
    this.applicationPayload = value;
  }

  /**
   * Gets the value of the 'rlogid' field.
   * @return CAL request log id
   */
  public java.lang.String getRlogid() {
    return rlogid;
  }

  /**
   * Sets the value of the 'rlogid' field.
   * CAL request log id
   * @param value the value to set.
   */
  public void setRlogid(java.lang.String value) {
    this.rlogid = value;
  }

  /**
   * Gets the value of the 'clientData' field.
   * @return Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
   */
  public java.util.Map<java.lang.String,java.lang.String> getClientData() {
    return clientData;
  }

  /**
   * Sets the value of the 'clientData' field.
   * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
   * @param value the value to set.
   */
  public void setClientData(java.util.Map<java.lang.String,java.lang.String> value) {
    this.clientData = value;
  }

  /**
   * Gets the value of the 'ingestTime' field.
   * @return The value of the 'ingestTime' field.
   */
  public java.lang.Long getIngestTime() {
    return ingestTime;
  }

  /**
   * Sets the value of the 'ingestTime' field.
   * @param value the value to set.
   */
  public void setIngestTime(java.lang.Long value) {
    this.ingestTime = value;
  }

  /**
   * Gets the value of the 'sessionSkey' field.
   * @return The value of the 'sessionSkey' field.
   */
  public java.lang.Long getSessionSkey() {
    return sessionSkey;
  }

  /**
   * Sets the value of the 'sessionSkey' field.
   * @param value the value to set.
   */
  public void setSessionSkey(java.lang.Long value) {
    this.sessionSkey = value;
  }

  /**
   * Gets the value of the 'sessionStartDt' field.
   * @return The value of the 'sessionStartDt' field.
   */
  public java.lang.Long getSessionStartDt() {
    return sessionStartDt;
  }

  /**
   * Sets the value of the 'sessionStartDt' field.
   * @param value the value to set.
   */
  public void setSessionStartDt(java.lang.Long value) {
    this.sessionStartDt = value;
  }

  /**
   * Gets the value of the 'sojDataDt' field.
   * @return The value of the 'sojDataDt' field.
   */
  public java.lang.Long getSojDataDt() {
    return sojDataDt;
  }

  /**
   * Sets the value of the 'sojDataDt' field.
   * @param value the value to set.
   */
  public void setSojDataDt(java.lang.Long value) {
    this.sojDataDt = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'staticPageType' field.
   * @return The value of the 'staticPageType' field.
   */
  public java.lang.Integer getStaticPageType() {
    return staticPageType;
  }

  /**
   * Sets the value of the 'staticPageType' field.
   * @param value the value to set.
   */
  public void setStaticPageType(java.lang.Integer value) {
    this.staticPageType = value;
  }

  /**
   * Gets the value of the 'reservedForFuture' field.
   * @return The value of the 'reservedForFuture' field.
   */
  public java.lang.Integer getReservedForFuture() {
    return reservedForFuture;
  }

  /**
   * Sets the value of the 'reservedForFuture' field.
   * @param value the value to set.
   */
  public void setReservedForFuture(java.lang.Integer value) {
    this.reservedForFuture = value;
  }

  /**
   * Gets the value of the 'eventAttr' field.
   * @return The value of the 'eventAttr' field.
   */
  public java.lang.String getEventAttr() {
    return eventAttr;
  }

  /**
   * Sets the value of the 'eventAttr' field.
   * @param value the value to set.
   */
  public void setEventAttr(java.lang.String value) {
    this.eventAttr = value;
  }

  /**
   * Gets the value of the 'currentImprId' field.
   * @return The value of the 'currentImprId' field.
   */
  public java.lang.Long getCurrentImprId() {
    return currentImprId;
  }

  /**
   * Sets the value of the 'currentImprId' field.
   * @param value the value to set.
   */
  public void setCurrentImprId(java.lang.Long value) {
    this.currentImprId = value;
  }

  /**
   * Gets the value of the 'sourceImprId' field.
   * @return The value of the 'sourceImprId' field.
   */
  public java.lang.Long getSourceImprId() {
    return sourceImprId;
  }

  /**
   * Sets the value of the 'sourceImprId' field.
   * @param value the value to set.
   */
  public void setSourceImprId(java.lang.Long value) {
    this.sourceImprId = value;
  }

  /**
   * Gets the value of the 'oldSessionSkey' field.
   * @return The value of the 'oldSessionSkey' field.
   */
  public java.lang.Long getOldSessionSkey() {
    return oldSessionSkey;
  }

  /**
   * Sets the value of the 'oldSessionSkey' field.
   * @param value the value to set.
   */
  public void setOldSessionSkey(java.lang.Long value) {
    this.oldSessionSkey = value;
  }

  /**
   * Gets the value of the 'partialValidPage' field.
   * @return The value of the 'partialValidPage' field.
   */
  public java.lang.Boolean getPartialValidPage() {
    return partialValidPage;
  }

  /**
   * Sets the value of the 'partialValidPage' field.
   * @param value the value to set.
   */
  public void setPartialValidPage(java.lang.Boolean value) {
    this.partialValidPage = value;
  }

  /**
   * Gets the value of the 'botFlags' field.
   * @return The value of the 'botFlags' field.
   */
  public java.util.List<java.lang.Integer> getBotFlags() {
    return botFlags;
  }

  /**
   * Sets the value of the 'botFlags' field.
   * @param value the value to set.
   */
  public void setBotFlags(java.util.List<java.lang.Integer> value) {
    this.botFlags = value;
  }

  /**
   * Gets the value of the 'icfBinary' field.
   * @return The value of the 'icfBinary' field.
   */
  public java.lang.Long getIcfBinary() {
    return icfBinary;
  }

  /**
   * Sets the value of the 'icfBinary' field.
   * @param value the value to set.
   */
  public void setIcfBinary(java.lang.Long value) {
    this.icfBinary = value;
  }

  /**
   * Gets the value of the 'eventCnt' field.
   * @return The value of the 'eventCnt' field.
   */
  public java.lang.Long getEventCnt() {
    return eventCnt;
  }

  /**
   * Sets the value of the 'eventCnt' field.
   * @param value the value to set.
   */
  public void setEventCnt(java.lang.Long value) {
    this.eventCnt = value;
  }

  /**
   * Gets the value of the 'referrer' field.
   * @return The value of the 'referrer' field.
   */
  public java.lang.String getReferrer() {
    return referrer;
  }

  /**
   * Sets the value of the 'referrer' field.
   * @param value the value to set.
   */
  public void setReferrer(java.lang.String value) {
    this.referrer = value;
  }

  /**
   * Gets the value of the 'forwardedFor' field.
   * @return The value of the 'forwardedFor' field.
   */
  public java.lang.String getForwardedFor() {
    return forwardedFor;
  }

  /**
   * Sets the value of the 'forwardedFor' field.
   * @param value the value to set.
   */
  public void setForwardedFor(java.lang.String value) {
    this.forwardedFor = value;
  }

  /**
   * Gets the value of the 'rv' field.
   * @return The value of the 'rv' field.
   */
  public java.lang.Boolean getRv() {
    return rv;
  }

  /**
   * Sets the value of the 'rv' field.
   * @param value the value to set.
   */
  public void setRv(java.lang.Boolean value) {
    this.rv = value;
  }

  /**
   * Gets the value of the 'sojHeader' field.
   * @return The value of the 'sojHeader' field.
   */
  public java.util.Map<java.lang.String,java.nio.ByteBuffer> getSojHeader() {
    return sojHeader;
  }

  /**
   * Sets the value of the 'sojHeader' field.
   * @param value the value to set.
   */
  public void setSojHeader(java.util.Map<java.lang.String,java.nio.ByteBuffer> value) {
    this.sojHeader = value;
  }

  /**
   * Creates a new SojEvent RecordBuilder.
   * @return A new SojEvent RecordBuilder
   */
  public static SojEvent.Builder newBuilder() {
    return new SojEvent.Builder();
  }

  /**
   * Creates a new SojEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SojEvent RecordBuilder
   */
  public static SojEvent.Builder newBuilder(SojEvent.Builder other) {
    return new SojEvent.Builder(other);
  }

  /**
   * Creates a new SojEvent RecordBuilder by copying an existing SojEvent instance.
   * @param other The existing instance to copy.
   * @return A new SojEvent RecordBuilder
   */
  public static SojEvent.Builder newBuilder(SojEvent other) {
    return new SojEvent.Builder(other);
  }

  /**
   * RecordBuilder for SojEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SojEvent>
    implements org.apache.avro.data.RecordBuilder<SojEvent> {

    /** Rheos header */
    private RheosHeader rheosHeader;
    private RheosHeader.Builder rheosHeaderBuilder;
    private java.lang.String guid;
    /** dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time */
    private long eventTimestamp;
    /** dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case */
    private java.lang.Long eventCaptureTime;
    /** dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq */
    private java.lang.String requestCorrelationId;
    /** dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n */
    private java.lang.String cguid;
    /** dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id */
    private java.lang.String sid;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag p */
    private java.lang.Integer pageId;
    private java.lang.String pageName;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag pgf */
    private java.lang.String pageFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family */
    private java.lang.String eventFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action */
    private java.lang.String eventAction;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag u/bu */
    private java.lang.String userId;
    /** dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c */
    private java.lang.String clickId;
    /** dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t */
    private java.lang.String siteId;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag snid */
    private java.lang.String sessionId;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag snsq */
    private java.lang.String seqNum;
    private java.lang.String ciid;
    private java.lang.String siid;
    /** dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL */
    private java.lang.Integer rdt;
    /** dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU */
    private java.lang.Integer regu;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm */
    private java.lang.Boolean iframe;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag r */
    private java.lang.String refererHash;
    /** dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr */
    private java.lang.String sqr;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag itm/item */
    private java.lang.String itemId;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag flgs */
    private java.lang.String flags;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag Referer */
    private java.lang.String urlQueryString;
    /** dataClassification=Internal|isEncrypted=false|description=web server, map from Server */
    private java.lang.String webServer;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag ck/C */
    private java.lang.String cookies;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag bott */
    private java.lang.Integer bot;
    private java.lang.String clientIP;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP */
    private java.lang.String remoteIP;
    /** dataClassification=Internal|isEncrypted=false|description=map from tag Agent */
    private java.lang.String agentInfo;
    /** dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app */
    private java.lang.String appId;
    /** dataClassification=Internal|isEncrypted=false|description=application version, map from mav */
    private java.lang.String appVersion;
    /** dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv */
    private java.lang.String osVersion;
    /** dataClassification=Internal|isEncrypted=false|description=map from trffc_src */
    private java.lang.String trafficSource;
    /** dataClassification=Internal|isEncrypted=false|description=map from cbrnd */
    private java.lang.String cobrand;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_d */
    private java.lang.String deviceFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_dc */
    private java.lang.String deviceType;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_bv */
    private java.lang.String browserVersion;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_bf */
    private java.lang.String browserFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_os */
    private java.lang.String osFamily;
    /** dataClassification=Internal|isEncrypted=false|description=map from dd_osv */
    private java.lang.String enrichedOsVersion;
    private java.util.Map<java.lang.String,java.lang.String> applicationPayload;
    /** CAL request log id */
    private java.lang.String rlogid;
    /** Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload */
    private java.util.Map<java.lang.String,java.lang.String> clientData;
    private java.lang.Long ingestTime;
    private java.lang.Long sessionSkey;
    private java.lang.Long sessionStartDt;
    private java.lang.Long sojDataDt;
    private java.lang.Integer version;
    private java.lang.Integer staticPageType;
    private java.lang.Integer reservedForFuture;
    private java.lang.String eventAttr;
    private java.lang.Long currentImprId;
    private java.lang.Long sourceImprId;
    private java.lang.Long oldSessionSkey;
    private java.lang.Boolean partialValidPage;
    private java.util.List<java.lang.Integer> botFlags;
    private java.lang.Long icfBinary;
    private java.lang.Long eventCnt;
    private java.lang.String referrer;
    private java.lang.String forwardedFor;
    private java.lang.Boolean rv;
    private java.util.Map<java.lang.String,java.nio.ByteBuffer> sojHeader;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(SojEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (other.hasRheosHeaderBuilder()) {
        this.rheosHeaderBuilder = RheosHeader.newBuilder(other.getRheosHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[2].schema(), other.eventTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventCaptureTime)) {
        this.eventCaptureTime = data().deepCopy(fields()[3].schema(), other.eventCaptureTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestCorrelationId)) {
        this.requestCorrelationId = data().deepCopy(fields()[4].schema(), other.requestCorrelationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cguid)) {
        this.cguid = data().deepCopy(fields()[5].schema(), other.cguid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sid)) {
        this.sid = data().deepCopy(fields()[6].schema(), other.sid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pageId)) {
        this.pageId = data().deepCopy(fields()[7].schema(), other.pageId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pageName)) {
        this.pageName = data().deepCopy(fields()[8].schema(), other.pageName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pageFamily)) {
        this.pageFamily = data().deepCopy(fields()[9].schema(), other.pageFamily);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventFamily)) {
        this.eventFamily = data().deepCopy(fields()[10].schema(), other.eventFamily);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventAction)) {
        this.eventAction = data().deepCopy(fields()[11].schema(), other.eventAction);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.userId)) {
        this.userId = data().deepCopy(fields()[12].schema(), other.userId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.clickId)) {
        this.clickId = data().deepCopy(fields()[13].schema(), other.clickId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.siteId)) {
        this.siteId = data().deepCopy(fields()[14].schema(), other.siteId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[15].schema(), other.sessionId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.seqNum)) {
        this.seqNum = data().deepCopy(fields()[16].schema(), other.seqNum);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ciid)) {
        this.ciid = data().deepCopy(fields()[17].schema(), other.ciid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.siid)) {
        this.siid = data().deepCopy(fields()[18].schema(), other.siid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.rdt)) {
        this.rdt = data().deepCopy(fields()[19].schema(), other.rdt);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.regu)) {
        this.regu = data().deepCopy(fields()[20].schema(), other.regu);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.iframe)) {
        this.iframe = data().deepCopy(fields()[21].schema(), other.iframe);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.refererHash)) {
        this.refererHash = data().deepCopy(fields()[22].schema(), other.refererHash);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.sqr)) {
        this.sqr = data().deepCopy(fields()[23].schema(), other.sqr);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.itemId)) {
        this.itemId = data().deepCopy(fields()[24].schema(), other.itemId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.flags)) {
        this.flags = data().deepCopy(fields()[25].schema(), other.flags);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.urlQueryString)) {
        this.urlQueryString = data().deepCopy(fields()[26].schema(), other.urlQueryString);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.webServer)) {
        this.webServer = data().deepCopy(fields()[27].schema(), other.webServer);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.cookies)) {
        this.cookies = data().deepCopy(fields()[28].schema(), other.cookies);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.bot)) {
        this.bot = data().deepCopy(fields()[29].schema(), other.bot);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.clientIP)) {
        this.clientIP = data().deepCopy(fields()[30].schema(), other.clientIP);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.remoteIP)) {
        this.remoteIP = data().deepCopy(fields()[31].schema(), other.remoteIP);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.agentInfo)) {
        this.agentInfo = data().deepCopy(fields()[32].schema(), other.agentInfo);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.appId)) {
        this.appId = data().deepCopy(fields()[33].schema(), other.appId);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.appVersion)) {
        this.appVersion = data().deepCopy(fields()[34].schema(), other.appVersion);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.osVersion)) {
        this.osVersion = data().deepCopy(fields()[35].schema(), other.osVersion);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.trafficSource)) {
        this.trafficSource = data().deepCopy(fields()[36].schema(), other.trafficSource);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.cobrand)) {
        this.cobrand = data().deepCopy(fields()[37].schema(), other.cobrand);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.deviceFamily)) {
        this.deviceFamily = data().deepCopy(fields()[38].schema(), other.deviceFamily);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.deviceType)) {
        this.deviceType = data().deepCopy(fields()[39].schema(), other.deviceType);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.browserVersion)) {
        this.browserVersion = data().deepCopy(fields()[40].schema(), other.browserVersion);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.browserFamily)) {
        this.browserFamily = data().deepCopy(fields()[41].schema(), other.browserFamily);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.osFamily)) {
        this.osFamily = data().deepCopy(fields()[42].schema(), other.osFamily);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.enrichedOsVersion)) {
        this.enrichedOsVersion = data().deepCopy(fields()[43].schema(), other.enrichedOsVersion);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.applicationPayload)) {
        this.applicationPayload = data().deepCopy(fields()[44].schema(), other.applicationPayload);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.rlogid)) {
        this.rlogid = data().deepCopy(fields()[45].schema(), other.rlogid);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.clientData)) {
        this.clientData = data().deepCopy(fields()[46].schema(), other.clientData);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.ingestTime)) {
        this.ingestTime = data().deepCopy(fields()[47].schema(), other.ingestTime);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.sessionSkey)) {
        this.sessionSkey = data().deepCopy(fields()[48].schema(), other.sessionSkey);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[49].schema(), other.sessionStartDt);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.sojDataDt)) {
        this.sojDataDt = data().deepCopy(fields()[50].schema(), other.sojDataDt);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.version)) {
        this.version = data().deepCopy(fields()[51].schema(), other.version);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.staticPageType)) {
        this.staticPageType = data().deepCopy(fields()[52].schema(), other.staticPageType);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.reservedForFuture)) {
        this.reservedForFuture = data().deepCopy(fields()[53].schema(), other.reservedForFuture);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.eventAttr)) {
        this.eventAttr = data().deepCopy(fields()[54].schema(), other.eventAttr);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.currentImprId)) {
        this.currentImprId = data().deepCopy(fields()[55].schema(), other.currentImprId);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.sourceImprId)) {
        this.sourceImprId = data().deepCopy(fields()[56].schema(), other.sourceImprId);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.oldSessionSkey)) {
        this.oldSessionSkey = data().deepCopy(fields()[57].schema(), other.oldSessionSkey);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.partialValidPage)) {
        this.partialValidPage = data().deepCopy(fields()[58].schema(), other.partialValidPage);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.botFlags)) {
        this.botFlags = data().deepCopy(fields()[59].schema(), other.botFlags);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.icfBinary)) {
        this.icfBinary = data().deepCopy(fields()[60].schema(), other.icfBinary);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.eventCnt)) {
        this.eventCnt = data().deepCopy(fields()[61].schema(), other.eventCnt);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.referrer)) {
        this.referrer = data().deepCopy(fields()[62].schema(), other.referrer);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.forwardedFor)) {
        this.forwardedFor = data().deepCopy(fields()[63].schema(), other.forwardedFor);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.rv)) {
        this.rv = data().deepCopy(fields()[64].schema(), other.rv);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.sojHeader)) {
        this.sojHeader = data().deepCopy(fields()[65].schema(), other.sojHeader);
        fieldSetFlags()[65] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SojEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(SojEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      this.rheosHeaderBuilder = null;
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[2].schema(), other.eventTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventCaptureTime)) {
        this.eventCaptureTime = data().deepCopy(fields()[3].schema(), other.eventCaptureTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestCorrelationId)) {
        this.requestCorrelationId = data().deepCopy(fields()[4].schema(), other.requestCorrelationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cguid)) {
        this.cguid = data().deepCopy(fields()[5].schema(), other.cguid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sid)) {
        this.sid = data().deepCopy(fields()[6].schema(), other.sid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pageId)) {
        this.pageId = data().deepCopy(fields()[7].schema(), other.pageId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pageName)) {
        this.pageName = data().deepCopy(fields()[8].schema(), other.pageName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.pageFamily)) {
        this.pageFamily = data().deepCopy(fields()[9].schema(), other.pageFamily);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.eventFamily)) {
        this.eventFamily = data().deepCopy(fields()[10].schema(), other.eventFamily);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.eventAction)) {
        this.eventAction = data().deepCopy(fields()[11].schema(), other.eventAction);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.userId)) {
        this.userId = data().deepCopy(fields()[12].schema(), other.userId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.clickId)) {
        this.clickId = data().deepCopy(fields()[13].schema(), other.clickId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.siteId)) {
        this.siteId = data().deepCopy(fields()[14].schema(), other.siteId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[15].schema(), other.sessionId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.seqNum)) {
        this.seqNum = data().deepCopy(fields()[16].schema(), other.seqNum);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ciid)) {
        this.ciid = data().deepCopy(fields()[17].schema(), other.ciid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.siid)) {
        this.siid = data().deepCopy(fields()[18].schema(), other.siid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.rdt)) {
        this.rdt = data().deepCopy(fields()[19].schema(), other.rdt);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.regu)) {
        this.regu = data().deepCopy(fields()[20].schema(), other.regu);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.iframe)) {
        this.iframe = data().deepCopy(fields()[21].schema(), other.iframe);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.refererHash)) {
        this.refererHash = data().deepCopy(fields()[22].schema(), other.refererHash);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.sqr)) {
        this.sqr = data().deepCopy(fields()[23].schema(), other.sqr);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.itemId)) {
        this.itemId = data().deepCopy(fields()[24].schema(), other.itemId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.flags)) {
        this.flags = data().deepCopy(fields()[25].schema(), other.flags);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.urlQueryString)) {
        this.urlQueryString = data().deepCopy(fields()[26].schema(), other.urlQueryString);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.webServer)) {
        this.webServer = data().deepCopy(fields()[27].schema(), other.webServer);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.cookies)) {
        this.cookies = data().deepCopy(fields()[28].schema(), other.cookies);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.bot)) {
        this.bot = data().deepCopy(fields()[29].schema(), other.bot);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.clientIP)) {
        this.clientIP = data().deepCopy(fields()[30].schema(), other.clientIP);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.remoteIP)) {
        this.remoteIP = data().deepCopy(fields()[31].schema(), other.remoteIP);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.agentInfo)) {
        this.agentInfo = data().deepCopy(fields()[32].schema(), other.agentInfo);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.appId)) {
        this.appId = data().deepCopy(fields()[33].schema(), other.appId);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.appVersion)) {
        this.appVersion = data().deepCopy(fields()[34].schema(), other.appVersion);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.osVersion)) {
        this.osVersion = data().deepCopy(fields()[35].schema(), other.osVersion);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.trafficSource)) {
        this.trafficSource = data().deepCopy(fields()[36].schema(), other.trafficSource);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.cobrand)) {
        this.cobrand = data().deepCopy(fields()[37].schema(), other.cobrand);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.deviceFamily)) {
        this.deviceFamily = data().deepCopy(fields()[38].schema(), other.deviceFamily);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.deviceType)) {
        this.deviceType = data().deepCopy(fields()[39].schema(), other.deviceType);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.browserVersion)) {
        this.browserVersion = data().deepCopy(fields()[40].schema(), other.browserVersion);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.browserFamily)) {
        this.browserFamily = data().deepCopy(fields()[41].schema(), other.browserFamily);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.osFamily)) {
        this.osFamily = data().deepCopy(fields()[42].schema(), other.osFamily);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.enrichedOsVersion)) {
        this.enrichedOsVersion = data().deepCopy(fields()[43].schema(), other.enrichedOsVersion);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.applicationPayload)) {
        this.applicationPayload = data().deepCopy(fields()[44].schema(), other.applicationPayload);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.rlogid)) {
        this.rlogid = data().deepCopy(fields()[45].schema(), other.rlogid);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.clientData)) {
        this.clientData = data().deepCopy(fields()[46].schema(), other.clientData);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.ingestTime)) {
        this.ingestTime = data().deepCopy(fields()[47].schema(), other.ingestTime);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.sessionSkey)) {
        this.sessionSkey = data().deepCopy(fields()[48].schema(), other.sessionSkey);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[49].schema(), other.sessionStartDt);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.sojDataDt)) {
        this.sojDataDt = data().deepCopy(fields()[50].schema(), other.sojDataDt);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.version)) {
        this.version = data().deepCopy(fields()[51].schema(), other.version);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.staticPageType)) {
        this.staticPageType = data().deepCopy(fields()[52].schema(), other.staticPageType);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.reservedForFuture)) {
        this.reservedForFuture = data().deepCopy(fields()[53].schema(), other.reservedForFuture);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.eventAttr)) {
        this.eventAttr = data().deepCopy(fields()[54].schema(), other.eventAttr);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.currentImprId)) {
        this.currentImprId = data().deepCopy(fields()[55].schema(), other.currentImprId);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.sourceImprId)) {
        this.sourceImprId = data().deepCopy(fields()[56].schema(), other.sourceImprId);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.oldSessionSkey)) {
        this.oldSessionSkey = data().deepCopy(fields()[57].schema(), other.oldSessionSkey);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.partialValidPage)) {
        this.partialValidPage = data().deepCopy(fields()[58].schema(), other.partialValidPage);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.botFlags)) {
        this.botFlags = data().deepCopy(fields()[59].schema(), other.botFlags);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.icfBinary)) {
        this.icfBinary = data().deepCopy(fields()[60].schema(), other.icfBinary);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.eventCnt)) {
        this.eventCnt = data().deepCopy(fields()[61].schema(), other.eventCnt);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.referrer)) {
        this.referrer = data().deepCopy(fields()[62].schema(), other.referrer);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.forwardedFor)) {
        this.forwardedFor = data().deepCopy(fields()[63].schema(), other.forwardedFor);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.rv)) {
        this.rv = data().deepCopy(fields()[64].schema(), other.rv);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.sojHeader)) {
        this.sojHeader = data().deepCopy(fields()[65].schema(), other.sojHeader);
        fieldSetFlags()[65] = true;
      }
    }

    /**
      * Gets the value of the 'rheosHeader' field.
      * Rheos header
      * @return The value.
      */
    public RheosHeader getRheosHeader() {
      return rheosHeader;
    }

    /**
      * Sets the value of the 'rheosHeader' field.
      * Rheos header
      * @param value The value of 'rheosHeader'.
      * @return This builder.
      */
    public SojEvent.Builder setRheosHeader(RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeaderBuilder = null;
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rheosHeader' field has been set.
      * Rheos header
      * @return True if the 'rheosHeader' field has been set, false otherwise.
      */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'rheosHeader' field and creates one if it doesn't exist yet.
     * Rheos header
     * @return This builder.
     */
    public RheosHeader.Builder getRheosHeaderBuilder() {
      if (rheosHeaderBuilder == null) {
        if (hasRheosHeader()) {
          setRheosHeaderBuilder(RheosHeader.newBuilder(rheosHeader));
        } else {
          setRheosHeaderBuilder(RheosHeader.newBuilder());
        }
      }
      return rheosHeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'rheosHeader' field
     * Rheos header
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public SojEvent.Builder setRheosHeaderBuilder(RheosHeader.Builder value) {
      clearRheosHeader();
      rheosHeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'rheosHeader' field has an active Builder instance
     * Rheos header
     * @return True if the 'rheosHeader' field has an active Builder instance
     */
    public boolean hasRheosHeaderBuilder() {
      return rheosHeaderBuilder != null;
    }

    /**
      * Clears the value of the 'rheosHeader' field.
      * Rheos header
      * @return This builder.
      */
    public SojEvent.Builder clearRheosHeader() {
      rheosHeader = null;
      rheosHeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'guid' field.
      * @return The value.
      */
    public java.lang.String getGuid() {
      return guid;
    }

    /**
      * Sets the value of the 'guid' field.
      * @param value The value of 'guid'.
      * @return This builder.
      */
    public SojEvent.Builder setGuid(java.lang.String value) {
      validate(fields()[1], value);
      this.guid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'guid' field has been set.
      * @return True if the 'guid' field has been set, false otherwise.
      */
    public boolean hasGuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'guid' field.
      * @return This builder.
      */
    public SojEvent.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTimestamp' field.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @return The value.
      */
    public java.lang.Long getEventTimestamp() {
      return eventTimestamp;
    }

    /**
      * Sets the value of the 'eventTimestamp' field.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @param value The value of 'eventTimestamp'.
      * @return This builder.
      */
    public SojEvent.Builder setEventTimestamp(long value) {
      validate(fields()[2], value);
      this.eventTimestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTimestamp' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @return True if the 'eventTimestamp' field has been set, false otherwise.
      */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'eventTimestamp' field.
      * dataClassification=Internal|isEncrypted=false|description=map from timestamp, publish time
      * @return This builder.
      */
    public SojEvent.Builder clearEventTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventCaptureTime' field.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @return The value.
      */
    public java.lang.Long getEventCaptureTime() {
      return eventCaptureTime;
    }

    /**
      * Sets the value of the 'eventCaptureTime' field.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @param value The value of 'eventCaptureTime'.
      * @return This builder.
      */
    public SojEvent.Builder setEventCaptureTime(java.lang.Long value) {
      validate(fields()[3], value);
      this.eventCaptureTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'eventCaptureTime' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @return True if the 'eventCaptureTime' field has been set, false otherwise.
      */
    public boolean hasEventCaptureTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'eventCaptureTime' field.
      * dataClassification=Internal|isEncrypted=false|description=mobile specific, map from mtsts, used for mobile case
      * @return This builder.
      */
    public SojEvent.Builder clearEventCaptureTime() {
      eventCaptureTime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestCorrelationId' field.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @return The value.
      */
    public java.lang.String getRequestCorrelationId() {
      return requestCorrelationId;
    }

    /**
      * Sets the value of the 'requestCorrelationId' field.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @param value The value of 'requestCorrelationId'.
      * @return This builder.
      */
    public SojEvent.Builder setRequestCorrelationId(java.lang.String value) {
      validate(fields()[4], value);
      this.requestCorrelationId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'requestCorrelationId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @return True if the 'requestCorrelationId' field has been set, false otherwise.
      */
    public boolean hasRequestCorrelationId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'requestCorrelationId' field.
      * dataClassification=Internal|isEncrypted=false|description=request correlation id, map from tag rq
      * @return This builder.
      */
    public SojEvent.Builder clearRequestCorrelationId() {
      requestCorrelationId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'cguid' field.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @return The value.
      */
    public java.lang.String getCguid() {
      return cguid;
    }

    /**
      * Sets the value of the 'cguid' field.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @param value The value of 'cguid'.
      * @return This builder.
      */
    public SojEvent.Builder setCguid(java.lang.String value) {
      validate(fields()[5], value);
      this.cguid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'cguid' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @return True if the 'cguid' field has been set, false otherwise.
      */
    public boolean hasCguid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'cguid' field.
      * dataClassification=Internal|isEncrypted=false|description=correlation guid, map from tag n
      * @return This builder.
      */
    public SojEvent.Builder clearCguid() {
      cguid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sid' field.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @return The value.
      */
    public java.lang.String getSid() {
      return sid;
    }

    /**
      * Sets the value of the 'sid' field.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @param value The value of 'sid'.
      * @return This builder.
      */
    public SojEvent.Builder setSid(java.lang.String value) {
      validate(fields()[6], value);
      this.sid = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sid' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @return True if the 'sid' field has been set, false otherwise.
      */
    public boolean hasSid() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sid' field.
      * dataClassification=Internal|isEncrypted=false|description=Sojourner key for source id
      * @return This builder.
      */
    public SojEvent.Builder clearSid() {
      sid = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @return The value.
      */
    public java.lang.Integer getPageId() {
      return pageId;
    }

    /**
      * Sets the value of the 'pageId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @param value The value of 'pageId'.
      * @return This builder.
      */
    public SojEvent.Builder setPageId(java.lang.Integer value) {
      validate(fields()[7], value);
      this.pageId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'pageId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @return True if the 'pageId' field has been set, false otherwise.
      */
    public boolean hasPageId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'pageId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag p
      * @return This builder.
      */
    public SojEvent.Builder clearPageId() {
      pageId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageName' field.
      * @return The value.
      */
    public java.lang.String getPageName() {
      return pageName;
    }

    /**
      * Sets the value of the 'pageName' field.
      * @param value The value of 'pageName'.
      * @return This builder.
      */
    public SojEvent.Builder setPageName(java.lang.String value) {
      validate(fields()[8], value);
      this.pageName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'pageName' field has been set.
      * @return True if the 'pageName' field has been set, false otherwise.
      */
    public boolean hasPageName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'pageName' field.
      * @return This builder.
      */
    public SojEvent.Builder clearPageName() {
      pageName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'pageFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @return The value.
      */
    public java.lang.String getPageFamily() {
      return pageFamily;
    }

    /**
      * Sets the value of the 'pageFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @param value The value of 'pageFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setPageFamily(java.lang.String value) {
      validate(fields()[9], value);
      this.pageFamily = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'pageFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @return True if the 'pageFamily' field has been set, false otherwise.
      */
    public boolean hasPageFamily() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'pageFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag pgf
      * @return This builder.
      */
    public SojEvent.Builder clearPageFamily() {
      pageFamily = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @return The value.
      */
    public java.lang.String getEventFamily() {
      return eventFamily;
    }

    /**
      * Sets the value of the 'eventFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @param value The value of 'eventFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setEventFamily(java.lang.String value) {
      validate(fields()[10], value);
      this.eventFamily = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'eventFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @return True if the 'eventFamily' field has been set, false otherwise.
      */
    public boolean hasEventFamily() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'eventFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from efam of pulsar event, event family
      * @return This builder.
      */
    public SojEvent.Builder clearEventFamily() {
      eventFamily = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventAction' field.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @return The value.
      */
    public java.lang.String getEventAction() {
      return eventAction;
    }

    /**
      * Sets the value of the 'eventAction' field.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @param value The value of 'eventAction'.
      * @return This builder.
      */
    public SojEvent.Builder setEventAction(java.lang.String value) {
      validate(fields()[11], value);
      this.eventAction = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'eventAction' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @return True if the 'eventAction' field has been set, false otherwise.
      */
    public boolean hasEventAction() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'eventAction' field.
      * dataClassification=Internal|isEncrypted=false|description=map from eactn of pulsar event, event action
      * @return This builder.
      */
    public SojEvent.Builder clearEventAction() {
      eventAction = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @return The value.
      */
    public java.lang.String getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public SojEvent.Builder setUserId(java.lang.String value) {
      validate(fields()[12], value);
      this.userId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'userId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag u/bu
      * @return This builder.
      */
    public SojEvent.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'clickId' field.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @return The value.
      */
    public java.lang.String getClickId() {
      return clickId;
    }

    /**
      * Sets the value of the 'clickId' field.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @param value The value of 'clickId'.
      * @return This builder.
      */
    public SojEvent.Builder setClickId(java.lang.String value) {
      validate(fields()[13], value);
      this.clickId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'clickId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @return True if the 'clickId' field has been set, false otherwise.
      */
    public boolean hasClickId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'clickId' field.
      * dataClassification=Internal|isEncrypted=false|description=Click Id, map from tag c
      * @return This builder.
      */
    public SojEvent.Builder clearClickId() {
      clickId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'siteId' field.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @return The value.
      */
    public java.lang.String getSiteId() {
      return siteId;
    }

    /**
      * Sets the value of the 'siteId' field.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @param value The value of 'siteId'.
      * @return This builder.
      */
    public SojEvent.Builder setSiteId(java.lang.String value) {
      validate(fields()[14], value);
      this.siteId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'siteId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @return True if the 'siteId' field has been set, false otherwise.
      */
    public boolean hasSiteId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'siteId' field.
      * dataClassification=Internal|isEncrypted=false|description=Site ID, map from tag t
      * @return This builder.
      */
    public SojEvent.Builder clearSiteId() {
      siteId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @return The value.
      */
    public java.lang.String getSessionId() {
      return sessionId;
    }

    /**
      * Sets the value of the 'sessionId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public SojEvent.Builder setSessionId(java.lang.String value) {
      validate(fields()[15], value);
      this.sessionId = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snid
      * @return This builder.
      */
    public SojEvent.Builder clearSessionId() {
      sessionId = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'seqNum' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @return The value.
      */
    public java.lang.String getSeqNum() {
      return seqNum;
    }

    /**
      * Sets the value of the 'seqNum' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @param value The value of 'seqNum'.
      * @return This builder.
      */
    public SojEvent.Builder setSeqNum(java.lang.String value) {
      validate(fields()[16], value);
      this.seqNum = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'seqNum' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @return True if the 'seqNum' field has been set, false otherwise.
      */
    public boolean hasSeqNum() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'seqNum' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag snsq
      * @return This builder.
      */
    public SojEvent.Builder clearSeqNum() {
      seqNum = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'ciid' field.
      * @return The value.
      */
    public java.lang.String getCiid() {
      return ciid;
    }

    /**
      * Sets the value of the 'ciid' field.
      * @param value The value of 'ciid'.
      * @return This builder.
      */
    public SojEvent.Builder setCiid(java.lang.String value) {
      validate(fields()[17], value);
      this.ciid = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'ciid' field has been set.
      * @return True if the 'ciid' field has been set, false otherwise.
      */
    public boolean hasCiid() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'ciid' field.
      * @return This builder.
      */
    public SojEvent.Builder clearCiid() {
      ciid = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'siid' field.
      * @return The value.
      */
    public java.lang.String getSiid() {
      return siid;
    }

    /**
      * Sets the value of the 'siid' field.
      * @param value The value of 'siid'.
      * @return This builder.
      */
    public SojEvent.Builder setSiid(java.lang.String value) {
      validate(fields()[18], value);
      this.siid = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'siid' field has been set.
      * @return True if the 'siid' field has been set, false otherwise.
      */
    public boolean hasSiid() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'siid' field.
      * @return This builder.
      */
    public SojEvent.Builder clearSiid() {
      siid = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'rdt' field.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @return The value.
      */
    public java.lang.Integer getRdt() {
      return rdt;
    }

    /**
      * Sets the value of the 'rdt' field.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @param value The value of 'rdt'.
      * @return This builder.
      */
    public SojEvent.Builder setRdt(java.lang.Integer value) {
      validate(fields()[19], value);
      this.rdt = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'rdt' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @return True if the 'rdt' field has been set, false otherwise.
      */
    public boolean hasRdt() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'rdt' field.
      * dataClassification=Internal|isEncrypted=false|description=1 indicates that the command redirected to another URL
      * @return This builder.
      */
    public SojEvent.Builder clearRdt() {
      rdt = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'regu' field.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @return The value.
      */
    public java.lang.Integer getRegu() {
      return regu;
    }

    /**
      * Sets the value of the 'regu' field.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @param value The value of 'regu'.
      * @return This builder.
      */
    public SojEvent.Builder setRegu(java.lang.Integer value) {
      validate(fields()[20], value);
      this.regu = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'regu' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @return True if the 'regu' field has been set, false otherwise.
      */
    public boolean hasRegu() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'regu' field.
      * dataClassification=Internal|isEncrypted=false|description=indicating that this is a registered user, map from tag regU
      * @return This builder.
      */
    public SojEvent.Builder clearRegu() {
      regu = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'iframe' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @return The value.
      */
    public java.lang.Boolean getIframe() {
      return iframe;
    }

    /**
      * Sets the value of the 'iframe' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @param value The value of 'iframe'.
      * @return This builder.
      */
    public SojEvent.Builder setIframe(java.lang.Boolean value) {
      validate(fields()[21], value);
      this.iframe = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'iframe' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @return True if the 'iframe' field has been set, false otherwise.
      */
    public boolean hasIframe() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'iframe' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag _ifrm
      * @return This builder.
      */
    public SojEvent.Builder clearIframe() {
      iframe = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'refererHash' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @return The value.
      */
    public java.lang.String getRefererHash() {
      return refererHash;
    }

    /**
      * Sets the value of the 'refererHash' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @param value The value of 'refererHash'.
      * @return This builder.
      */
    public SojEvent.Builder setRefererHash(java.lang.String value) {
      validate(fields()[22], value);
      this.refererHash = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'refererHash' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @return True if the 'refererHash' field has been set, false otherwise.
      */
    public boolean hasRefererHash() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'refererHash' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag r
      * @return This builder.
      */
    public SojEvent.Builder clearRefererHash() {
      refererHash = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'sqr' field.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @return The value.
      */
    public java.lang.String getSqr() {
      return sqr;
    }

    /**
      * Sets the value of the 'sqr' field.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @param value The value of 'sqr'.
      * @return This builder.
      */
    public SojEvent.Builder setSqr(java.lang.String value) {
      validate(fields()[23], value);
      this.sqr = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'sqr' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @return True if the 'sqr' field has been set, false otherwise.
      */
    public boolean hasSqr() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'sqr' field.
      * dataClassification=Internal|isEncrypted=false|description=search keyword, map from tag sQr
      * @return This builder.
      */
    public SojEvent.Builder clearSqr() {
      sqr = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @return The value.
      */
    public java.lang.String getItemId() {
      return itemId;
    }

    /**
      * Sets the value of the 'itemId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @param value The value of 'itemId'.
      * @return This builder.
      */
    public SojEvent.Builder setItemId(java.lang.String value) {
      validate(fields()[24], value);
      this.itemId = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'itemId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @return True if the 'itemId' field has been set, false otherwise.
      */
    public boolean hasItemId() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'itemId' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag itm/item
      * @return This builder.
      */
    public SojEvent.Builder clearItemId() {
      itemId = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'flags' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @return The value.
      */
    public java.lang.String getFlags() {
      return flags;
    }

    /**
      * Sets the value of the 'flags' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @param value The value of 'flags'.
      * @return This builder.
      */
    public SojEvent.Builder setFlags(java.lang.String value) {
      validate(fields()[25], value);
      this.flags = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'flags' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @return True if the 'flags' field has been set, false otherwise.
      */
    public boolean hasFlags() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'flags' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag flgs
      * @return This builder.
      */
    public SojEvent.Builder clearFlags() {
      flags = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'urlQueryString' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @return The value.
      */
    public java.lang.String getUrlQueryString() {
      return urlQueryString;
    }

    /**
      * Sets the value of the 'urlQueryString' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @param value The value of 'urlQueryString'.
      * @return This builder.
      */
    public SojEvent.Builder setUrlQueryString(java.lang.String value) {
      validate(fields()[26], value);
      this.urlQueryString = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'urlQueryString' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @return True if the 'urlQueryString' field has been set, false otherwise.
      */
    public boolean hasUrlQueryString() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'urlQueryString' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Referer
      * @return This builder.
      */
    public SojEvent.Builder clearUrlQueryString() {
      urlQueryString = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'webServer' field.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @return The value.
      */
    public java.lang.String getWebServer() {
      return webServer;
    }

    /**
      * Sets the value of the 'webServer' field.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @param value The value of 'webServer'.
      * @return This builder.
      */
    public SojEvent.Builder setWebServer(java.lang.String value) {
      validate(fields()[27], value);
      this.webServer = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'webServer' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @return True if the 'webServer' field has been set, false otherwise.
      */
    public boolean hasWebServer() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'webServer' field.
      * dataClassification=Internal|isEncrypted=false|description=web server, map from Server
      * @return This builder.
      */
    public SojEvent.Builder clearWebServer() {
      webServer = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'cookies' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @return The value.
      */
    public java.lang.String getCookies() {
      return cookies;
    }

    /**
      * Sets the value of the 'cookies' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @param value The value of 'cookies'.
      * @return This builder.
      */
    public SojEvent.Builder setCookies(java.lang.String value) {
      validate(fields()[28], value);
      this.cookies = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'cookies' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @return True if the 'cookies' field has been set, false otherwise.
      */
    public boolean hasCookies() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'cookies' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag ck/C
      * @return This builder.
      */
    public SojEvent.Builder clearCookies() {
      cookies = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'bot' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @return The value.
      */
    public java.lang.Integer getBot() {
      return bot;
    }

    /**
      * Sets the value of the 'bot' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @param value The value of 'bot'.
      * @return This builder.
      */
    public SojEvent.Builder setBot(java.lang.Integer value) {
      validate(fields()[29], value);
      this.bot = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'bot' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @return True if the 'bot' field has been set, false otherwise.
      */
    public boolean hasBot() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'bot' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag bott
      * @return This builder.
      */
    public SojEvent.Builder clearBot() {
      bot = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientIP' field.
      * @return The value.
      */
    public java.lang.String getClientIP() {
      return clientIP;
    }

    /**
      * Sets the value of the 'clientIP' field.
      * @param value The value of 'clientIP'.
      * @return This builder.
      */
    public SojEvent.Builder setClientIP(java.lang.String value) {
      validate(fields()[30], value);
      this.clientIP = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'clientIP' field has been set.
      * @return True if the 'clientIP' field has been set, false otherwise.
      */
    public boolean hasClientIP() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'clientIP' field.
      * @return This builder.
      */
    public SojEvent.Builder clearClientIP() {
      clientIP = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'remoteIP' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @return The value.
      */
    public java.lang.String getRemoteIP() {
      return remoteIP;
    }

    /**
      * Sets the value of the 'remoteIP' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @param value The value of 'remoteIP'.
      * @return This builder.
      */
    public SojEvent.Builder setRemoteIP(java.lang.String value) {
      validate(fields()[31], value);
      this.remoteIP = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'remoteIP' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @return True if the 'remoteIP' field has been set, false otherwise.
      */
    public boolean hasRemoteIP() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'remoteIP' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag RemoteIP
      * @return This builder.
      */
    public SojEvent.Builder clearRemoteIP() {
      remoteIP = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentInfo' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @return The value.
      */
    public java.lang.String getAgentInfo() {
      return agentInfo;
    }

    /**
      * Sets the value of the 'agentInfo' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @param value The value of 'agentInfo'.
      * @return This builder.
      */
    public SojEvent.Builder setAgentInfo(java.lang.String value) {
      validate(fields()[32], value);
      this.agentInfo = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'agentInfo' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @return True if the 'agentInfo' field has been set, false otherwise.
      */
    public boolean hasAgentInfo() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'agentInfo' field.
      * dataClassification=Internal|isEncrypted=false|description=map from tag Agent
      * @return This builder.
      */
    public SojEvent.Builder clearAgentInfo() {
      agentInfo = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'appId' field.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @return The value.
      */
    public java.lang.String getAppId() {
      return appId;
    }

    /**
      * Sets the value of the 'appId' field.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @param value The value of 'appId'.
      * @return This builder.
      */
    public SojEvent.Builder setAppId(java.lang.String value) {
      validate(fields()[33], value);
      this.appId = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'appId' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @return True if the 'appId' field has been set, false otherwise.
      */
    public boolean hasAppId() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'appId' field.
      * dataClassification=Internal|isEncrypted=false|description=application ID, map from tag app
      * @return This builder.
      */
    public SojEvent.Builder clearAppId() {
      appId = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'appVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @return The value.
      */
    public java.lang.String getAppVersion() {
      return appVersion;
    }

    /**
      * Sets the value of the 'appVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @param value The value of 'appVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setAppVersion(java.lang.String value) {
      validate(fields()[34], value);
      this.appVersion = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'appVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @return True if the 'appVersion' field has been set, false otherwise.
      */
    public boolean hasAppVersion() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'appVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=application version, map from mav
      * @return This builder.
      */
    public SojEvent.Builder clearAppVersion() {
      appVersion = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'osVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @return The value.
      */
    public java.lang.String getOsVersion() {
      return osVersion;
    }

    /**
      * Sets the value of the 'osVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @param value The value of 'osVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setOsVersion(java.lang.String value) {
      validate(fields()[35], value);
      this.osVersion = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'osVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @return True if the 'osVersion' field has been set, false otherwise.
      */
    public boolean hasOsVersion() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'osVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=operation system version, map from osv
      * @return This builder.
      */
    public SojEvent.Builder clearOsVersion() {
      osVersion = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'trafficSource' field.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @return The value.
      */
    public java.lang.String getTrafficSource() {
      return trafficSource;
    }

    /**
      * Sets the value of the 'trafficSource' field.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @param value The value of 'trafficSource'.
      * @return This builder.
      */
    public SojEvent.Builder setTrafficSource(java.lang.String value) {
      validate(fields()[36], value);
      this.trafficSource = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'trafficSource' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @return True if the 'trafficSource' field has been set, false otherwise.
      */
    public boolean hasTrafficSource() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'trafficSource' field.
      * dataClassification=Internal|isEncrypted=false|description=map from trffc_src
      * @return This builder.
      */
    public SojEvent.Builder clearTrafficSource() {
      trafficSource = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'cobrand' field.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @return The value.
      */
    public java.lang.String getCobrand() {
      return cobrand;
    }

    /**
      * Sets the value of the 'cobrand' field.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @param value The value of 'cobrand'.
      * @return This builder.
      */
    public SojEvent.Builder setCobrand(java.lang.String value) {
      validate(fields()[37], value);
      this.cobrand = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'cobrand' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @return True if the 'cobrand' field has been set, false otherwise.
      */
    public boolean hasCobrand() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'cobrand' field.
      * dataClassification=Internal|isEncrypted=false|description=map from cbrnd
      * @return This builder.
      */
    public SojEvent.Builder clearCobrand() {
      cobrand = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @return The value.
      */
    public java.lang.String getDeviceFamily() {
      return deviceFamily;
    }

    /**
      * Sets the value of the 'deviceFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @param value The value of 'deviceFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setDeviceFamily(java.lang.String value) {
      validate(fields()[38], value);
      this.deviceFamily = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @return True if the 'deviceFamily' field has been set, false otherwise.
      */
    public boolean hasDeviceFamily() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'deviceFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_d
      * @return This builder.
      */
    public SojEvent.Builder clearDeviceFamily() {
      deviceFamily = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceType' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @return The value.
      */
    public java.lang.String getDeviceType() {
      return deviceType;
    }

    /**
      * Sets the value of the 'deviceType' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @param value The value of 'deviceType'.
      * @return This builder.
      */
    public SojEvent.Builder setDeviceType(java.lang.String value) {
      validate(fields()[39], value);
      this.deviceType = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceType' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @return True if the 'deviceType' field has been set, false otherwise.
      */
    public boolean hasDeviceType() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'deviceType' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_dc
      * @return This builder.
      */
    public SojEvent.Builder clearDeviceType() {
      deviceType = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'browserVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @return The value.
      */
    public java.lang.String getBrowserVersion() {
      return browserVersion;
    }

    /**
      * Sets the value of the 'browserVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @param value The value of 'browserVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setBrowserVersion(java.lang.String value) {
      validate(fields()[40], value);
      this.browserVersion = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'browserVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @return True if the 'browserVersion' field has been set, false otherwise.
      */
    public boolean hasBrowserVersion() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'browserVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bv
      * @return This builder.
      */
    public SojEvent.Builder clearBrowserVersion() {
      browserVersion = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'browserFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @return The value.
      */
    public java.lang.String getBrowserFamily() {
      return browserFamily;
    }

    /**
      * Sets the value of the 'browserFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @param value The value of 'browserFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setBrowserFamily(java.lang.String value) {
      validate(fields()[41], value);
      this.browserFamily = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'browserFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @return True if the 'browserFamily' field has been set, false otherwise.
      */
    public boolean hasBrowserFamily() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'browserFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_bf
      * @return This builder.
      */
    public SojEvent.Builder clearBrowserFamily() {
      browserFamily = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'osFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @return The value.
      */
    public java.lang.String getOsFamily() {
      return osFamily;
    }

    /**
      * Sets the value of the 'osFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @param value The value of 'osFamily'.
      * @return This builder.
      */
    public SojEvent.Builder setOsFamily(java.lang.String value) {
      validate(fields()[42], value);
      this.osFamily = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'osFamily' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @return True if the 'osFamily' field has been set, false otherwise.
      */
    public boolean hasOsFamily() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'osFamily' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_os
      * @return This builder.
      */
    public SojEvent.Builder clearOsFamily() {
      osFamily = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'enrichedOsVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @return The value.
      */
    public java.lang.String getEnrichedOsVersion() {
      return enrichedOsVersion;
    }

    /**
      * Sets the value of the 'enrichedOsVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @param value The value of 'enrichedOsVersion'.
      * @return This builder.
      */
    public SojEvent.Builder setEnrichedOsVersion(java.lang.String value) {
      validate(fields()[43], value);
      this.enrichedOsVersion = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'enrichedOsVersion' field has been set.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @return True if the 'enrichedOsVersion' field has been set, false otherwise.
      */
    public boolean hasEnrichedOsVersion() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'enrichedOsVersion' field.
      * dataClassification=Internal|isEncrypted=false|description=map from dd_osv
      * @return This builder.
      */
    public SojEvent.Builder clearEnrichedOsVersion() {
      enrichedOsVersion = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationPayload' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getApplicationPayload() {
      return applicationPayload;
    }

    /**
      * Sets the value of the 'applicationPayload' field.
      * @param value The value of 'applicationPayload'.
      * @return This builder.
      */
    public SojEvent.Builder setApplicationPayload(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[44], value);
      this.applicationPayload = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationPayload' field has been set.
      * @return True if the 'applicationPayload' field has been set, false otherwise.
      */
    public boolean hasApplicationPayload() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'applicationPayload' field.
      * @return This builder.
      */
    public SojEvent.Builder clearApplicationPayload() {
      applicationPayload = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'rlogid' field.
      * CAL request log id
      * @return The value.
      */
    public java.lang.String getRlogid() {
      return rlogid;
    }

    /**
      * Sets the value of the 'rlogid' field.
      * CAL request log id
      * @param value The value of 'rlogid'.
      * @return This builder.
      */
    public SojEvent.Builder setRlogid(java.lang.String value) {
      validate(fields()[45], value);
      this.rlogid = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'rlogid' field has been set.
      * CAL request log id
      * @return True if the 'rlogid' field has been set, false otherwise.
      */
    public boolean hasRlogid() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'rlogid' field.
      * CAL request log id
      * @return This builder.
      */
    public SojEvent.Builder clearRlogid() {
      rlogid = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientData' field.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getClientData() {
      return clientData;
    }

    /**
      * Sets the value of the 'clientData' field.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @param value The value of 'clientData'.
      * @return This builder.
      */
    public SojEvent.Builder setClientData(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[46], value);
      this.clientData = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'clientData' field has been set.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @return True if the 'clientData' field has been set, false otherwise.
      */
    public boolean hasClientData() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'clientData' field.
      * Includes ForwardFor, ContentLength, Script, Server, Encoding, TMachine, TStamp, TName, TStatus, TDuration, TPayload
      * @return This builder.
      */
    public SojEvent.Builder clearClientData() {
      clientData = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'ingestTime' field.
      * @return The value.
      */
    public java.lang.Long getIngestTime() {
      return ingestTime;
    }

    /**
      * Sets the value of the 'ingestTime' field.
      * @param value The value of 'ingestTime'.
      * @return This builder.
      */
    public SojEvent.Builder setIngestTime(java.lang.Long value) {
      validate(fields()[47], value);
      this.ingestTime = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'ingestTime' field has been set.
      * @return True if the 'ingestTime' field has been set, false otherwise.
      */
    public boolean hasIngestTime() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'ingestTime' field.
      * @return This builder.
      */
    public SojEvent.Builder clearIngestTime() {
      ingestTime = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionSkey' field.
      * @return The value.
      */
    public java.lang.Long getSessionSkey() {
      return sessionSkey;
    }

    /**
      * Sets the value of the 'sessionSkey' field.
      * @param value The value of 'sessionSkey'.
      * @return This builder.
      */
    public SojEvent.Builder setSessionSkey(java.lang.Long value) {
      validate(fields()[48], value);
      this.sessionSkey = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionSkey' field has been set.
      * @return True if the 'sessionSkey' field has been set, false otherwise.
      */
    public boolean hasSessionSkey() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'sessionSkey' field.
      * @return This builder.
      */
    public SojEvent.Builder clearSessionSkey() {
      sessionSkey = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionStartDt' field.
      * @return The value.
      */
    public java.lang.Long getSessionStartDt() {
      return sessionStartDt;
    }

    /**
      * Sets the value of the 'sessionStartDt' field.
      * @param value The value of 'sessionStartDt'.
      * @return This builder.
      */
    public SojEvent.Builder setSessionStartDt(java.lang.Long value) {
      validate(fields()[49], value);
      this.sessionStartDt = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionStartDt' field has been set.
      * @return True if the 'sessionStartDt' field has been set, false otherwise.
      */
    public boolean hasSessionStartDt() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'sessionStartDt' field.
      * @return This builder.
      */
    public SojEvent.Builder clearSessionStartDt() {
      sessionStartDt = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'sojDataDt' field.
      * @return The value.
      */
    public java.lang.Long getSojDataDt() {
      return sojDataDt;
    }

    /**
      * Sets the value of the 'sojDataDt' field.
      * @param value The value of 'sojDataDt'.
      * @return This builder.
      */
    public SojEvent.Builder setSojDataDt(java.lang.Long value) {
      validate(fields()[50], value);
      this.sojDataDt = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'sojDataDt' field has been set.
      * @return True if the 'sojDataDt' field has been set, false otherwise.
      */
    public boolean hasSojDataDt() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'sojDataDt' field.
      * @return This builder.
      */
    public SojEvent.Builder clearSojDataDt() {
      sojDataDt = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Integer getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public SojEvent.Builder setVersion(java.lang.Integer value) {
      validate(fields()[51], value);
      this.version = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public SojEvent.Builder clearVersion() {
      version = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'staticPageType' field.
      * @return The value.
      */
    public java.lang.Integer getStaticPageType() {
      return staticPageType;
    }

    /**
      * Sets the value of the 'staticPageType' field.
      * @param value The value of 'staticPageType'.
      * @return This builder.
      */
    public SojEvent.Builder setStaticPageType(java.lang.Integer value) {
      validate(fields()[52], value);
      this.staticPageType = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'staticPageType' field has been set.
      * @return True if the 'staticPageType' field has been set, false otherwise.
      */
    public boolean hasStaticPageType() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'staticPageType' field.
      * @return This builder.
      */
    public SojEvent.Builder clearStaticPageType() {
      staticPageType = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'reservedForFuture' field.
      * @return The value.
      */
    public java.lang.Integer getReservedForFuture() {
      return reservedForFuture;
    }

    /**
      * Sets the value of the 'reservedForFuture' field.
      * @param value The value of 'reservedForFuture'.
      * @return This builder.
      */
    public SojEvent.Builder setReservedForFuture(java.lang.Integer value) {
      validate(fields()[53], value);
      this.reservedForFuture = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'reservedForFuture' field has been set.
      * @return True if the 'reservedForFuture' field has been set, false otherwise.
      */
    public boolean hasReservedForFuture() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'reservedForFuture' field.
      * @return This builder.
      */
    public SojEvent.Builder clearReservedForFuture() {
      reservedForFuture = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventAttr' field.
      * @return The value.
      */
    public java.lang.String getEventAttr() {
      return eventAttr;
    }

    /**
      * Sets the value of the 'eventAttr' field.
      * @param value The value of 'eventAttr'.
      * @return This builder.
      */
    public SojEvent.Builder setEventAttr(java.lang.String value) {
      validate(fields()[54], value);
      this.eventAttr = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'eventAttr' field has been set.
      * @return True if the 'eventAttr' field has been set, false otherwise.
      */
    public boolean hasEventAttr() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'eventAttr' field.
      * @return This builder.
      */
    public SojEvent.Builder clearEventAttr() {
      eventAttr = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'currentImprId' field.
      * @return The value.
      */
    public java.lang.Long getCurrentImprId() {
      return currentImprId;
    }

    /**
      * Sets the value of the 'currentImprId' field.
      * @param value The value of 'currentImprId'.
      * @return This builder.
      */
    public SojEvent.Builder setCurrentImprId(java.lang.Long value) {
      validate(fields()[55], value);
      this.currentImprId = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'currentImprId' field has been set.
      * @return True if the 'currentImprId' field has been set, false otherwise.
      */
    public boolean hasCurrentImprId() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'currentImprId' field.
      * @return This builder.
      */
    public SojEvent.Builder clearCurrentImprId() {
      currentImprId = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceImprId' field.
      * @return The value.
      */
    public java.lang.Long getSourceImprId() {
      return sourceImprId;
    }

    /**
      * Sets the value of the 'sourceImprId' field.
      * @param value The value of 'sourceImprId'.
      * @return This builder.
      */
    public SojEvent.Builder setSourceImprId(java.lang.Long value) {
      validate(fields()[56], value);
      this.sourceImprId = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceImprId' field has been set.
      * @return True if the 'sourceImprId' field has been set, false otherwise.
      */
    public boolean hasSourceImprId() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'sourceImprId' field.
      * @return This builder.
      */
    public SojEvent.Builder clearSourceImprId() {
      sourceImprId = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'oldSessionSkey' field.
      * @return The value.
      */
    public java.lang.Long getOldSessionSkey() {
      return oldSessionSkey;
    }

    /**
      * Sets the value of the 'oldSessionSkey' field.
      * @param value The value of 'oldSessionSkey'.
      * @return This builder.
      */
    public SojEvent.Builder setOldSessionSkey(java.lang.Long value) {
      validate(fields()[57], value);
      this.oldSessionSkey = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'oldSessionSkey' field has been set.
      * @return True if the 'oldSessionSkey' field has been set, false otherwise.
      */
    public boolean hasOldSessionSkey() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'oldSessionSkey' field.
      * @return This builder.
      */
    public SojEvent.Builder clearOldSessionSkey() {
      oldSessionSkey = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'partialValidPage' field.
      * @return The value.
      */
    public java.lang.Boolean getPartialValidPage() {
      return partialValidPage;
    }

    /**
      * Sets the value of the 'partialValidPage' field.
      * @param value The value of 'partialValidPage'.
      * @return This builder.
      */
    public SojEvent.Builder setPartialValidPage(java.lang.Boolean value) {
      validate(fields()[58], value);
      this.partialValidPage = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'partialValidPage' field has been set.
      * @return True if the 'partialValidPage' field has been set, false otherwise.
      */
    public boolean hasPartialValidPage() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'partialValidPage' field.
      * @return This builder.
      */
    public SojEvent.Builder clearPartialValidPage() {
      partialValidPage = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'botFlags' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getBotFlags() {
      return botFlags;
    }

    /**
      * Sets the value of the 'botFlags' field.
      * @param value The value of 'botFlags'.
      * @return This builder.
      */
    public SojEvent.Builder setBotFlags(java.util.List<java.lang.Integer> value) {
      validate(fields()[59], value);
      this.botFlags = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'botFlags' field has been set.
      * @return True if the 'botFlags' field has been set, false otherwise.
      */
    public boolean hasBotFlags() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'botFlags' field.
      * @return This builder.
      */
    public SojEvent.Builder clearBotFlags() {
      botFlags = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'icfBinary' field.
      * @return The value.
      */
    public java.lang.Long getIcfBinary() {
      return icfBinary;
    }

    /**
      * Sets the value of the 'icfBinary' field.
      * @param value The value of 'icfBinary'.
      * @return This builder.
      */
    public SojEvent.Builder setIcfBinary(java.lang.Long value) {
      validate(fields()[60], value);
      this.icfBinary = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'icfBinary' field has been set.
      * @return True if the 'icfBinary' field has been set, false otherwise.
      */
    public boolean hasIcfBinary() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'icfBinary' field.
      * @return This builder.
      */
    public SojEvent.Builder clearIcfBinary() {
      icfBinary = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventCnt' field.
      * @return The value.
      */
    public java.lang.Long getEventCnt() {
      return eventCnt;
    }

    /**
      * Sets the value of the 'eventCnt' field.
      * @param value The value of 'eventCnt'.
      * @return This builder.
      */
    public SojEvent.Builder setEventCnt(java.lang.Long value) {
      validate(fields()[61], value);
      this.eventCnt = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'eventCnt' field has been set.
      * @return True if the 'eventCnt' field has been set, false otherwise.
      */
    public boolean hasEventCnt() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'eventCnt' field.
      * @return This builder.
      */
    public SojEvent.Builder clearEventCnt() {
      eventCnt = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'referrer' field.
      * @return The value.
      */
    public java.lang.String getReferrer() {
      return referrer;
    }

    /**
      * Sets the value of the 'referrer' field.
      * @param value The value of 'referrer'.
      * @return This builder.
      */
    public SojEvent.Builder setReferrer(java.lang.String value) {
      validate(fields()[62], value);
      this.referrer = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'referrer' field has been set.
      * @return True if the 'referrer' field has been set, false otherwise.
      */
    public boolean hasReferrer() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'referrer' field.
      * @return This builder.
      */
    public SojEvent.Builder clearReferrer() {
      referrer = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /**
      * Gets the value of the 'forwardedFor' field.
      * @return The value.
      */
    public java.lang.String getForwardedFor() {
      return forwardedFor;
    }

    /**
      * Sets the value of the 'forwardedFor' field.
      * @param value The value of 'forwardedFor'.
      * @return This builder.
      */
    public SojEvent.Builder setForwardedFor(java.lang.String value) {
      validate(fields()[63], value);
      this.forwardedFor = value;
      fieldSetFlags()[63] = true;
      return this;
    }

    /**
      * Checks whether the 'forwardedFor' field has been set.
      * @return True if the 'forwardedFor' field has been set, false otherwise.
      */
    public boolean hasForwardedFor() {
      return fieldSetFlags()[63];
    }


    /**
      * Clears the value of the 'forwardedFor' field.
      * @return This builder.
      */
    public SojEvent.Builder clearForwardedFor() {
      forwardedFor = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /**
      * Gets the value of the 'rv' field.
      * @return The value.
      */
    public java.lang.Boolean getRv() {
      return rv;
    }

    /**
      * Sets the value of the 'rv' field.
      * @param value The value of 'rv'.
      * @return This builder.
      */
    public SojEvent.Builder setRv(java.lang.Boolean value) {
      validate(fields()[64], value);
      this.rv = value;
      fieldSetFlags()[64] = true;
      return this;
    }

    /**
      * Checks whether the 'rv' field has been set.
      * @return True if the 'rv' field has been set, false otherwise.
      */
    public boolean hasRv() {
      return fieldSetFlags()[64];
    }


    /**
      * Clears the value of the 'rv' field.
      * @return This builder.
      */
    public SojEvent.Builder clearRv() {
      rv = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    /**
      * Gets the value of the 'sojHeader' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.nio.ByteBuffer> getSojHeader() {
      return sojHeader;
    }

    /**
      * Sets the value of the 'sojHeader' field.
      * @param value The value of 'sojHeader'.
      * @return This builder.
      */
    public SojEvent.Builder setSojHeader(java.util.Map<java.lang.String,java.nio.ByteBuffer> value) {
      validate(fields()[65], value);
      this.sojHeader = value;
      fieldSetFlags()[65] = true;
      return this;
    }

    /**
      * Checks whether the 'sojHeader' field has been set.
      * @return True if the 'sojHeader' field has been set, false otherwise.
      */
    public boolean hasSojHeader() {
      return fieldSetFlags()[65];
    }


    /**
      * Clears the value of the 'sojHeader' field.
      * @return This builder.
      */
    public SojEvent.Builder clearSojHeader() {
      sojHeader = null;
      fieldSetFlags()[65] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SojEvent build() {
      try {
        SojEvent record = new SojEvent();
        if (rheosHeaderBuilder != null) {
          record.rheosHeader = this.rheosHeaderBuilder.build();
        } else {
          record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader : (RheosHeader) defaultValue(fields()[0]);
        }
        record.guid = fieldSetFlags()[1] ? this.guid : (java.lang.String) defaultValue(fields()[1]);
        record.eventTimestamp = fieldSetFlags()[2] ? this.eventTimestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.eventCaptureTime = fieldSetFlags()[3] ? this.eventCaptureTime : (java.lang.Long) defaultValue(fields()[3]);
        record.requestCorrelationId = fieldSetFlags()[4] ? this.requestCorrelationId : (java.lang.String) defaultValue(fields()[4]);
        record.cguid = fieldSetFlags()[5] ? this.cguid : (java.lang.String) defaultValue(fields()[5]);
        record.sid = fieldSetFlags()[6] ? this.sid : (java.lang.String) defaultValue(fields()[6]);
        record.pageId = fieldSetFlags()[7] ? this.pageId : (java.lang.Integer) defaultValue(fields()[7]);
        record.pageName = fieldSetFlags()[8] ? this.pageName : (java.lang.String) defaultValue(fields()[8]);
        record.pageFamily = fieldSetFlags()[9] ? this.pageFamily : (java.lang.String) defaultValue(fields()[9]);
        record.eventFamily = fieldSetFlags()[10] ? this.eventFamily : (java.lang.String) defaultValue(fields()[10]);
        record.eventAction = fieldSetFlags()[11] ? this.eventAction : (java.lang.String) defaultValue(fields()[11]);
        record.userId = fieldSetFlags()[12] ? this.userId : (java.lang.String) defaultValue(fields()[12]);
        record.clickId = fieldSetFlags()[13] ? this.clickId : (java.lang.String) defaultValue(fields()[13]);
        record.siteId = fieldSetFlags()[14] ? this.siteId : (java.lang.String) defaultValue(fields()[14]);
        record.sessionId = fieldSetFlags()[15] ? this.sessionId : (java.lang.String) defaultValue(fields()[15]);
        record.seqNum = fieldSetFlags()[16] ? this.seqNum : (java.lang.String) defaultValue(fields()[16]);
        record.ciid = fieldSetFlags()[17] ? this.ciid : (java.lang.String) defaultValue(fields()[17]);
        record.siid = fieldSetFlags()[18] ? this.siid : (java.lang.String) defaultValue(fields()[18]);
        record.rdt = fieldSetFlags()[19] ? this.rdt : (java.lang.Integer) defaultValue(fields()[19]);
        record.regu = fieldSetFlags()[20] ? this.regu : (java.lang.Integer) defaultValue(fields()[20]);
        record.iframe = fieldSetFlags()[21] ? this.iframe : (java.lang.Boolean) defaultValue(fields()[21]);
        record.refererHash = fieldSetFlags()[22] ? this.refererHash : (java.lang.String) defaultValue(fields()[22]);
        record.sqr = fieldSetFlags()[23] ? this.sqr : (java.lang.String) defaultValue(fields()[23]);
        record.itemId = fieldSetFlags()[24] ? this.itemId : (java.lang.String) defaultValue(fields()[24]);
        record.flags = fieldSetFlags()[25] ? this.flags : (java.lang.String) defaultValue(fields()[25]);
        record.urlQueryString = fieldSetFlags()[26] ? this.urlQueryString : (java.lang.String) defaultValue(fields()[26]);
        record.webServer = fieldSetFlags()[27] ? this.webServer : (java.lang.String) defaultValue(fields()[27]);
        record.cookies = fieldSetFlags()[28] ? this.cookies : (java.lang.String) defaultValue(fields()[28]);
        record.bot = fieldSetFlags()[29] ? this.bot : (java.lang.Integer) defaultValue(fields()[29]);
        record.clientIP = fieldSetFlags()[30] ? this.clientIP : (java.lang.String) defaultValue(fields()[30]);
        record.remoteIP = fieldSetFlags()[31] ? this.remoteIP : (java.lang.String) defaultValue(fields()[31]);
        record.agentInfo = fieldSetFlags()[32] ? this.agentInfo : (java.lang.String) defaultValue(fields()[32]);
        record.appId = fieldSetFlags()[33] ? this.appId : (java.lang.String) defaultValue(fields()[33]);
        record.appVersion = fieldSetFlags()[34] ? this.appVersion : (java.lang.String) defaultValue(fields()[34]);
        record.osVersion = fieldSetFlags()[35] ? this.osVersion : (java.lang.String) defaultValue(fields()[35]);
        record.trafficSource = fieldSetFlags()[36] ? this.trafficSource : (java.lang.String) defaultValue(fields()[36]);
        record.cobrand = fieldSetFlags()[37] ? this.cobrand : (java.lang.String) defaultValue(fields()[37]);
        record.deviceFamily = fieldSetFlags()[38] ? this.deviceFamily : (java.lang.String) defaultValue(fields()[38]);
        record.deviceType = fieldSetFlags()[39] ? this.deviceType : (java.lang.String) defaultValue(fields()[39]);
        record.browserVersion = fieldSetFlags()[40] ? this.browserVersion : (java.lang.String) defaultValue(fields()[40]);
        record.browserFamily = fieldSetFlags()[41] ? this.browserFamily : (java.lang.String) defaultValue(fields()[41]);
        record.osFamily = fieldSetFlags()[42] ? this.osFamily : (java.lang.String) defaultValue(fields()[42]);
        record.enrichedOsVersion = fieldSetFlags()[43] ? this.enrichedOsVersion : (java.lang.String) defaultValue(fields()[43]);
        record.applicationPayload = fieldSetFlags()[44] ? this.applicationPayload : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[44]);
        record.rlogid = fieldSetFlags()[45] ? this.rlogid : (java.lang.String) defaultValue(fields()[45]);
        record.clientData = fieldSetFlags()[46] ? this.clientData : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[46]);
        record.ingestTime = fieldSetFlags()[47] ? this.ingestTime : (java.lang.Long) defaultValue(fields()[47]);
        record.sessionSkey = fieldSetFlags()[48] ? this.sessionSkey : (java.lang.Long) defaultValue(fields()[48]);
        record.sessionStartDt = fieldSetFlags()[49] ? this.sessionStartDt : (java.lang.Long) defaultValue(fields()[49]);
        record.sojDataDt = fieldSetFlags()[50] ? this.sojDataDt : (java.lang.Long) defaultValue(fields()[50]);
        record.version = fieldSetFlags()[51] ? this.version : (java.lang.Integer) defaultValue(fields()[51]);
        record.staticPageType = fieldSetFlags()[52] ? this.staticPageType : (java.lang.Integer) defaultValue(fields()[52]);
        record.reservedForFuture = fieldSetFlags()[53] ? this.reservedForFuture : (java.lang.Integer) defaultValue(fields()[53]);
        record.eventAttr = fieldSetFlags()[54] ? this.eventAttr : (java.lang.String) defaultValue(fields()[54]);
        record.currentImprId = fieldSetFlags()[55] ? this.currentImprId : (java.lang.Long) defaultValue(fields()[55]);
        record.sourceImprId = fieldSetFlags()[56] ? this.sourceImprId : (java.lang.Long) defaultValue(fields()[56]);
        record.oldSessionSkey = fieldSetFlags()[57] ? this.oldSessionSkey : (java.lang.Long) defaultValue(fields()[57]);
        record.partialValidPage = fieldSetFlags()[58] ? this.partialValidPage : (java.lang.Boolean) defaultValue(fields()[58]);
        record.botFlags = fieldSetFlags()[59] ? this.botFlags : (java.util.List<java.lang.Integer>) defaultValue(fields()[59]);
        record.icfBinary = fieldSetFlags()[60] ? this.icfBinary : (java.lang.Long) defaultValue(fields()[60]);
        record.eventCnt = fieldSetFlags()[61] ? this.eventCnt : (java.lang.Long) defaultValue(fields()[61]);
        record.referrer = fieldSetFlags()[62] ? this.referrer : (java.lang.String) defaultValue(fields()[62]);
        record.forwardedFor = fieldSetFlags()[63] ? this.forwardedFor : (java.lang.String) defaultValue(fields()[63]);
        record.rv = fieldSetFlags()[64] ? this.rv : (java.lang.Boolean) defaultValue(fields()[64]);
        record.sojHeader = fieldSetFlags()[65] ? this.sojHeader : (java.util.Map<java.lang.String,java.nio.ByteBuffer>) defaultValue(fields()[65]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SojEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<SojEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SojEvent>
    READER$ = (org.apache.avro.io.DatumReader<SojEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
