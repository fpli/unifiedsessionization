/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.epic.common.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UniSession extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4956898180481590837L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UniSession\",\"namespace\":\"com.ebay.epic.common.model\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"doc\":\"Rheos header\"},{\"name\":\"guid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"from ubisession guid\"},{\"name\":\"globalSessionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"from unisession globalSessionId\"},{\"name\":\"absStartTimestamp\",\"type\":[\"null\",\"long\"],\"doc\":\"from unisession absStartTimestamp\"},{\"name\":\"absEndTimestamp\",\"type\":[\"null\",\"long\"],\"doc\":\"from unisession absEndTimestamp\"},{\"name\":\"sessionStartDt\",\"type\":[\"null\",\"long\"],\"doc\":\"from unisession sessionStartDt\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UniSession> ENCODER =
      new BinaryMessageEncoder<UniSession>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UniSession> DECODER =
      new BinaryMessageDecoder<UniSession>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<UniSession> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<UniSession> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UniSession>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this UniSession to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a UniSession from a ByteBuffer. */
  public static UniSession fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Rheos header */
  @Deprecated public com.ebay.epic.common.model.RheosHeader rheosHeader;
  /** from ubisession guid */
  @Deprecated public java.lang.String guid;
  /** from unisession globalSessionId */
  @Deprecated public java.lang.String globalSessionId;
  /** from unisession absStartTimestamp */
  @Deprecated public java.lang.Long absStartTimestamp;
  /** from unisession absEndTimestamp */
  @Deprecated public java.lang.Long absEndTimestamp;
  /** from unisession sessionStartDt */
  @Deprecated public java.lang.Long sessionStartDt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UniSession() {}

  /**
   * All-args constructor.
   * @param rheosHeader Rheos header
   * @param guid from ubisession guid
   * @param globalSessionId from unisession globalSessionId
   * @param absStartTimestamp from unisession absStartTimestamp
   * @param absEndTimestamp from unisession absEndTimestamp
   * @param sessionStartDt from unisession sessionStartDt
   */
  public UniSession(com.ebay.epic.common.model.RheosHeader rheosHeader, java.lang.String guid, java.lang.String globalSessionId, java.lang.Long absStartTimestamp, java.lang.Long absEndTimestamp, java.lang.Long sessionStartDt) {
    this.rheosHeader = rheosHeader;
    this.guid = guid;
    this.globalSessionId = globalSessionId;
    this.absStartTimestamp = absStartTimestamp;
    this.absEndTimestamp = absEndTimestamp;
    this.sessionStartDt = sessionStartDt;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rheosHeader;
    case 1: return guid;
    case 2: return globalSessionId;
    case 3: return absStartTimestamp;
    case 4: return absEndTimestamp;
    case 5: return sessionStartDt;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rheosHeader = (com.ebay.epic.common.model.RheosHeader)value$; break;
    case 1: guid = (java.lang.String)value$; break;
    case 2: globalSessionId = (java.lang.String)value$; break;
    case 3: absStartTimestamp = (java.lang.Long)value$; break;
    case 4: absEndTimestamp = (java.lang.Long)value$; break;
    case 5: sessionStartDt = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field.
   * @return Rheos header
   */
  public com.ebay.epic.common.model.RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field.
   * Rheos header
   * @param value the value to set.
   */
  public void setRheosHeader(com.ebay.epic.common.model.RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'guid' field.
   * @return from ubisession guid
   */
  public java.lang.String getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field.
   * from ubisession guid
   * @param value the value to set.
   */
  public void setGuid(java.lang.String value) {
    this.guid = value;
  }

  /**
   * Gets the value of the 'globalSessionId' field.
   * @return from unisession globalSessionId
   */
  public java.lang.String getGlobalSessionId() {
    return globalSessionId;
  }

  /**
   * Sets the value of the 'globalSessionId' field.
   * from unisession globalSessionId
   * @param value the value to set.
   */
  public void setGlobalSessionId(java.lang.String value) {
    this.globalSessionId = value;
  }

  /**
   * Gets the value of the 'absStartTimestamp' field.
   * @return from unisession absStartTimestamp
   */
  public java.lang.Long getAbsStartTimestamp() {
    return absStartTimestamp;
  }

  /**
   * Sets the value of the 'absStartTimestamp' field.
   * from unisession absStartTimestamp
   * @param value the value to set.
   */
  public void setAbsStartTimestamp(java.lang.Long value) {
    this.absStartTimestamp = value;
  }

  /**
   * Gets the value of the 'absEndTimestamp' field.
   * @return from unisession absEndTimestamp
   */
  public java.lang.Long getAbsEndTimestamp() {
    return absEndTimestamp;
  }

  /**
   * Sets the value of the 'absEndTimestamp' field.
   * from unisession absEndTimestamp
   * @param value the value to set.
   */
  public void setAbsEndTimestamp(java.lang.Long value) {
    this.absEndTimestamp = value;
  }

  /**
   * Gets the value of the 'sessionStartDt' field.
   * @return from unisession sessionStartDt
   */
  public java.lang.Long getSessionStartDt() {
    return sessionStartDt;
  }

  /**
   * Sets the value of the 'sessionStartDt' field.
   * from unisession sessionStartDt
   * @param value the value to set.
   */
  public void setSessionStartDt(java.lang.Long value) {
    this.sessionStartDt = value;
  }

  /**
   * Creates a new UniSession RecordBuilder.
   * @return A new UniSession RecordBuilder
   */
  public static com.ebay.epic.common.model.UniSession.Builder newBuilder() {
    return new com.ebay.epic.common.model.UniSession.Builder();
  }

  /**
   * Creates a new UniSession RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UniSession RecordBuilder
   */
  public static com.ebay.epic.common.model.UniSession.Builder newBuilder(com.ebay.epic.common.model.UniSession.Builder other) {
    return new com.ebay.epic.common.model.UniSession.Builder(other);
  }

  /**
   * Creates a new UniSession RecordBuilder by copying an existing UniSession instance.
   * @param other The existing instance to copy.
   * @return A new UniSession RecordBuilder
   */
  public static com.ebay.epic.common.model.UniSession.Builder newBuilder(com.ebay.epic.common.model.UniSession other) {
    return new com.ebay.epic.common.model.UniSession.Builder(other);
  }

  /**
   * RecordBuilder for UniSession instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UniSession>
    implements org.apache.avro.data.RecordBuilder<UniSession> {

    /** Rheos header */
    private com.ebay.epic.common.model.RheosHeader rheosHeader;
    private com.ebay.epic.common.model.RheosHeader.Builder rheosHeaderBuilder;
    /** from ubisession guid */
    private java.lang.String guid;
    /** from unisession globalSessionId */
    private java.lang.String globalSessionId;
    /** from unisession absStartTimestamp */
    private java.lang.Long absStartTimestamp;
    /** from unisession absEndTimestamp */
    private java.lang.Long absEndTimestamp;
    /** from unisession sessionStartDt */
    private java.lang.Long sessionStartDt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.epic.common.model.UniSession.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (other.hasRheosHeaderBuilder()) {
        this.rheosHeaderBuilder = com.ebay.epic.common.model.RheosHeader.newBuilder(other.getRheosHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.globalSessionId)) {
        this.globalSessionId = data().deepCopy(fields()[2].schema(), other.globalSessionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.absStartTimestamp)) {
        this.absStartTimestamp = data().deepCopy(fields()[3].schema(), other.absStartTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.absEndTimestamp)) {
        this.absEndTimestamp = data().deepCopy(fields()[4].schema(), other.absEndTimestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[5].schema(), other.sessionStartDt);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UniSession instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.epic.common.model.UniSession other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      this.rheosHeaderBuilder = null;
      if (isValidValue(fields()[1], other.guid)) {
        this.guid = data().deepCopy(fields()[1].schema(), other.guid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.globalSessionId)) {
        this.globalSessionId = data().deepCopy(fields()[2].schema(), other.globalSessionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.absStartTimestamp)) {
        this.absStartTimestamp = data().deepCopy(fields()[3].schema(), other.absStartTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.absEndTimestamp)) {
        this.absEndTimestamp = data().deepCopy(fields()[4].schema(), other.absEndTimestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sessionStartDt)) {
        this.sessionStartDt = data().deepCopy(fields()[5].schema(), other.sessionStartDt);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'rheosHeader' field.
      * Rheos header
      * @return The value.
      */
    public com.ebay.epic.common.model.RheosHeader getRheosHeader() {
      return rheosHeader;
    }

    /**
      * Sets the value of the 'rheosHeader' field.
      * Rheos header
      * @param value The value of 'rheosHeader'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder setRheosHeader(com.ebay.epic.common.model.RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeaderBuilder = null;
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rheosHeader' field has been set.
      * Rheos header
      * @return True if the 'rheosHeader' field has been set, false otherwise.
      */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'rheosHeader' field and creates one if it doesn't exist yet.
     * Rheos header
     * @return This builder.
     */
    public com.ebay.epic.common.model.RheosHeader.Builder getRheosHeaderBuilder() {
      if (rheosHeaderBuilder == null) {
        if (hasRheosHeader()) {
          setRheosHeaderBuilder(com.ebay.epic.common.model.RheosHeader.newBuilder(rheosHeader));
        } else {
          setRheosHeaderBuilder(com.ebay.epic.common.model.RheosHeader.newBuilder());
        }
      }
      return rheosHeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'rheosHeader' field
     * Rheos header
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.epic.common.model.UniSession.Builder setRheosHeaderBuilder(com.ebay.epic.common.model.RheosHeader.Builder value) {
      clearRheosHeader();
      rheosHeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'rheosHeader' field has an active Builder instance
     * Rheos header
     * @return True if the 'rheosHeader' field has an active Builder instance
     */
    public boolean hasRheosHeaderBuilder() {
      return rheosHeaderBuilder != null;
    }

    /**
      * Clears the value of the 'rheosHeader' field.
      * Rheos header
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder clearRheosHeader() {
      rheosHeader = null;
      rheosHeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'guid' field.
      * from ubisession guid
      * @return The value.
      */
    public java.lang.String getGuid() {
      return guid;
    }

    /**
      * Sets the value of the 'guid' field.
      * from ubisession guid
      * @param value The value of 'guid'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder setGuid(java.lang.String value) {
      validate(fields()[1], value);
      this.guid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'guid' field has been set.
      * from ubisession guid
      * @return True if the 'guid' field has been set, false otherwise.
      */
    public boolean hasGuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'guid' field.
      * from ubisession guid
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'globalSessionId' field.
      * from unisession globalSessionId
      * @return The value.
      */
    public java.lang.String getGlobalSessionId() {
      return globalSessionId;
    }

    /**
      * Sets the value of the 'globalSessionId' field.
      * from unisession globalSessionId
      * @param value The value of 'globalSessionId'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder setGlobalSessionId(java.lang.String value) {
      validate(fields()[2], value);
      this.globalSessionId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'globalSessionId' field has been set.
      * from unisession globalSessionId
      * @return True if the 'globalSessionId' field has been set, false otherwise.
      */
    public boolean hasGlobalSessionId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'globalSessionId' field.
      * from unisession globalSessionId
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder clearGlobalSessionId() {
      globalSessionId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'absStartTimestamp' field.
      * from unisession absStartTimestamp
      * @return The value.
      */
    public java.lang.Long getAbsStartTimestamp() {
      return absStartTimestamp;
    }

    /**
      * Sets the value of the 'absStartTimestamp' field.
      * from unisession absStartTimestamp
      * @param value The value of 'absStartTimestamp'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder setAbsStartTimestamp(java.lang.Long value) {
      validate(fields()[3], value);
      this.absStartTimestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'absStartTimestamp' field has been set.
      * from unisession absStartTimestamp
      * @return True if the 'absStartTimestamp' field has been set, false otherwise.
      */
    public boolean hasAbsStartTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'absStartTimestamp' field.
      * from unisession absStartTimestamp
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder clearAbsStartTimestamp() {
      absStartTimestamp = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'absEndTimestamp' field.
      * from unisession absEndTimestamp
      * @return The value.
      */
    public java.lang.Long getAbsEndTimestamp() {
      return absEndTimestamp;
    }

    /**
      * Sets the value of the 'absEndTimestamp' field.
      * from unisession absEndTimestamp
      * @param value The value of 'absEndTimestamp'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder setAbsEndTimestamp(java.lang.Long value) {
      validate(fields()[4], value);
      this.absEndTimestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'absEndTimestamp' field has been set.
      * from unisession absEndTimestamp
      * @return True if the 'absEndTimestamp' field has been set, false otherwise.
      */
    public boolean hasAbsEndTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'absEndTimestamp' field.
      * from unisession absEndTimestamp
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder clearAbsEndTimestamp() {
      absEndTimestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionStartDt' field.
      * from unisession sessionStartDt
      * @return The value.
      */
    public java.lang.Long getSessionStartDt() {
      return sessionStartDt;
    }

    /**
      * Sets the value of the 'sessionStartDt' field.
      * from unisession sessionStartDt
      * @param value The value of 'sessionStartDt'.
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder setSessionStartDt(java.lang.Long value) {
      validate(fields()[5], value);
      this.sessionStartDt = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionStartDt' field has been set.
      * from unisession sessionStartDt
      * @return True if the 'sessionStartDt' field has been set, false otherwise.
      */
    public boolean hasSessionStartDt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'sessionStartDt' field.
      * from unisession sessionStartDt
      * @return This builder.
      */
    public com.ebay.epic.common.model.UniSession.Builder clearSessionStartDt() {
      sessionStartDt = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UniSession build() {
      try {
        UniSession record = new UniSession();
        if (rheosHeaderBuilder != null) {
          record.rheosHeader = this.rheosHeaderBuilder.build();
        } else {
          record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader : (com.ebay.epic.common.model.RheosHeader) defaultValue(fields()[0]);
        }
        record.guid = fieldSetFlags()[1] ? this.guid : (java.lang.String) defaultValue(fields()[1]);
        record.globalSessionId = fieldSetFlags()[2] ? this.globalSessionId : (java.lang.String) defaultValue(fields()[2]);
        record.absStartTimestamp = fieldSetFlags()[3] ? this.absStartTimestamp : (java.lang.Long) defaultValue(fields()[3]);
        record.absEndTimestamp = fieldSetFlags()[4] ? this.absEndTimestamp : (java.lang.Long) defaultValue(fields()[4]);
        record.sessionStartDt = fieldSetFlags()[5] ? this.sessionStartDt : (java.lang.Long) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UniSession>
    WRITER$ = (org.apache.avro.io.DatumWriter<UniSession>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UniSession>
    READER$ = (org.apache.avro.io.DatumReader<UniSession>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
